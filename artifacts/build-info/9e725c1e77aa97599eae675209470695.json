{
	"id": "9e725c1e77aa97599eae675209470695",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"TokenARS.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.27;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ncontract Token is ERC20 {\n  \n\n    constructor(address recipient, string memory _name, string memory _symbol)\n        ERC20( _name, _symbol)\n    \n    {\n        _mint(recipient, 100000 * 10 ** decimals());\n\n    }\n\n    function mint(address to, uint256 amount) public{\n        _mint(to, amount);\n    }\n\n       function buy() public payable {\n        _mint(msg.sender, msg.value);\n    }\n\n    function sell(uint256 amount) public payable {\n        _transfer(msg.sender, address(this), amount);\n        payable(msg.sender).transfer(amount);\n    }\n\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TokenARS.sol": {
				"Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "sell",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TokenARS.sol\":246:790  contract Token is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"TokenARS.sol\":280:456  constructor(address recipient, string memory _name, string memory _symbol)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"TokenARS.sol\":370:375  _name */\n  dup2\n    /* \"TokenARS.sol\":377:384  _symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"TokenARS.sol\":405:448  _mint(recipient, 100000 * 10 ** decimals()) */\n  tag_11\n    /* \"TokenARS.sol\":411:420  recipient */\n  dup4\n    /* \"TokenARS.sol\":437:447  decimals() */\n  tag_12\n    /* \"TokenARS.sol\":437:445  decimals */\n  shl(0x20, tag_13)\n    /* \"TokenARS.sol\":437:447  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"TokenARS.sol\":431:433  10 */\n  0x0a\n    /* \"TokenARS.sol\":431:447  10 ** decimals() */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"TokenARS.sol\":422:428  100000 */\n  0x0186a0\n    /* \"TokenARS.sol\":422:447  100000 * 10 ** decimals() */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"TokenARS.sol\":405:410  _mint */\n  shl(0x20, tag_18)\n    /* \"TokenARS.sol\":405:448  _mint(recipient, 100000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"TokenARS.sol\":280:456  constructor(address recipient, string memory _name, string memory _symbol)... */\n  pop\n  pop\n  pop\n    /* \"TokenARS.sol\":246:790  contract Token is ERC20 {... */\n  jump(tag_19)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_22\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_39:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_41:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_43:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_88\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_42\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_44:\n    /* \"#utility.yul\":641:665   */\n  tag_90\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_43\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_91:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_45:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_93\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_44\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_46:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  0x00\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1085   */\ntag_47:\n    /* \"#utility.yul\":1077:1078   */\n  0x00\n    /* \"#utility.yul\":1074:1075   */\n  0x00\n    /* \"#utility.yul\":1067:1079   */\n  revert\n    /* \"#utility.yul\":1091:1193   */\ntag_48:\n    /* \"#utility.yul\":1132:1138   */\n  0x00\n    /* \"#utility.yul\":1183:1185   */\n  0x1f\n    /* \"#utility.yul\":1179:1186   */\n  not\n    /* \"#utility.yul\":1174:1176   */\n  0x1f\n    /* \"#utility.yul\":1167:1172   */\n  dup4\n    /* \"#utility.yul\":1163:1177   */\n  add\n    /* \"#utility.yul\":1159:1187   */\n  and\n    /* \"#utility.yul\":1149:1187   */\n  swap1\n  pop\n    /* \"#utility.yul\":1091:1193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1199:1379   */\ntag_49:\n    /* \"#utility.yul\":1247:1324   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1244:1245   */\n  0x00\n    /* \"#utility.yul\":1237:1325   */\n  mstore\n    /* \"#utility.yul\":1344:1348   */\n  0x41\n    /* \"#utility.yul\":1341:1342   */\n  0x04\n    /* \"#utility.yul\":1334:1349   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1385:1666   */\ntag_50:\n    /* \"#utility.yul\":1468:1495   */\n  tag_99\n    /* \"#utility.yul\":1490:1494   */\n  dup3\n    /* \"#utility.yul\":1468:1495   */\n  tag_48\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1460:1466   */\n  dup2\n    /* \"#utility.yul\":1456:1496   */\n  add\n    /* \"#utility.yul\":1598:1604   */\n  dup2\n    /* \"#utility.yul\":1586:1596   */\n  dup2\n    /* \"#utility.yul\":1583:1605   */\n  lt\n    /* \"#utility.yul\":1562:1580   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1550:1560   */\n  dup3\n    /* \"#utility.yul\":1547:1581   */\n  gt\n    /* \"#utility.yul\":1544:1606   */\n  or\n    /* \"#utility.yul\":1541:1629   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":1609:1627   */\n  tag_101\n  tag_49\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1541:1629   */\ntag_100:\n    /* \"#utility.yul\":1649:1659   */\n  dup1\n    /* \"#utility.yul\":1645:1647   */\n  0x40\n    /* \"#utility.yul\":1638:1660   */\n  mstore\n    /* \"#utility.yul\":1428:1666   */\n  pop\n    /* \"#utility.yul\":1385:1666   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1672:1801   */\ntag_51:\n    /* \"#utility.yul\":1706:1712   */\n  0x00\n    /* \"#utility.yul\":1733:1753   */\n  tag_103\n  tag_39\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1723:1753   */\n  swap1\n  pop\n    /* \"#utility.yul\":1762:1795   */\n  tag_104\n    /* \"#utility.yul\":1790:1794   */\n  dup3\n    /* \"#utility.yul\":1782:1788   */\n  dup3\n    /* \"#utility.yul\":1762:1795   */\n  tag_50\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1672:1801   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:2115   */\ntag_52:\n    /* \"#utility.yul\":1869:1873   */\n  0x00\n    /* \"#utility.yul\":1959:1977   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1948:1978   */\n  gt\n    /* \"#utility.yul\":1945:2001   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":1981:1999   */\n  tag_107\n  tag_49\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1945:2001   */\ntag_106:\n    /* \"#utility.yul\":2019:2048   */\n  tag_108\n    /* \"#utility.yul\":2041:2047   */\n  dup3\n    /* \"#utility.yul\":2019:2048   */\n  tag_48\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2011:2048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2097:2101   */\n  dup2\n    /* \"#utility.yul\":2093:2108   */\n  add\n    /* \"#utility.yul\":2085:2108   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:2115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2121:2260   */\ntag_53:\n    /* \"#utility.yul\":2210:2216   */\n  dup3\n    /* \"#utility.yul\":2205:2208   */\n  dup2\n    /* \"#utility.yul\":2200:2203   */\n  dup4\n    /* \"#utility.yul\":2194:2217   */\n  mcopy\n    /* \"#utility.yul\":2251:2252   */\n  0x00\n    /* \"#utility.yul\":2242:2248   */\n  dup4\n    /* \"#utility.yul\":2237:2240   */\n  dup4\n    /* \"#utility.yul\":2233:2249   */\n  add\n    /* \"#utility.yul\":2226:2253   */\n  mstore\n    /* \"#utility.yul\":2121:2260   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2266:2700   */\ntag_54:\n    /* \"#utility.yul\":2355:2360   */\n  0x00\n    /* \"#utility.yul\":2380:2446   */\n  tag_111\n    /* \"#utility.yul\":2396:2445   */\n  tag_112\n    /* \"#utility.yul\":2438:2444   */\n  dup5\n    /* \"#utility.yul\":2396:2445   */\n  tag_52\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2380:2446   */\n  tag_51\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2371:2446   */\n  swap1\n  pop\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2462:2467   */\n  dup2\n    /* \"#utility.yul\":2455:2476   */\n  mstore\n    /* \"#utility.yul\":2507:2511   */\n  0x20\n    /* \"#utility.yul\":2500:2505   */\n  dup2\n    /* \"#utility.yul\":2496:2512   */\n  add\n    /* \"#utility.yul\":2545:2548   */\n  dup5\n    /* \"#utility.yul\":2536:2542   */\n  dup5\n    /* \"#utility.yul\":2531:2534   */\n  dup5\n    /* \"#utility.yul\":2527:2543   */\n  add\n    /* \"#utility.yul\":2524:2549   */\n  gt\n    /* \"#utility.yul\":2521:2633   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2552:2631   */\n  tag_114\n  tag_47\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2521:2633   */\ntag_113:\n    /* \"#utility.yul\":2642:2694   */\n  tag_115\n    /* \"#utility.yul\":2687:2693   */\n  dup5\n    /* \"#utility.yul\":2682:2685   */\n  dup3\n    /* \"#utility.yul\":2677:2680   */\n  dup6\n    /* \"#utility.yul\":2642:2694   */\n  tag_53\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2361:2700   */\n  pop\n    /* \"#utility.yul\":2266:2700   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2720:3075   */\ntag_55:\n    /* \"#utility.yul\":2787:2792   */\n  0x00\n    /* \"#utility.yul\":2836:2839   */\n  dup3\n    /* \"#utility.yul\":2829:2833   */\n  0x1f\n    /* \"#utility.yul\":2821:2827   */\n  dup4\n    /* \"#utility.yul\":2817:2834   */\n  add\n    /* \"#utility.yul\":2813:2840   */\n  slt\n    /* \"#utility.yul\":2803:2925   */\n  tag_117\n  jumpi\n    /* \"#utility.yul\":2844:2923   */\n  tag_118\n  tag_46\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2803:2925   */\ntag_117:\n    /* \"#utility.yul\":2954:2960   */\n  dup2\n    /* \"#utility.yul\":2948:2961   */\n  mload\n    /* \"#utility.yul\":2979:3069   */\n  tag_119\n    /* \"#utility.yul\":3065:3068   */\n  dup5\n    /* \"#utility.yul\":3057:3063   */\n  dup3\n    /* \"#utility.yul\":3050:3054   */\n  0x20\n    /* \"#utility.yul\":3042:3048   */\n  dup7\n    /* \"#utility.yul\":3038:3055   */\n  add\n    /* \"#utility.yul\":2979:3069   */\n  tag_54\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2970:3069   */\n  swap2\n  pop\n    /* \"#utility.yul\":2793:3075   */\n  pop\n    /* \"#utility.yul\":2720:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4090   */\ntag_3:\n    /* \"#utility.yul\":3189:3195   */\n  0x00\n    /* \"#utility.yul\":3197:3203   */\n  0x00\n    /* \"#utility.yul\":3205:3211   */\n  0x00\n    /* \"#utility.yul\":3254:3256   */\n  0x60\n    /* \"#utility.yul\":3242:3251   */\n  dup5\n    /* \"#utility.yul\":3233:3240   */\n  dup7\n    /* \"#utility.yul\":3229:3252   */\n  sub\n    /* \"#utility.yul\":3225:3257   */\n  slt\n    /* \"#utility.yul\":3222:3341   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":3260:3339   */\n  tag_122\n  tag_40\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3222:3341   */\ntag_121:\n    /* \"#utility.yul\":3380:3381   */\n  0x00\n    /* \"#utility.yul\":3405:3469   */\n  tag_123\n    /* \"#utility.yul\":3461:3468   */\n  dup7\n    /* \"#utility.yul\":3452:3458   */\n  dup3\n    /* \"#utility.yul\":3441:3450   */\n  dup8\n    /* \"#utility.yul\":3437:3459   */\n  add\n    /* \"#utility.yul\":3405:3469   */\n  tag_45\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3395:3469   */\n  swap4\n  pop\n    /* \"#utility.yul\":3351:3479   */\n  pop\n    /* \"#utility.yul\":3539:3541   */\n  0x20\n    /* \"#utility.yul\":3528:3537   */\n  dup5\n    /* \"#utility.yul\":3524:3542   */\n  add\n    /* \"#utility.yul\":3518:3543   */\n  mload\n    /* \"#utility.yul\":3570:3588   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3562:3568   */\n  dup2\n    /* \"#utility.yul\":3559:3589   */\n  gt\n    /* \"#utility.yul\":3556:3673   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":3592:3671   */\n  tag_125\n  tag_41\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3556:3673   */\ntag_124:\n    /* \"#utility.yul\":3697:3771   */\n  tag_126\n    /* \"#utility.yul\":3763:3770   */\n  dup7\n    /* \"#utility.yul\":3754:3760   */\n  dup3\n    /* \"#utility.yul\":3743:3752   */\n  dup8\n    /* \"#utility.yul\":3739:3761   */\n  add\n    /* \"#utility.yul\":3697:3771   */\n  tag_55\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3687:3771   */\n  swap3\n  pop\n    /* \"#utility.yul\":3489:3781   */\n  pop\n    /* \"#utility.yul\":3841:3843   */\n  0x40\n    /* \"#utility.yul\":3830:3839   */\n  dup5\n    /* \"#utility.yul\":3826:3844   */\n  add\n    /* \"#utility.yul\":3820:3845   */\n  mload\n    /* \"#utility.yul\":3872:3890   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3864:3870   */\n  dup2\n    /* \"#utility.yul\":3861:3891   */\n  gt\n    /* \"#utility.yul\":3858:3975   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":3894:3973   */\n  tag_128\n  tag_41\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3858:3975   */\ntag_127:\n    /* \"#utility.yul\":3999:4073   */\n  tag_129\n    /* \"#utility.yul\":4065:4072   */\n  dup7\n    /* \"#utility.yul\":4056:4062   */\n  dup3\n    /* \"#utility.yul\":4045:4054   */\n  dup8\n    /* \"#utility.yul\":4041:4063   */\n  add\n    /* \"#utility.yul\":3999:4073   */\n  tag_55\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3989:4073   */\n  swap2\n  pop\n    /* \"#utility.yul\":3791:4083   */\n  pop\n    /* \"#utility.yul\":3081:4090   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4096:4195   */\ntag_56:\n    /* \"#utility.yul\":4148:4154   */\n  0x00\n    /* \"#utility.yul\":4182:4187   */\n  dup2\n    /* \"#utility.yul\":4176:4188   */\n  mload\n    /* \"#utility.yul\":4166:4188   */\n  swap1\n  pop\n    /* \"#utility.yul\":4096:4195   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4201:4381   */\ntag_57:\n    /* \"#utility.yul\":4249:4326   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4246:4247   */\n  0x00\n    /* \"#utility.yul\":4239:4327   */\n  mstore\n    /* \"#utility.yul\":4346:4350   */\n  0x22\n    /* \"#utility.yul\":4343:4344   */\n  0x04\n    /* \"#utility.yul\":4336:4351   */\n  mstore\n    /* \"#utility.yul\":4370:4374   */\n  0x24\n    /* \"#utility.yul\":4367:4368   */\n  0x00\n    /* \"#utility.yul\":4360:4375   */\n  revert\n    /* \"#utility.yul\":4387:4707   */\ntag_58:\n    /* \"#utility.yul\":4431:4437   */\n  0x00\n    /* \"#utility.yul\":4468:4469   */\n  0x02\n    /* \"#utility.yul\":4462:4466   */\n  dup3\n    /* \"#utility.yul\":4458:4470   */\n  div\n    /* \"#utility.yul\":4448:4470   */\n  swap1\n  pop\n    /* \"#utility.yul\":4515:4516   */\n  0x01\n    /* \"#utility.yul\":4509:4513   */\n  dup3\n    /* \"#utility.yul\":4505:4517   */\n  and\n    /* \"#utility.yul\":4536:4554   */\n  dup1\n    /* \"#utility.yul\":4526:4607   */\n  tag_133\n  jumpi\n    /* \"#utility.yul\":4592:4596   */\n  0x7f\n    /* \"#utility.yul\":4584:4590   */\n  dup3\n    /* \"#utility.yul\":4580:4597   */\n  and\n    /* \"#utility.yul\":4570:4597   */\n  swap2\n  pop\n    /* \"#utility.yul\":4526:4607   */\ntag_133:\n    /* \"#utility.yul\":4654:4656   */\n  0x20\n    /* \"#utility.yul\":4646:4652   */\n  dup3\n    /* \"#utility.yul\":4643:4657   */\n  lt\n    /* \"#utility.yul\":4623:4641   */\n  dup2\n    /* \"#utility.yul\":4620:4658   */\n  sub\n    /* \"#utility.yul\":4617:4701   */\n  tag_134\n  jumpi\n    /* \"#utility.yul\":4673:4691   */\n  tag_135\n  tag_57\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4617:4701   */\ntag_134:\n    /* \"#utility.yul\":4438:4707   */\n  pop\n    /* \"#utility.yul\":4387:4707   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4713:4854   */\ntag_59:\n    /* \"#utility.yul\":4762:4766   */\n  0x00\n    /* \"#utility.yul\":4785:4788   */\n  dup2\n    /* \"#utility.yul\":4777:4788   */\n  swap1\n  pop\n    /* \"#utility.yul\":4808:4811   */\n  dup2\n    /* \"#utility.yul\":4805:4806   */\n  0x00\n    /* \"#utility.yul\":4798:4812   */\n  mstore\n    /* \"#utility.yul\":4842:4846   */\n  0x20\n    /* \"#utility.yul\":4839:4840   */\n  0x00\n    /* \"#utility.yul\":4829:4847   */\n  keccak256\n    /* \"#utility.yul\":4821:4847   */\n  swap1\n  pop\n    /* \"#utility.yul\":4713:4854   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4860:4953   */\ntag_60:\n    /* \"#utility.yul\":4897:4903   */\n  0x00\n    /* \"#utility.yul\":4944:4946   */\n  0x20\n    /* \"#utility.yul\":4939:4941   */\n  0x1f\n    /* \"#utility.yul\":4932:4937   */\n  dup4\n    /* \"#utility.yul\":4928:4942   */\n  add\n    /* \"#utility.yul\":4924:4947   */\n  div\n    /* \"#utility.yul\":4914:4947   */\n  swap1\n  pop\n    /* \"#utility.yul\":4860:4953   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4959:5066   */\ntag_61:\n    /* \"#utility.yul\":5003:5011   */\n  0x00\n    /* \"#utility.yul\":5053:5058   */\n  dup3\n    /* \"#utility.yul\":5047:5051   */\n  dup3\n    /* \"#utility.yul\":5043:5059   */\n  shl\n    /* \"#utility.yul\":5022:5059   */\n  swap1\n  pop\n    /* \"#utility.yul\":4959:5066   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5072:5465   */\ntag_62:\n    /* \"#utility.yul\":5141:5147   */\n  0x00\n    /* \"#utility.yul\":5191:5192   */\n  0x08\n    /* \"#utility.yul\":5179:5189   */\n  dup4\n    /* \"#utility.yul\":5175:5193   */\n  mul\n    /* \"#utility.yul\":5214:5311   */\n  tag_140\n    /* \"#utility.yul\":5244:5310   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5233:5242   */\n  dup3\n    /* \"#utility.yul\":5214:5311   */\n  tag_61\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5332:5371   */\n  tag_141\n    /* \"#utility.yul\":5362:5370   */\n  dup7\n    /* \"#utility.yul\":5351:5360   */\n  dup4\n    /* \"#utility.yul\":5332:5371   */\n  tag_61\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5320:5371   */\n  swap6\n  pop\n    /* \"#utility.yul\":5404:5408   */\n  dup1\n    /* \"#utility.yul\":5400:5409   */\n  not\n    /* \"#utility.yul\":5393:5398   */\n  dup5\n    /* \"#utility.yul\":5389:5410   */\n  and\n    /* \"#utility.yul\":5380:5410   */\n  swap4\n  pop\n    /* \"#utility.yul\":5453:5457   */\n  dup1\n    /* \"#utility.yul\":5443:5451   */\n  dup7\n    /* \"#utility.yul\":5439:5458   */\n  and\n    /* \"#utility.yul\":5432:5437   */\n  dup5\n    /* \"#utility.yul\":5429:5459   */\n  or\n    /* \"#utility.yul\":5419:5459   */\n  swap3\n  pop\n    /* \"#utility.yul\":5148:5465   */\n  pop\n  pop\n    /* \"#utility.yul\":5072:5465   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5471:5548   */\ntag_63:\n    /* \"#utility.yul\":5508:5515   */\n  0x00\n    /* \"#utility.yul\":5537:5542   */\n  dup2\n    /* \"#utility.yul\":5526:5542   */\n  swap1\n  pop\n    /* \"#utility.yul\":5471:5548   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5554:5614   */\ntag_64:\n    /* \"#utility.yul\":5582:5585   */\n  0x00\n    /* \"#utility.yul\":5603:5608   */\n  dup2\n    /* \"#utility.yul\":5596:5608   */\n  swap1\n  pop\n    /* \"#utility.yul\":5554:5614   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5620:5762   */\ntag_65:\n    /* \"#utility.yul\":5670:5679   */\n  0x00\n    /* \"#utility.yul\":5703:5756   */\n  tag_145\n    /* \"#utility.yul\":5721:5755   */\n  tag_146\n    /* \"#utility.yul\":5730:5754   */\n  tag_147\n    /* \"#utility.yul\":5748:5753   */\n  dup5\n    /* \"#utility.yul\":5730:5754   */\n  tag_63\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5721:5755   */\n  tag_64\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5703:5756   */\n  tag_63\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5690:5756   */\n  swap1\n  pop\n    /* \"#utility.yul\":5620:5762   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5768:5843   */\ntag_66:\n    /* \"#utility.yul\":5811:5814   */\n  0x00\n    /* \"#utility.yul\":5832:5837   */\n  dup2\n    /* \"#utility.yul\":5825:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5768:5843   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5849:6118   */\ntag_67:\n    /* \"#utility.yul\":5959:5998   */\n  tag_150\n    /* \"#utility.yul\":5990:5997   */\n  dup4\n    /* \"#utility.yul\":5959:5998   */\n  tag_65\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6020:6111   */\n  tag_151\n    /* \"#utility.yul\":6069:6110   */\n  tag_152\n    /* \"#utility.yul\":6093:6109   */\n  dup3\n    /* \"#utility.yul\":6069:6110   */\n  tag_66\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6061:6067   */\n  dup5\n    /* \"#utility.yul\":6054:6058   */\n  dup5\n    /* \"#utility.yul\":6048:6059   */\n  sload\n    /* \"#utility.yul\":6020:6111   */\n  tag_62\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6014:6018   */\n  dup3\n    /* \"#utility.yul\":6007:6112   */\n  sstore\n    /* \"#utility.yul\":5925:6118   */\n  pop\n    /* \"#utility.yul\":5849:6118   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6124:6197   */\ntag_68:\n    /* \"#utility.yul\":6169:6172   */\n  0x00\n    /* \"#utility.yul\":6190:6191   */\n  0x00\n    /* \"#utility.yul\":6183:6191   */\n  swap1\n  pop\n    /* \"#utility.yul\":6124:6197   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6203:6392   */\ntag_69:\n    /* \"#utility.yul\":6280:6312   */\n  tag_155\n  tag_68\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6321:6386   */\n  tag_156\n    /* \"#utility.yul\":6379:6385   */\n  dup2\n    /* \"#utility.yul\":6371:6377   */\n  dup5\n    /* \"#utility.yul\":6365:6369   */\n  dup5\n    /* \"#utility.yul\":6321:6386   */\n  tag_67\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6256:6392   */\n  pop\n    /* \"#utility.yul\":6203:6392   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6398:6584   */\ntag_70:\n    /* \"#utility.yul\":6458:6578   */\ntag_158:\n    /* \"#utility.yul\":6475:6478   */\n  dup2\n    /* \"#utility.yul\":6468:6473   */\n  dup2\n    /* \"#utility.yul\":6465:6479   */\n  lt\n    /* \"#utility.yul\":6458:6578   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":6529:6568   */\n  tag_161\n    /* \"#utility.yul\":6566:6567   */\n  0x00\n    /* \"#utility.yul\":6559:6564   */\n  dup3\n    /* \"#utility.yul\":6529:6568   */\n  tag_69\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6502:6503   */\n  0x01\n    /* \"#utility.yul\":6495:6500   */\n  dup2\n    /* \"#utility.yul\":6491:6504   */\n  add\n    /* \"#utility.yul\":6482:6504   */\n  swap1\n  pop\n    /* \"#utility.yul\":6458:6578   */\n  jump(tag_158)\ntag_160:\n    /* \"#utility.yul\":6398:6584   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6590:7133   */\ntag_71:\n    /* \"#utility.yul\":6691:6693   */\n  0x1f\n    /* \"#utility.yul\":6686:6689   */\n  dup3\n    /* \"#utility.yul\":6683:6694   */\n  gt\n    /* \"#utility.yul\":6680:7126   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":6725:6763   */\n  tag_164\n    /* \"#utility.yul\":6757:6762   */\n  dup2\n    /* \"#utility.yul\":6725:6763   */\n  tag_59\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6809:6838   */\n  tag_165\n    /* \"#utility.yul\":6827:6837   */\n  dup5\n    /* \"#utility.yul\":6809:6838   */\n  tag_60\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6799:6807   */\n  dup2\n    /* \"#utility.yul\":6795:6839   */\n  add\n    /* \"#utility.yul\":6992:6994   */\n  0x20\n    /* \"#utility.yul\":6980:6990   */\n  dup6\n    /* \"#utility.yul\":6977:6995   */\n  lt\n    /* \"#utility.yul\":6974:7023   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":7013:7021   */\n  dup2\n    /* \"#utility.yul\":6998:7021   */\n  swap1\n  pop\n    /* \"#utility.yul\":6974:7023   */\ntag_166:\n    /* \"#utility.yul\":7036:7116   */\n  tag_167\n    /* \"#utility.yul\":7092:7114   */\n  tag_168\n    /* \"#utility.yul\":7110:7113   */\n  dup6\n    /* \"#utility.yul\":7092:7114   */\n  tag_60\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7082:7090   */\n  dup4\n    /* \"#utility.yul\":7078:7115   */\n  add\n    /* \"#utility.yul\":7065:7076   */\n  dup3\n    /* \"#utility.yul\":7036:7116   */\n  tag_70\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6695:7126   */\n  pop\n  pop\n    /* \"#utility.yul\":6680:7126   */\ntag_163:\n    /* \"#utility.yul\":6590:7133   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7139:7256   */\ntag_72:\n    /* \"#utility.yul\":7193:7201   */\n  0x00\n    /* \"#utility.yul\":7243:7248   */\n  dup3\n    /* \"#utility.yul\":7237:7241   */\n  dup3\n    /* \"#utility.yul\":7233:7249   */\n  shr\n    /* \"#utility.yul\":7212:7249   */\n  swap1\n  pop\n    /* \"#utility.yul\":7139:7256   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7262:7431   */\ntag_73:\n    /* \"#utility.yul\":7306:7312   */\n  0x00\n    /* \"#utility.yul\":7339:7390   */\n  tag_171\n    /* \"#utility.yul\":7387:7388   */\n  0x00\n    /* \"#utility.yul\":7383:7389   */\n  not\n    /* \"#utility.yul\":7375:7380   */\n  dup5\n    /* \"#utility.yul\":7372:7373   */\n  0x08\n    /* \"#utility.yul\":7368:7381   */\n  mul\n    /* \"#utility.yul\":7339:7390   */\n  tag_72\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":7335:7391   */\n  not\n    /* \"#utility.yul\":7420:7424   */\n  dup1\n    /* \"#utility.yul\":7414:7418   */\n  dup4\n    /* \"#utility.yul\":7410:7425   */\n  and\n    /* \"#utility.yul\":7400:7425   */\n  swap2\n  pop\n    /* \"#utility.yul\":7313:7431   */\n  pop\n    /* \"#utility.yul\":7262:7431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7436:7731   */\ntag_74:\n    /* \"#utility.yul\":7512:7516   */\n  0x00\n    /* \"#utility.yul\":7658:7687   */\n  tag_173\n    /* \"#utility.yul\":7683:7686   */\n  dup4\n    /* \"#utility.yul\":7677:7681   */\n  dup4\n    /* \"#utility.yul\":7658:7687   */\n  tag_73\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7650:7687   */\n  swap2\n  pop\n    /* \"#utility.yul\":7720:7723   */\n  dup3\n    /* \"#utility.yul\":7717:7718   */\n  0x02\n    /* \"#utility.yul\":7713:7724   */\n  mul\n    /* \"#utility.yul\":7707:7711   */\n  dup3\n    /* \"#utility.yul\":7704:7725   */\n  or\n    /* \"#utility.yul\":7696:7725   */\n  swap1\n  pop\n    /* \"#utility.yul\":7436:7731   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:9131   */\ntag_8:\n    /* \"#utility.yul\":7853:7890   */\n  tag_175\n    /* \"#utility.yul\":7886:7889   */\n  dup3\n    /* \"#utility.yul\":7853:7890   */\n  tag_56\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7955:7973   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7947:7953   */\n  dup2\n    /* \"#utility.yul\":7944:7974   */\n  gt\n    /* \"#utility.yul\":7941:7997   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":7977:7995   */\n  tag_177\n  tag_49\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":7941:7997   */\ntag_176:\n    /* \"#utility.yul\":8021:8059   */\n  tag_178\n    /* \"#utility.yul\":8053:8057   */\n  dup3\n    /* \"#utility.yul\":8047:8058   */\n  sload\n    /* \"#utility.yul\":8021:8059   */\n  tag_58\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8106:8173   */\n  tag_179\n    /* \"#utility.yul\":8166:8172   */\n  dup3\n    /* \"#utility.yul\":8158:8164   */\n  dup3\n    /* \"#utility.yul\":8152:8156   */\n  dup6\n    /* \"#utility.yul\":8106:8173   */\n  tag_71\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":8200:8201   */\n  0x00\n    /* \"#utility.yul\":8224:8228   */\n  0x20\n    /* \"#utility.yul\":8211:8228   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8258   */\n  0x1f\n    /* \"#utility.yul\":8248:8254   */\n  dup4\n    /* \"#utility.yul\":8245:8259   */\n  gt\n    /* \"#utility.yul\":8273:8274   */\n  0x01\n    /* \"#utility.yul\":8268:8886   */\n  dup2\n  eq\n  tag_181\n  jumpi\n    /* \"#utility.yul\":8930:8931   */\n  0x00\n    /* \"#utility.yul\":8947:8953   */\n  dup5\n    /* \"#utility.yul\":8944:9021   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":8996:9005   */\n  dup3\n    /* \"#utility.yul\":8991:8994   */\n  dup8\n    /* \"#utility.yul\":8987:9006   */\n  add\n    /* \"#utility.yul\":8981:9007   */\n  mload\n    /* \"#utility.yul\":8972:9007   */\n  swap1\n  pop\n    /* \"#utility.yul\":8944:9021   */\ntag_182:\n    /* \"#utility.yul\":9047:9114   */\n  tag_183\n    /* \"#utility.yul\":9107:9113   */\n  dup6\n    /* \"#utility.yul\":9100:9105   */\n  dup3\n    /* \"#utility.yul\":9047:9114   */\n  tag_74\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9041:9045   */\n  dup7\n    /* \"#utility.yul\":9034:9115   */\n  sstore\n    /* \"#utility.yul\":8903:9125   */\n  pop\n    /* \"#utility.yul\":8238:9125   */\n  jump(tag_180)\n    /* \"#utility.yul\":8268:8886   */\ntag_181:\n    /* \"#utility.yul\":8320:8324   */\n  0x1f\n    /* \"#utility.yul\":8316:8325   */\n  not\n    /* \"#utility.yul\":8308:8314   */\n  dup5\n    /* \"#utility.yul\":8304:8326   */\n  and\n    /* \"#utility.yul\":8354:8391   */\n  tag_184\n    /* \"#utility.yul\":8386:8390   */\n  dup7\n    /* \"#utility.yul\":8354:8391   */\n  tag_59\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8413:8414   */\n  0x00\n    /* \"#utility.yul\":8427:8635   */\ntag_185:\n    /* \"#utility.yul\":8441:8448   */\n  dup3\n    /* \"#utility.yul\":8438:8439   */\n  dup2\n    /* \"#utility.yul\":8435:8449   */\n  lt\n    /* \"#utility.yul\":8427:8635   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":8520:8529   */\n  dup5\n    /* \"#utility.yul\":8515:8518   */\n  dup10\n    /* \"#utility.yul\":8511:8530   */\n  add\n    /* \"#utility.yul\":8505:8531   */\n  mload\n    /* \"#utility.yul\":8497:8503   */\n  dup3\n    /* \"#utility.yul\":8490:8532   */\n  sstore\n    /* \"#utility.yul\":8571:8572   */\n  0x01\n    /* \"#utility.yul\":8563:8569   */\n  dup3\n    /* \"#utility.yul\":8559:8573   */\n  add\n    /* \"#utility.yul\":8549:8573   */\n  swap2\n  pop\n    /* \"#utility.yul\":8618:8620   */\n  0x20\n    /* \"#utility.yul\":8607:8616   */\n  dup6\n    /* \"#utility.yul\":8603:8621   */\n  add\n    /* \"#utility.yul\":8590:8621   */\n  swap5\n  pop\n    /* \"#utility.yul\":8464:8468   */\n  0x20\n    /* \"#utility.yul\":8461:8462   */\n  dup2\n    /* \"#utility.yul\":8457:8469   */\n  add\n    /* \"#utility.yul\":8452:8469   */\n  swap1\n  pop\n    /* \"#utility.yul\":8427:8635   */\n  jump(tag_185)\ntag_187:\n    /* \"#utility.yul\":8663:8669   */\n  dup7\n    /* \"#utility.yul\":8654:8661   */\n  dup4\n    /* \"#utility.yul\":8651:8670   */\n  lt\n    /* \"#utility.yul\":8648:8827   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":8721:8730   */\n  dup5\n    /* \"#utility.yul\":8716:8719   */\n  dup10\n    /* \"#utility.yul\":8712:8731   */\n  add\n    /* \"#utility.yul\":8706:8732   */\n  mload\n    /* \"#utility.yul\":8764:8812   */\n  tag_189\n    /* \"#utility.yul\":8806:8810   */\n  0x1f\n    /* \"#utility.yul\":8798:8804   */\n  dup10\n    /* \"#utility.yul\":8794:8811   */\n  and\n    /* \"#utility.yul\":8783:8792   */\n  dup3\n    /* \"#utility.yul\":8764:8812   */\n  tag_73\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8756:8762   */\n  dup4\n    /* \"#utility.yul\":8749:8813   */\n  sstore\n    /* \"#utility.yul\":8671:8827   */\n  pop\n    /* \"#utility.yul\":8648:8827   */\ntag_188:\n    /* \"#utility.yul\":8873:8874   */\n  0x01\n    /* \"#utility.yul\":8869:8870   */\n  0x02\n    /* \"#utility.yul\":8861:8867   */\n  dup9\n    /* \"#utility.yul\":8857:8871   */\n  mul\n    /* \"#utility.yul\":8853:8875   */\n  add\n    /* \"#utility.yul\":8847:8851   */\n  dup9\n    /* \"#utility.yul\":8840:8876   */\n  sstore\n    /* \"#utility.yul\":8275:8886   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8238:9125   */\ntag_180:\n  pop\n    /* \"#utility.yul\":7828:9131   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7736:9131   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9137:9317   */\ntag_75:\n    /* \"#utility.yul\":9185:9262   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9182:9183   */\n  0x00\n    /* \"#utility.yul\":9175:9263   */\n  mstore\n    /* \"#utility.yul\":9282:9286   */\n  0x11\n    /* \"#utility.yul\":9279:9280   */\n  0x04\n    /* \"#utility.yul\":9272:9287   */\n  mstore\n    /* \"#utility.yul\":9306:9310   */\n  0x24\n    /* \"#utility.yul\":9303:9304   */\n  0x00\n    /* \"#utility.yul\":9296:9311   */\n  revert\n    /* \"#utility.yul\":9323:9425   */\ntag_76:\n    /* \"#utility.yul\":9365:9373   */\n  0x00\n    /* \"#utility.yul\":9412:9417   */\n  dup2\n    /* \"#utility.yul\":9409:9410   */\n  0x01\n    /* \"#utility.yul\":9405:9418   */\n  shr\n    /* \"#utility.yul\":9384:9418   */\n  swap1\n  pop\n    /* \"#utility.yul\":9323:9425   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9431:10279   */\ntag_77:\n    /* \"#utility.yul\":9492:9497   */\n  0x00\n    /* \"#utility.yul\":9499:9503   */\n  0x00\n    /* \"#utility.yul\":9523:9529   */\n  dup3\n    /* \"#utility.yul\":9514:9529   */\n  swap2\n  pop\n    /* \"#utility.yul\":9547:9552   */\n  dup4\n    /* \"#utility.yul\":9538:9552   */\n  swap1\n  pop\n    /* \"#utility.yul\":9561:10273   */\ntag_193:\n    /* \"#utility.yul\":9582:9583   */\n  0x01\n    /* \"#utility.yul\":9572:9580   */\n  dup6\n    /* \"#utility.yul\":9569:9584   */\n  gt\n    /* \"#utility.yul\":9561:10273   */\n  iszero\n  tag_195\n  jumpi\n    /* \"#utility.yul\":9677:9681   */\n  dup1\n    /* \"#utility.yul\":9672:9675   */\n  dup7\n    /* \"#utility.yul\":9668:9682   */\n  div\n    /* \"#utility.yul\":9662:9666   */\n  dup2\n    /* \"#utility.yul\":9659:9683   */\n  gt\n    /* \"#utility.yul\":9656:9706   */\n  iszero\n  tag_196\n  jumpi\n    /* \"#utility.yul\":9686:9704   */\n  tag_197\n  tag_75\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9656:9706   */\ntag_196:\n    /* \"#utility.yul\":9736:9737   */\n  0x01\n    /* \"#utility.yul\":9726:9734   */\n  dup6\n    /* \"#utility.yul\":9722:9738   */\n  and\n    /* \"#utility.yul\":9719:10170   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":10151:10155   */\n  dup1\n    /* \"#utility.yul\":10144:10149   */\n  dup3\n    /* \"#utility.yul\":10140:10156   */\n  mul\n    /* \"#utility.yul\":10131:10156   */\n  swap2\n  pop\n    /* \"#utility.yul\":9719:10170   */\ntag_198:\n    /* \"#utility.yul\":10201:10205   */\n  dup1\n    /* \"#utility.yul\":10195:10199   */\n  dup2\n    /* \"#utility.yul\":10191:10206   */\n  mul\n    /* \"#utility.yul\":10183:10206   */\n  swap1\n  pop\n    /* \"#utility.yul\":10231:10263   */\n  tag_199\n    /* \"#utility.yul\":10254:10262   */\n  dup6\n    /* \"#utility.yul\":10231:10263   */\n  tag_76\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":10219:10263   */\n  swap5\n  pop\n    /* \"#utility.yul\":9561:10273   */\n  jump(tag_193)\ntag_195:\n    /* \"#utility.yul\":9431:10279   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10285:11358   */\ntag_78:\n    /* \"#utility.yul\":10339:10344   */\n  0x00\n    /* \"#utility.yul\":10530:10538   */\n  dup3\n    /* \"#utility.yul\":10520:10560   */\n  tag_201\n  jumpi\n    /* \"#utility.yul\":10551:10552   */\n  0x01\n    /* \"#utility.yul\":10542:10552   */\n  swap1\n  pop\n    /* \"#utility.yul\":10553:10558   */\n  jump(tag_200)\n    /* \"#utility.yul\":10520:10560   */\ntag_201:\n    /* \"#utility.yul\":10579:10583   */\n  dup2\n    /* \"#utility.yul\":10569:10605   */\n  tag_202\n  jumpi\n    /* \"#utility.yul\":10596:10597   */\n  0x00\n    /* \"#utility.yul\":10587:10597   */\n  swap1\n  pop\n    /* \"#utility.yul\":10598:10603   */\n  jump(tag_200)\n    /* \"#utility.yul\":10569:10605   */\ntag_202:\n    /* \"#utility.yul\":10665:10669   */\n  dup2\n    /* \"#utility.yul\":10713:10714   */\n  0x01\n    /* \"#utility.yul\":10708:10735   */\n  dup2\n  eq\n  tag_204\n  jumpi\n    /* \"#utility.yul\":10749:10750   */\n  0x02\n    /* \"#utility.yul\":10744:10935   */\n  dup2\n  eq\n  tag_205\n  jumpi\n    /* \"#utility.yul\":10658:10935   */\n  jump(tag_203)\n    /* \"#utility.yul\":10708:10735   */\ntag_204:\n    /* \"#utility.yul\":10726:10727   */\n  0x01\n    /* \"#utility.yul\":10717:10727   */\n  swap2\n  pop\n    /* \"#utility.yul\":10728:10733   */\n  pop\n  jump(tag_200)\n    /* \"#utility.yul\":10744:10935   */\ntag_205:\n    /* \"#utility.yul\":10789:10792   */\n  0xff\n    /* \"#utility.yul\":10779:10787   */\n  dup5\n    /* \"#utility.yul\":10776:10793   */\n  gt\n    /* \"#utility.yul\":10773:10816   */\n  iszero\n  tag_206\n  jumpi\n    /* \"#utility.yul\":10796:10814   */\n  tag_207\n  tag_75\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10773:10816   */\ntag_206:\n    /* \"#utility.yul\":10845:10853   */\n  dup4\n    /* \"#utility.yul\":10842:10843   */\n  0x02\n    /* \"#utility.yul\":10838:10854   */\n  exp\n    /* \"#utility.yul\":10829:10854   */\n  swap2\n  pop\n    /* \"#utility.yul\":10880:10883   */\n  dup5\n    /* \"#utility.yul\":10873:10878   */\n  dup3\n    /* \"#utility.yul\":10870:10884   */\n  gt\n    /* \"#utility.yul\":10867:10907   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":10887:10905   */\n  tag_209\n  tag_75\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10867:10907   */\ntag_208:\n    /* \"#utility.yul\":10920:10925   */\n  pop\n  jump(tag_200)\n    /* \"#utility.yul\":10658:10935   */\ntag_203:\n  pop\n    /* \"#utility.yul\":11044:11046   */\n  0x20\n    /* \"#utility.yul\":11034:11042   */\n  dup4\n    /* \"#utility.yul\":11031:11047   */\n  lt\n    /* \"#utility.yul\":11025:11028   */\n  0x0133\n    /* \"#utility.yul\":11019:11023   */\n  dup4\n    /* \"#utility.yul\":11016:11029   */\n  lt\n    /* \"#utility.yul\":11012:11048   */\n  and\n    /* \"#utility.yul\":10994:10996   */\n  0x4e\n    /* \"#utility.yul\":10984:10992   */\n  dup5\n    /* \"#utility.yul\":10981:10997   */\n  lt\n    /* \"#utility.yul\":10976:10978   */\n  0x0b\n    /* \"#utility.yul\":10970:10974   */\n  dup5\n    /* \"#utility.yul\":10967:10979   */\n  lt\n    /* \"#utility.yul\":10963:10998   */\n  and\n    /* \"#utility.yul\":10947:11058   */\n  or\n    /* \"#utility.yul\":10944:11190   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":11100:11108   */\n  dup3\n    /* \"#utility.yul\":11094:11098   */\n  dup3\n    /* \"#utility.yul\":11090:11109   */\n  exp\n    /* \"#utility.yul\":11081:11109   */\n  swap1\n  pop\n    /* \"#utility.yul\":11135:11138   */\n  dup4\n    /* \"#utility.yul\":11128:11133   */\n  dup2\n    /* \"#utility.yul\":11125:11139   */\n  gt\n    /* \"#utility.yul\":11122:11162   */\n  iszero\n  tag_211\n  jumpi\n    /* \"#utility.yul\":11142:11160   */\n  tag_212\n  tag_75\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":11122:11162   */\ntag_211:\n    /* \"#utility.yul\":11175:11180   */\n  jump(tag_200)\n    /* \"#utility.yul\":10944:11190   */\ntag_210:\n    /* \"#utility.yul\":11215:11257   */\n  tag_213\n    /* \"#utility.yul\":11253:11256   */\n  dup5\n    /* \"#utility.yul\":11243:11251   */\n  dup5\n    /* \"#utility.yul\":11237:11241   */\n  dup5\n    /* \"#utility.yul\":11234:11235   */\n  0x01\n    /* \"#utility.yul\":11215:11257   */\n  tag_77\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":11200:11257   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":11289:11293   */\n  dup2\n    /* \"#utility.yul\":11284:11287   */\n  dup5\n    /* \"#utility.yul\":11280:11294   */\n  div\n    /* \"#utility.yul\":11273:11278   */\n  dup2\n    /* \"#utility.yul\":11270:11295   */\n  gt\n    /* \"#utility.yul\":11267:11318   */\n  iszero\n  tag_214\n  jumpi\n    /* \"#utility.yul\":11298:11316   */\n  tag_215\n  tag_75\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":11267:11318   */\ntag_214:\n    /* \"#utility.yul\":11347:11351   */\n  dup2\n    /* \"#utility.yul\":11340:11345   */\n  dup2\n    /* \"#utility.yul\":11336:11352   */\n  mul\n    /* \"#utility.yul\":11327:11352   */\n  swap1\n  pop\n    /* \"#utility.yul\":10285:11358   */\ntag_200:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11364:11450   */\ntag_79:\n    /* \"#utility.yul\":11399:11406   */\n  0x00\n    /* \"#utility.yul\":11439:11443   */\n  0xff\n    /* \"#utility.yul\":11432:11437   */\n  dup3\n    /* \"#utility.yul\":11428:11444   */\n  and\n    /* \"#utility.yul\":11417:11444   */\n  swap1\n  pop\n    /* \"#utility.yul\":11364:11450   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11456:11737   */\ntag_15:\n    /* \"#utility.yul\":11514:11519   */\n  0x00\n    /* \"#utility.yul\":11538:11561   */\n  tag_218\n    /* \"#utility.yul\":11556:11560   */\n  dup3\n    /* \"#utility.yul\":11538:11561   */\n  tag_63\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":11530:11561   */\n  swap2\n  pop\n    /* \"#utility.yul\":11582:11607   */\n  tag_219\n    /* \"#utility.yul\":11598:11606   */\n  dup4\n    /* \"#utility.yul\":11582:11607   */\n  tag_79\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":11570:11607   */\n  swap3\n  pop\n    /* \"#utility.yul\":11626:11730   */\n  tag_220\n    /* \"#utility.yul\":11663:11729   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11653:11661   */\n  dup5\n    /* \"#utility.yul\":11647:11651   */\n  dup5\n    /* \"#utility.yul\":11626:11730   */\n  tag_78\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":11617:11730   */\n  swap1\n  pop\n    /* \"#utility.yul\":11456:11737   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11743:12153   */\ntag_17:\n    /* \"#utility.yul\":11783:11790   */\n  0x00\n    /* \"#utility.yul\":11806:11826   */\n  tag_222\n    /* \"#utility.yul\":11824:11825   */\n  dup3\n    /* \"#utility.yul\":11806:11826   */\n  tag_63\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":11801:11826   */\n  swap2\n  pop\n    /* \"#utility.yul\":11840:11860   */\n  tag_223\n    /* \"#utility.yul\":11858:11859   */\n  dup4\n    /* \"#utility.yul\":11840:11860   */\n  tag_63\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":11835:11860   */\n  swap3\n  pop\n    /* \"#utility.yul\":11895:11896   */\n  dup3\n    /* \"#utility.yul\":11892:11893   */\n  dup3\n    /* \"#utility.yul\":11888:11897   */\n  mul\n    /* \"#utility.yul\":11917:11947   */\n  tag_224\n    /* \"#utility.yul\":11935:11946   */\n  dup2\n    /* \"#utility.yul\":11917:11947   */\n  tag_63\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":11906:11947   */\n  swap2\n  pop\n    /* \"#utility.yul\":12096:12097   */\n  dup3\n    /* \"#utility.yul\":12087:12094   */\n  dup3\n    /* \"#utility.yul\":12083:12098   */\n  div\n    /* \"#utility.yul\":12080:12081   */\n  dup5\n    /* \"#utility.yul\":12077:12099   */\n  eq\n    /* \"#utility.yul\":12057:12058   */\n  dup4\n    /* \"#utility.yul\":12050:12059   */\n  iszero\n    /* \"#utility.yul\":12030:12113   */\n  or\n    /* \"#utility.yul\":12007:12146   */\n  tag_225\n  jumpi\n    /* \"#utility.yul\":12126:12144   */\n  tag_226\n  tag_75\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":12007:12146   */\ntag_225:\n    /* \"#utility.yul\":11791:12153   */\n  pop\n    /* \"#utility.yul\":11743:12153   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12159:12277   */\ntag_80:\n    /* \"#utility.yul\":12246:12270   */\n  tag_228\n    /* \"#utility.yul\":12264:12269   */\n  dup2\n    /* \"#utility.yul\":12246:12270   */\n  tag_43\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":12241:12244   */\n  dup3\n    /* \"#utility.yul\":12234:12271   */\n  mstore\n    /* \"#utility.yul\":12159:12277   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12283:12505   */\ntag_24:\n    /* \"#utility.yul\":12376:12380   */\n  0x00\n    /* \"#utility.yul\":12414:12416   */\n  0x20\n    /* \"#utility.yul\":12403:12412   */\n  dup3\n    /* \"#utility.yul\":12399:12417   */\n  add\n    /* \"#utility.yul\":12391:12417   */\n  swap1\n  pop\n    /* \"#utility.yul\":12427:12498   */\n  tag_230\n    /* \"#utility.yul\":12495:12496   */\n  0x00\n    /* \"#utility.yul\":12484:12493   */\n  dup4\n    /* \"#utility.yul\":12480:12497   */\n  add\n    /* \"#utility.yul\":12471:12477   */\n  dup5\n    /* \"#utility.yul\":12427:12498   */\n  tag_80\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":12283:12505   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12511:12702   */\ntag_30:\n    /* \"#utility.yul\":12551:12554   */\n  0x00\n    /* \"#utility.yul\":12570:12590   */\n  tag_232\n    /* \"#utility.yul\":12588:12589   */\n  dup3\n    /* \"#utility.yul\":12570:12590   */\n  tag_63\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":12565:12590   */\n  swap2\n  pop\n    /* \"#utility.yul\":12604:12624   */\n  tag_233\n    /* \"#utility.yul\":12622:12623   */\n  dup4\n    /* \"#utility.yul\":12604:12624   */\n  tag_63\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":12599:12624   */\n  swap3\n  pop\n    /* \"#utility.yul\":12647:12648   */\n  dup3\n    /* \"#utility.yul\":12644:12645   */\n  dup3\n    /* \"#utility.yul\":12640:12649   */\n  add\n    /* \"#utility.yul\":12633:12649   */\n  swap1\n  pop\n    /* \"#utility.yul\":12668:12671   */\n  dup1\n    /* \"#utility.yul\":12665:12666   */\n  dup3\n    /* \"#utility.yul\":12662:12672   */\n  gt\n    /* \"#utility.yul\":12659:12695   */\n  iszero\n  tag_234\n  jumpi\n    /* \"#utility.yul\":12675:12693   */\n  tag_235\n  tag_75\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":12659:12695   */\ntag_234:\n    /* \"#utility.yul\":12511:12702   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12708:12826   */\ntag_81:\n    /* \"#utility.yul\":12795:12819   */\n  tag_237\n    /* \"#utility.yul\":12813:12818   */\n  dup2\n    /* \"#utility.yul\":12795:12819   */\n  tag_63\n  jump\t// in\ntag_237:\n    /* \"#utility.yul\":12790:12793   */\n  dup3\n    /* \"#utility.yul\":12783:12820   */\n  mstore\n    /* \"#utility.yul\":12708:12826   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12832:13274   */\ntag_34:\n    /* \"#utility.yul\":12981:12985   */\n  0x00\n    /* \"#utility.yul\":13019:13021   */\n  0x60\n    /* \"#utility.yul\":13008:13017   */\n  dup3\n    /* \"#utility.yul\":13004:13022   */\n  add\n    /* \"#utility.yul\":12996:13022   */\n  swap1\n  pop\n    /* \"#utility.yul\":13032:13103   */\n  tag_239\n    /* \"#utility.yul\":13100:13101   */\n  0x00\n    /* \"#utility.yul\":13089:13098   */\n  dup4\n    /* \"#utility.yul\":13085:13102   */\n  add\n    /* \"#utility.yul\":13076:13082   */\n  dup7\n    /* \"#utility.yul\":13032:13103   */\n  tag_80\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":13113:13185   */\n  tag_240\n    /* \"#utility.yul\":13181:13183   */\n  0x20\n    /* \"#utility.yul\":13170:13179   */\n  dup4\n    /* \"#utility.yul\":13166:13184   */\n  add\n    /* \"#utility.yul\":13157:13163   */\n  dup6\n    /* \"#utility.yul\":13113:13185   */\n  tag_81\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":13195:13267   */\n  tag_241\n    /* \"#utility.yul\":13263:13265   */\n  0x40\n    /* \"#utility.yul\":13252:13261   */\n  dup4\n    /* \"#utility.yul\":13248:13266   */\n  add\n    /* \"#utility.yul\":13239:13245   */\n  dup5\n    /* \"#utility.yul\":13195:13267   */\n  tag_81\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":12832:13274   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13280:13502   */\ntag_38:\n    /* \"#utility.yul\":13373:13377   */\n  0x00\n    /* \"#utility.yul\":13411:13413   */\n  0x20\n    /* \"#utility.yul\":13400:13409   */\n  dup3\n    /* \"#utility.yul\":13396:13414   */\n  add\n    /* \"#utility.yul\":13388:13414   */\n  swap1\n  pop\n    /* \"#utility.yul\":13424:13495   */\n  tag_243\n    /* \"#utility.yul\":13492:13493   */\n  0x00\n    /* \"#utility.yul\":13481:13490   */\n  dup4\n    /* \"#utility.yul\":13477:13494   */\n  add\n    /* \"#utility.yul\":13468:13474   */\n  dup5\n    /* \"#utility.yul\":13424:13495   */\n  tag_81\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":13280:13502   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"TokenARS.sol\":246:790  contract Token is ERC20 {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TokenARS.sol\":246:790  contract Token is ERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa6f2ae3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe4849b32\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      revert(0x00, 0x00)\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      revert(0x00, 0x00)\n    tag_32:\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenARS.sol\":462:544  function mint(address to, uint256 amount) public{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      revert(0x00, 0x00)\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenARS.sol\":553:628  function buy() public payable {... */\n    tag_10:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      revert(0x00, 0x00)\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      revert(0x00, 0x00)\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TokenARS.sol\":634:786  function sell(uint256 amount) public payable {... */\n    tag_13:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_76\n      jump\t// in\n    tag_77:\n      dup1\n      iszero\n      tag_78\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_79\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_78)\n    tag_79:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_80:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_80\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"TokenARS.sol\":462:544  function mint(address to, uint256 amount) public{... */\n    tag_46:\n        /* \"TokenARS.sol\":520:537  _mint(to, amount) */\n      tag_95\n        /* \"TokenARS.sol\":526:528  to */\n      dup3\n        /* \"TokenARS.sol\":530:536  amount */\n      dup3\n        /* \"TokenARS.sol\":520:525  _mint */\n      tag_96\n        /* \"TokenARS.sol\":520:537  _mint(to, amount) */\n      jump\t// in\n    tag_95:\n        /* \"TokenARS.sol\":462:544  function mint(address to, uint256 amount) public{... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_76\n      jump\t// in\n    tag_99:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_76\n      jump\t// in\n    tag_100:\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_102\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_101)\n    tag_102:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_103:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_103\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"TokenARS.sol\":553:628  function buy() public payable {... */\n    tag_58:\n        /* \"TokenARS.sol\":593:621  _mint(msg.sender, msg.value) */\n      tag_105\n        /* \"TokenARS.sol\":599:609  msg.sender */\n      caller\n        /* \"TokenARS.sol\":611:620  msg.value */\n      callvalue\n        /* \"TokenARS.sol\":593:598  _mint */\n      tag_96\n        /* \"TokenARS.sol\":593:621  _mint(msg.sender, msg.value) */\n      jump\t// in\n    tag_105:\n        /* \"TokenARS.sol\":553:628  function buy() public payable {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TokenARS.sol\":634:786  function sell(uint256 amount) public payable {... */\n    tag_73:\n        /* \"TokenARS.sol\":689:733  _transfer(msg.sender, address(this), amount) */\n      tag_111\n        /* \"TokenARS.sol\":699:709  msg.sender */\n      caller\n        /* \"TokenARS.sol\":719:723  this */\n      address\n        /* \"TokenARS.sol\":726:732  amount */\n      dup4\n        /* \"TokenARS.sol\":689:698  _transfer */\n      tag_92\n        /* \"TokenARS.sol\":689:733  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_111:\n        /* \"TokenARS.sol\":751:761  msg.sender */\n      caller\n        /* \"TokenARS.sol\":743:771  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TokenARS.sol\":743:779  payable(msg.sender).transfer(amount) */\n      0x08fc\n        /* \"TokenARS.sol\":772:778  amount */\n      dup3\n        /* \"TokenARS.sol\":743:779  payable(msg.sender).transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n        /* \"TokenARS.sol\":634:786  function sell(uint256 amount) public payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_148)\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_151\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_152)\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_154:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_155:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_156:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_157:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_158:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_183\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_154\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":711:782   */\n      tag_184\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_155\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_185\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_156\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":881:910   */\n      tag_186\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_157\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_19:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_188\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_158\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_160:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_162:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_163:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_194\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_162\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_164:\n        /* \"#utility.yul\":1876:1900   */\n      tag_196\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_163\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_197\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_197:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_165:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_199\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_164\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_166:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_167:\n        /* \"#utility.yul\":2232:2256   */\n      tag_202\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_166\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_203:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_168:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_205\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_167\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_23:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_208\n      tag_160\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2525:2644   */\n    tag_207:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_209\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_165\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_210\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_168\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_169:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_170:\n        /* \"#utility.yul\":3089:3110   */\n      tag_213\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_169\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_26:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_215\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_170\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_171:\n        /* \"#utility.yul\":3426:3450   */\n      tag_217\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_166\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_31:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_219\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_171\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_35:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_222\n      tag_160\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3801:3920   */\n    tag_221:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_223\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_165\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_224\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_165\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_225\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_168\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_172:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_173:\n        /* \"#utility.yul\":4491:4513   */\n      tag_228\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_172\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_42:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_230\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_173\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_50:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_233\n      tag_160\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4822:4941   */\n    tag_232:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_234\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_165\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5555   */\n    tag_67:\n        /* \"#utility.yul\":5149:5155   */\n      0x00\n        /* \"#utility.yul\":5157:5163   */\n      0x00\n        /* \"#utility.yul\":5206:5208   */\n      0x40\n        /* \"#utility.yul\":5194:5203   */\n      dup4\n        /* \"#utility.yul\":5185:5192   */\n      dup6\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_237\n      tag_160\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5174:5293   */\n    tag_236:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_238\n        /* \"#utility.yul\":5402:5409   */\n      dup6\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup7\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_165\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5347:5410   */\n      swap3\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5459:5461   */\n      0x20\n        /* \"#utility.yul\":5485:5538   */\n      tag_239\n        /* \"#utility.yul\":5530:5537   */\n      dup6\n        /* \"#utility.yul\":5521:5527   */\n      dup3\n        /* \"#utility.yul\":5510:5519   */\n      dup7\n        /* \"#utility.yul\":5506:5528   */\n      add\n        /* \"#utility.yul\":5485:5538   */\n      tag_165\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5475:5538   */\n      swap2\n      pop\n        /* \"#utility.yul\":5430:5548   */\n      pop\n        /* \"#utility.yul\":5081:5555   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5890   */\n    tag_72:\n        /* \"#utility.yul\":5620:5626   */\n      0x00\n        /* \"#utility.yul\":5669:5671   */\n      0x20\n        /* \"#utility.yul\":5657:5666   */\n      dup3\n        /* \"#utility.yul\":5648:5655   */\n      dup5\n        /* \"#utility.yul\":5644:5667   */\n      sub\n        /* \"#utility.yul\":5640:5672   */\n      slt\n        /* \"#utility.yul\":5637:5756   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":5675:5754   */\n      tag_242\n      tag_160\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5637:5756   */\n    tag_241:\n        /* \"#utility.yul\":5795:5796   */\n      0x00\n        /* \"#utility.yul\":5820:5873   */\n      tag_243\n        /* \"#utility.yul\":5865:5872   */\n      dup5\n        /* \"#utility.yul\":5856:5862   */\n      dup3\n        /* \"#utility.yul\":5845:5854   */\n      dup6\n        /* \"#utility.yul\":5841:5863   */\n      add\n        /* \"#utility.yul\":5820:5873   */\n      tag_168\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5810:5873   */\n      swap2\n      pop\n        /* \"#utility.yul\":5766:5883   */\n      pop\n        /* \"#utility.yul\":5561:5890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5896:6076   */\n    tag_174:\n        /* \"#utility.yul\":5944:6021   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5941:5942   */\n      0x00\n        /* \"#utility.yul\":5934:6022   */\n      mstore\n        /* \"#utility.yul\":6041:6045   */\n      0x22\n        /* \"#utility.yul\":6038:6039   */\n      0x04\n        /* \"#utility.yul\":6031:6046   */\n      mstore\n        /* \"#utility.yul\":6065:6069   */\n      0x24\n        /* \"#utility.yul\":6062:6063   */\n      0x00\n        /* \"#utility.yul\":6055:6070   */\n      revert\n        /* \"#utility.yul\":6082:6402   */\n    tag_76:\n        /* \"#utility.yul\":6126:6132   */\n      0x00\n        /* \"#utility.yul\":6163:6164   */\n      0x02\n        /* \"#utility.yul\":6157:6161   */\n      dup3\n        /* \"#utility.yul\":6153:6165   */\n      div\n        /* \"#utility.yul\":6143:6165   */\n      swap1\n      pop\n        /* \"#utility.yul\":6210:6211   */\n      0x01\n        /* \"#utility.yul\":6204:6208   */\n      dup3\n        /* \"#utility.yul\":6200:6212   */\n      and\n        /* \"#utility.yul\":6231:6249   */\n      dup1\n        /* \"#utility.yul\":6221:6302   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":6287:6291   */\n      0x7f\n        /* \"#utility.yul\":6279:6285   */\n      dup3\n        /* \"#utility.yul\":6275:6292   */\n      and\n        /* \"#utility.yul\":6265:6292   */\n      swap2\n      pop\n        /* \"#utility.yul\":6221:6302   */\n    tag_246:\n        /* \"#utility.yul\":6349:6351   */\n      0x20\n        /* \"#utility.yul\":6341:6347   */\n      dup3\n        /* \"#utility.yul\":6338:6352   */\n      lt\n        /* \"#utility.yul\":6318:6336   */\n      dup2\n        /* \"#utility.yul\":6315:6353   */\n      sub\n        /* \"#utility.yul\":6312:6396   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":6368:6386   */\n      tag_248\n      tag_174\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6312:6396   */\n    tag_247:\n        /* \"#utility.yul\":6133:6402   */\n      pop\n        /* \"#utility.yul\":6082:6402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6408:6526   */\n    tag_175:\n        /* \"#utility.yul\":6495:6519   */\n      tag_250\n        /* \"#utility.yul\":6513:6518   */\n      dup2\n        /* \"#utility.yul\":6495:6519   */\n      tag_163\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6490:6493   */\n      dup3\n        /* \"#utility.yul\":6483:6520   */\n      mstore\n        /* \"#utility.yul\":6408:6526   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6532:6974   */\n    tag_123:\n        /* \"#utility.yul\":6681:6685   */\n      0x00\n        /* \"#utility.yul\":6719:6721   */\n      0x60\n        /* \"#utility.yul\":6708:6717   */\n      dup3\n        /* \"#utility.yul\":6704:6722   */\n      add\n        /* \"#utility.yul\":6696:6722   */\n      swap1\n      pop\n        /* \"#utility.yul\":6732:6803   */\n      tag_252\n        /* \"#utility.yul\":6800:6801   */\n      0x00\n        /* \"#utility.yul\":6789:6798   */\n      dup4\n        /* \"#utility.yul\":6785:6802   */\n      add\n        /* \"#utility.yul\":6776:6782   */\n      dup7\n        /* \"#utility.yul\":6732:6803   */\n      tag_175\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":6813:6885   */\n      tag_253\n        /* \"#utility.yul\":6881:6883   */\n      0x20\n        /* \"#utility.yul\":6870:6879   */\n      dup4\n        /* \"#utility.yul\":6866:6884   */\n      add\n        /* \"#utility.yul\":6857:6863   */\n      dup6\n        /* \"#utility.yul\":6813:6885   */\n      tag_171\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":6895:6967   */\n      tag_254\n        /* \"#utility.yul\":6963:6965   */\n      0x40\n        /* \"#utility.yul\":6952:6961   */\n      dup4\n        /* \"#utility.yul\":6948:6966   */\n      add\n        /* \"#utility.yul\":6939:6945   */\n      dup5\n        /* \"#utility.yul\":6895:6967   */\n      tag_171\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":6532:6974   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6980:7202   */\n    tag_128:\n        /* \"#utility.yul\":7073:7077   */\n      0x00\n        /* \"#utility.yul\":7111:7113   */\n      0x20\n        /* \"#utility.yul\":7100:7109   */\n      dup3\n        /* \"#utility.yul\":7096:7114   */\n      add\n        /* \"#utility.yul\":7088:7114   */\n      swap1\n      pop\n        /* \"#utility.yul\":7124:7195   */\n      tag_256\n        /* \"#utility.yul\":7192:7193   */\n      0x00\n        /* \"#utility.yul\":7181:7190   */\n      dup4\n        /* \"#utility.yul\":7177:7194   */\n      add\n        /* \"#utility.yul\":7168:7174   */\n      dup5\n        /* \"#utility.yul\":7124:7195   */\n      tag_175\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":6980:7202   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7208:7388   */\n    tag_176:\n        /* \"#utility.yul\":7256:7333   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7253:7254   */\n      0x00\n        /* \"#utility.yul\":7246:7334   */\n      mstore\n        /* \"#utility.yul\":7353:7357   */\n      0x11\n        /* \"#utility.yul\":7350:7351   */\n      0x04\n        /* \"#utility.yul\":7343:7358   */\n      mstore\n        /* \"#utility.yul\":7377:7381   */\n      0x24\n        /* \"#utility.yul\":7374:7375   */\n      0x00\n        /* \"#utility.yul\":7367:7382   */\n      revert\n        /* \"#utility.yul\":7394:7585   */\n    tag_147:\n        /* \"#utility.yul\":7434:7437   */\n      0x00\n        /* \"#utility.yul\":7453:7473   */\n      tag_259\n        /* \"#utility.yul\":7471:7472   */\n      dup3\n        /* \"#utility.yul\":7453:7473   */\n      tag_166\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":7448:7473   */\n      swap2\n      pop\n        /* \"#utility.yul\":7487:7507   */\n      tag_260\n        /* \"#utility.yul\":7505:7506   */\n      dup4\n        /* \"#utility.yul\":7487:7507   */\n      tag_166\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7482:7507   */\n      swap3\n      pop\n        /* \"#utility.yul\":7530:7531   */\n      dup3\n        /* \"#utility.yul\":7527:7528   */\n      dup3\n        /* \"#utility.yul\":7523:7532   */\n      add\n        /* \"#utility.yul\":7516:7532   */\n      swap1\n      pop\n        /* \"#utility.yul\":7551:7554   */\n      dup1\n        /* \"#utility.yul\":7548:7549   */\n      dup3\n        /* \"#utility.yul\":7545:7555   */\n      gt\n        /* \"#utility.yul\":7542:7578   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":7558:7576   */\n      tag_262\n      tag_176\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":7542:7578   */\n    tag_261:\n        /* \"#utility.yul\":7394:7585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e4b69eb5a5cc43f6879575d56f7f98b5c1b492c10dbe68f008084e3e5924b2dd64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_965": {
									"entryPoint": null,
									"id": 965,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 156,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 289,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 148,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2725,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2259,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1776,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1125,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1533,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13505:7",
										"nodeType": "YulBlock",
										"src": "0:13505:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "934:28:7",
													"nodeType": "YulBlock",
													"src": "934:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:7",
																		"nodeType": "YulLiteral",
																		"src": "951:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:7",
																		"nodeType": "YulLiteral",
																		"src": "954:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:7"
																},
																"nativeSrc": "944:12:7",
																"nodeType": "YulFunctionCall",
																"src": "944:12:7"
															},
															"nativeSrc": "944:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "845:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:7"
											},
											{
												"body": {
													"nativeSrc": "1057:28:7",
													"nodeType": "YulBlock",
													"src": "1057:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1074:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1077:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1077:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1067:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:7"
																},
																"nativeSrc": "1067:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1067:12:7"
															},
															"nativeSrc": "1067:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1067:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "968:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "968:117:7"
											},
											{
												"body": {
													"nativeSrc": "1139:54:7",
													"nodeType": "YulBlock",
													"src": "1139:54:7",
													"statements": [
														{
															"nativeSrc": "1149:38:7",
															"nodeType": "YulAssignment",
															"src": "1149:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1167:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1167:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1174:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1174:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1163:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:7"
																		},
																		"nativeSrc": "1163:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1183:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1183:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1179:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:7"
																		},
																		"nativeSrc": "1179:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1179:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1159:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:7"
																},
																"nativeSrc": "1159:28:7",
																"nodeType": "YulFunctionCall",
																"src": "1159:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1091:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1122:5:7",
														"nodeType": "YulTypedName",
														"src": "1122:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1132:6:7",
														"nodeType": "YulTypedName",
														"src": "1132:6:7",
														"type": ""
													}
												],
												"src": "1091:102:7"
											},
											{
												"body": {
													"nativeSrc": "1227:152:7",
													"nodeType": "YulBlock",
													"src": "1227:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1244:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1244:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1247:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1247:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1237:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1237:6:7"
																},
																"nativeSrc": "1237:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1237:88:7"
															},
															"nativeSrc": "1237:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1237:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1344:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1344:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nativeSrc": "1334:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:15:7"
															},
															"nativeSrc": "1334:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1334:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1368:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1368:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1358:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:7"
																},
																"nativeSrc": "1358:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1358:15:7"
															},
															"nativeSrc": "1358:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1358:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1199:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1199:180:7"
											},
											{
												"body": {
													"nativeSrc": "1428:238:7",
													"nodeType": "YulBlock",
													"src": "1428:238:7",
													"statements": [
														{
															"nativeSrc": "1438:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1438:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1460:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1460:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1490:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1490:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1468:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1468:21:7"
																		},
																		"nativeSrc": "1468:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1456:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:7"
																},
																"nativeSrc": "1456:40:7",
																"nodeType": "YulFunctionCall",
																"src": "1456:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1442:10:7",
																	"nodeType": "YulTypedName",
																	"src": "1442:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1607:22:7",
																"nodeType": "YulBlock",
																"src": "1607:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1609:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1609:16:7"
																			},
																			"nativeSrc": "1609:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1609:18:7"
																		},
																		"nativeSrc": "1609:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1609:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1550:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1562:18:7",
																				"nodeType": "YulLiteral",
																				"src": "1562:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1547:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1547:2:7"
																		},
																		"nativeSrc": "1547:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1547:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1586:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "1586:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1598:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1583:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:7"
																		},
																		"nativeSrc": "1583:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1544:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1544:2:7"
																},
																"nativeSrc": "1544:62:7",
																"nodeType": "YulFunctionCall",
																"src": "1544:62:7"
															},
															"nativeSrc": "1541:88:7",
															"nodeType": "YulIf",
															"src": "1541:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1645:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1645:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1649:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1649:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1638:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:7"
																},
																"nativeSrc": "1638:22:7",
																"nodeType": "YulFunctionCall",
																"src": "1638:22:7"
															},
															"nativeSrc": "1638:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "1638:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1385:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1414:6:7",
														"nodeType": "YulTypedName",
														"src": "1414:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1422:4:7",
														"nodeType": "YulTypedName",
														"src": "1422:4:7",
														"type": ""
													}
												],
												"src": "1385:281:7"
											},
											{
												"body": {
													"nativeSrc": "1713:88:7",
													"nodeType": "YulBlock",
													"src": "1713:88:7",
													"statements": [
														{
															"nativeSrc": "1723:30:7",
															"nodeType": "YulAssignment",
															"src": "1723:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1733:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1733:18:7"
																},
																"nativeSrc": "1733:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1733:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1723:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1723:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1782:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1790:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1790:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1762:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "1762:19:7"
																},
																"nativeSrc": "1762:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1762:33:7"
															},
															"nativeSrc": "1762:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1762:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1672:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1697:4:7",
														"nodeType": "YulTypedName",
														"src": "1697:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1706:6:7",
														"nodeType": "YulTypedName",
														"src": "1706:6:7",
														"type": ""
													}
												],
												"src": "1672:129:7"
											},
											{
												"body": {
													"nativeSrc": "1874:241:7",
													"nodeType": "YulBlock",
													"src": "1874:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1979:22:7",
																"nodeType": "YulBlock",
																"src": "1979:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1981:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1981:16:7"
																			},
																			"nativeSrc": "1981:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1981:18:7"
																		},
																		"nativeSrc": "1981:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1981:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1951:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1951:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1959:18:7",
																		"nodeType": "YulLiteral",
																		"src": "1959:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1948:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1948:2:7"
																},
																"nativeSrc": "1948:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1948:30:7"
															},
															"nativeSrc": "1945:56:7",
															"nodeType": "YulIf",
															"src": "1945:56:7"
														},
														{
															"nativeSrc": "2011:37:7",
															"nodeType": "YulAssignment",
															"src": "2011:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2041:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2019:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "2019:21:7"
																},
																"nativeSrc": "2019:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2019:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2011:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:7"
																}
															]
														},
														{
															"nativeSrc": "2085:23:7",
															"nodeType": "YulAssignment",
															"src": "2085:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2097:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2097:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2093:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2093:3:7"
																},
																"nativeSrc": "2093:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2093:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2085:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2085:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1807:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1858:6:7",
														"nodeType": "YulTypedName",
														"src": "1858:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1869:4:7",
														"nodeType": "YulTypedName",
														"src": "1869:4:7",
														"type": ""
													}
												],
												"src": "1807:308:7"
											},
											{
												"body": {
													"nativeSrc": "2183:77:7",
													"nodeType": "YulBlock",
													"src": "2183:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2200:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2200:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2205:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2205:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2210:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2210:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2194:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2194:5:7"
																},
																"nativeSrc": "2194:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2194:23:7"
															},
															"nativeSrc": "2194:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "2194:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2237:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2237:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2242:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2242:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2233:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:7"
																		},
																		"nativeSrc": "2233:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2233:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2251:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2251:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2226:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:7"
																},
																"nativeSrc": "2226:27:7",
																"nodeType": "YulFunctionCall",
																"src": "2226:27:7"
															},
															"nativeSrc": "2226:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "2226:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2121:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2165:3:7",
														"nodeType": "YulTypedName",
														"src": "2165:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2170:3:7",
														"nodeType": "YulTypedName",
														"src": "2170:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2175:6:7",
														"nodeType": "YulTypedName",
														"src": "2175:6:7",
														"type": ""
													}
												],
												"src": "2121:139:7"
											},
											{
												"body": {
													"nativeSrc": "2361:339:7",
													"nodeType": "YulBlock",
													"src": "2361:339:7",
													"statements": [
														{
															"nativeSrc": "2371:75:7",
															"nodeType": "YulAssignment",
															"src": "2371:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2438:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2438:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2396:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "2396:41:7"
																		},
																		"nativeSrc": "2396:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2380:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "2380:15:7"
																},
																"nativeSrc": "2380:66:7",
																"nodeType": "YulFunctionCall",
																"src": "2380:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2371:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2462:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2469:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2469:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2455:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2455:6:7"
																},
																"nativeSrc": "2455:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2455:21:7"
															},
															"nativeSrc": "2455:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2455:21:7"
														},
														{
															"nativeSrc": "2485:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2485:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2500:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2500:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2507:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2507:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2496:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:7"
																},
																"nativeSrc": "2496:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2496:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2489:3:7",
																	"nodeType": "YulTypedName",
																	"src": "2489:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2550:83:7",
																"nodeType": "YulBlock",
																"src": "2550:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2552:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2552:77:7"
																			},
																			"nativeSrc": "2552:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2552:79:7"
																		},
																		"nativeSrc": "2552:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2552:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2531:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2531:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2536:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:7"
																		},
																		"nativeSrc": "2527:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2545:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2545:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2524:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2524:2:7"
																},
																"nativeSrc": "2524:25:7",
																"nodeType": "YulFunctionCall",
																"src": "2524:25:7"
															},
															"nativeSrc": "2521:112:7",
															"nodeType": "YulIf",
															"src": "2521:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2677:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2677:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2682:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2682:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2687:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2687:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2642:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2642:34:7"
																},
																"nativeSrc": "2642:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2642:52:7"
															},
															"nativeSrc": "2642:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2642:52:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2266:434:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2334:3:7",
														"nodeType": "YulTypedName",
														"src": "2334:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2339:6:7",
														"nodeType": "YulTypedName",
														"src": "2339:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:7",
														"nodeType": "YulTypedName",
														"src": "2347:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2355:5:7",
														"nodeType": "YulTypedName",
														"src": "2355:5:7",
														"type": ""
													}
												],
												"src": "2266:434:7"
											},
											{
												"body": {
													"nativeSrc": "2793:282:7",
													"nodeType": "YulBlock",
													"src": "2793:282:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2842:83:7",
																"nodeType": "YulBlock",
																"src": "2842:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2844:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2844:77:7"
																			},
																			"nativeSrc": "2844:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2844:79:7"
																		},
																		"nativeSrc": "2844:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2844:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2821:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2829:4:7",
																						"nodeType": "YulLiteral",
																						"src": "2829:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2817:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2817:3:7"
																				},
																				"nativeSrc": "2817:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2817:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2836:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2836:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2813:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2813:3:7"
																		},
																		"nativeSrc": "2813:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2813:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2806:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:7"
																},
																"nativeSrc": "2806:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2806:35:7"
															},
															"nativeSrc": "2803:122:7",
															"nodeType": "YulIf",
															"src": "2803:122:7"
														},
														{
															"nativeSrc": "2934:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2934:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2954:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2954:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2948:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2948:5:7"
																},
																"nativeSrc": "2948:13:7",
																"nodeType": "YulFunctionCall",
																"src": "2948:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2938:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2938:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2970:99:7",
															"nodeType": "YulAssignment",
															"src": "2970:99:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3042:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3042:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3050:4:7",
																				"nodeType": "YulLiteral",
																				"src": "3050:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3038:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3038:3:7"
																		},
																		"nativeSrc": "3038:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3038:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3057:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3057:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3065:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3065:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2979:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2979:58:7"
																},
																"nativeSrc": "2979:90:7",
																"nodeType": "YulFunctionCall",
																"src": "2979:90:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2970:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2720:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2771:6:7",
														"nodeType": "YulTypedName",
														"src": "2771:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2779:3:7",
														"nodeType": "YulTypedName",
														"src": "2779:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2787:5:7",
														"nodeType": "YulTypedName",
														"src": "2787:5:7",
														"type": ""
													}
												],
												"src": "2720:355:7"
											},
											{
												"body": {
													"nativeSrc": "3212:878:7",
													"nodeType": "YulBlock",
													"src": "3212:878:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3258:83:7",
																"nodeType": "YulBlock",
																"src": "3258:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3260:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3260:77:7"
																			},
																			"nativeSrc": "3260:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3260:79:7"
																		},
																		"nativeSrc": "3260:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3260:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3242:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3242:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3229:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:7"
																		},
																		"nativeSrc": "3229:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3254:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3254:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3225:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:7"
																},
																"nativeSrc": "3225:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3225:32:7"
															},
															"nativeSrc": "3222:119:7",
															"nodeType": "YulIf",
															"src": "3222:119:7"
														},
														{
															"nativeSrc": "3351:128:7",
															"nodeType": "YulBlock",
															"src": "3351:128:7",
															"statements": [
																{
																	"nativeSrc": "3366:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3366:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3380:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3380:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3370:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3370:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3395:74:7",
																	"nodeType": "YulAssignment",
																	"src": "3395:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3441:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3441:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3452:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3452:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3437:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3437:3:7"
																				},
																				"nativeSrc": "3437:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3437:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3461:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3461:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3405:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "3405:31:7"
																		},
																		"nativeSrc": "3405:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3405:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3395:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3395:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3489:292:7",
															"nodeType": "YulBlock",
															"src": "3489:292:7",
															"statements": [
																{
																	"nativeSrc": "3504:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3504:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3528:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3528:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3539:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3539:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3524:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3524:3:7"
																				},
																				"nativeSrc": "3524:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3524:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3518:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3518:5:7"
																		},
																		"nativeSrc": "3518:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3518:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3508:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3508:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3590:83:7",
																		"nodeType": "YulBlock",
																		"src": "3590:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3592:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3592:77:7"
																					},
																					"nativeSrc": "3592:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3592:79:7"
																				},
																				"nativeSrc": "3592:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3592:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3562:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3562:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3570:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3570:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3559:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3559:2:7"
																		},
																		"nativeSrc": "3559:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3559:30:7"
																	},
																	"nativeSrc": "3556:117:7",
																	"nodeType": "YulIf",
																	"src": "3556:117:7"
																},
																{
																	"nativeSrc": "3687:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3687:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3743:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3743:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3754:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3754:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3739:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3739:3:7"
																				},
																				"nativeSrc": "3739:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3739:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3763:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3763:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3697:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3697:41:7"
																		},
																		"nativeSrc": "3697:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3697:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3687:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3687:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3791:292:7",
															"nodeType": "YulBlock",
															"src": "3791:292:7",
															"statements": [
																{
																	"nativeSrc": "3806:39:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3806:39:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3830:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3830:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3841:2:7",
																						"nodeType": "YulLiteral",
																						"src": "3841:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3826:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3826:3:7"
																				},
																				"nativeSrc": "3826:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3826:18:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3820:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3820:5:7"
																		},
																		"nativeSrc": "3820:25:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3820:25:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3810:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3810:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3892:83:7",
																		"nodeType": "YulBlock",
																		"src": "3892:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3894:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "3894:77:7"
																					},
																					"nativeSrc": "3894:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3894:79:7"
																				},
																				"nativeSrc": "3894:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3894:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3864:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3864:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3872:18:7",
																				"nodeType": "YulLiteral",
																				"src": "3872:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3861:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3861:2:7"
																		},
																		"nativeSrc": "3861:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3861:30:7"
																	},
																	"nativeSrc": "3858:117:7",
																	"nodeType": "YulIf",
																	"src": "3858:117:7"
																},
																{
																	"nativeSrc": "3989:84:7",
																	"nodeType": "YulAssignment",
																	"src": "3989:84:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:7"
																				},
																				"nativeSrc": "4041:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3999:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "3999:41:7"
																		},
																		"nativeSrc": "3999:74:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:74:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3989:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3989:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "3081:1009:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3166:9:7",
														"nodeType": "YulTypedName",
														"src": "3166:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3177:7:7",
														"nodeType": "YulTypedName",
														"src": "3177:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3189:6:7",
														"nodeType": "YulTypedName",
														"src": "3189:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3197:6:7",
														"nodeType": "YulTypedName",
														"src": "3197:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3205:6:7",
														"nodeType": "YulTypedName",
														"src": "3205:6:7",
														"type": ""
													}
												],
												"src": "3081:1009:7"
											},
											{
												"body": {
													"nativeSrc": "4155:40:7",
													"nodeType": "YulBlock",
													"src": "4155:40:7",
													"statements": [
														{
															"nativeSrc": "4166:22:7",
															"nodeType": "YulAssignment",
															"src": "4166:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4182:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4182:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4176:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4176:5:7"
																},
																"nativeSrc": "4176:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4176:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4166:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4166:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4096:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4138:5:7",
														"nodeType": "YulTypedName",
														"src": "4138:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4148:6:7",
														"nodeType": "YulTypedName",
														"src": "4148:6:7",
														"type": ""
													}
												],
												"src": "4096:99:7"
											},
											{
												"body": {
													"nativeSrc": "4229:152:7",
													"nodeType": "YulBlock",
													"src": "4229:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4246:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4246:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4249:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4249:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4239:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4239:6:7"
																},
																"nativeSrc": "4239:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4239:88:7"
															},
															"nativeSrc": "4239:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4239:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4343:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4346:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:7"
																},
																"nativeSrc": "4336:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4336:15:7"
															},
															"nativeSrc": "4336:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4336:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4367:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4367:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4370:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4360:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:7"
																},
																"nativeSrc": "4360:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4360:15:7"
															},
															"nativeSrc": "4360:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4360:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4201:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4201:180:7"
											},
											{
												"body": {
													"nativeSrc": "4438:269:7",
													"nodeType": "YulBlock",
													"src": "4438:269:7",
													"statements": [
														{
															"nativeSrc": "4448:22:7",
															"nodeType": "YulAssignment",
															"src": "4448:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4462:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4468:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4458:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:7"
																},
																"nativeSrc": "4458:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4458:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4448:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:7"
																}
															]
														},
														{
															"nativeSrc": "4479:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4479:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4509:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4509:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4515:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4515:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4505:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4505:3:7"
																},
																"nativeSrc": "4505:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4505:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4483:18:7",
																	"nodeType": "YulTypedName",
																	"src": "4483:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4556:51:7",
																"nodeType": "YulBlock",
																"src": "4556:51:7",
																"statements": [
																	{
																		"nativeSrc": "4570:27:7",
																		"nodeType": "YulAssignment",
																		"src": "4570:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4584:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4584:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4592:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4592:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4580:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4580:3:7"
																			},
																			"nativeSrc": "4580:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4580:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4570:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4570:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4536:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4536:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4529:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:7"
																},
																"nativeSrc": "4529:26:7",
																"nodeType": "YulFunctionCall",
																"src": "4529:26:7"
															},
															"nativeSrc": "4526:81:7",
															"nodeType": "YulIf",
															"src": "4526:81:7"
														},
														{
															"body": {
																"nativeSrc": "4659:42:7",
																"nodeType": "YulBlock",
																"src": "4659:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4673:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4673:16:7"
																			},
																			"nativeSrc": "4673:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4673:18:7"
																		},
																		"nativeSrc": "4673:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4673:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4623:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "4623:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4646:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4654:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4654:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4643:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4643:2:7"
																		},
																		"nativeSrc": "4643:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4643:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4620:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4620:2:7"
																},
																"nativeSrc": "4620:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4620:38:7"
															},
															"nativeSrc": "4617:84:7",
															"nodeType": "YulIf",
															"src": "4617:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4387:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4422:4:7",
														"nodeType": "YulTypedName",
														"src": "4422:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4431:6:7",
														"nodeType": "YulTypedName",
														"src": "4431:6:7",
														"type": ""
													}
												],
												"src": "4387:320:7"
											},
											{
												"body": {
													"nativeSrc": "4767:87:7",
													"nodeType": "YulBlock",
													"src": "4767:87:7",
													"statements": [
														{
															"nativeSrc": "4777:11:7",
															"nodeType": "YulAssignment",
															"src": "4777:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "4785:3:7",
																"nodeType": "YulIdentifier",
																"src": "4785:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4777:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4777:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4805:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4805:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4808:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4808:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4798:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:7"
																},
																"nativeSrc": "4798:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4798:14:7"
															},
															"nativeSrc": "4798:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "4798:14:7"
														},
														{
															"nativeSrc": "4821:26:7",
															"nodeType": "YulAssignment",
															"src": "4821:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4839:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4839:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4842:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4842:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4829:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4829:9:7"
																},
																"nativeSrc": "4829:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4829:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4821:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4821:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4713:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4754:3:7",
														"nodeType": "YulTypedName",
														"src": "4754:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4762:4:7",
														"nodeType": "YulTypedName",
														"src": "4762:4:7",
														"type": ""
													}
												],
												"src": "4713:141:7"
											},
											{
												"body": {
													"nativeSrc": "4904:49:7",
													"nodeType": "YulBlock",
													"src": "4904:49:7",
													"statements": [
														{
															"nativeSrc": "4914:33:7",
															"nodeType": "YulAssignment",
															"src": "4914:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4932:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4932:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4939:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4939:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4928:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4928:3:7"
																		},
																		"nativeSrc": "4928:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4928:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4944:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4944:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4924:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4924:3:7"
																},
																"nativeSrc": "4924:23:7",
																"nodeType": "YulFunctionCall",
																"src": "4924:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4914:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4860:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4887:5:7",
														"nodeType": "YulTypedName",
														"src": "4887:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4897:6:7",
														"nodeType": "YulTypedName",
														"src": "4897:6:7",
														"type": ""
													}
												],
												"src": "4860:93:7"
											},
											{
												"body": {
													"nativeSrc": "5012:54:7",
													"nodeType": "YulBlock",
													"src": "5012:54:7",
													"statements": [
														{
															"nativeSrc": "5022:37:7",
															"nodeType": "YulAssignment",
															"src": "5022:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5047:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5047:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5053:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5053:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5043:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5043:3:7"
																},
																"nativeSrc": "5043:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5043:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5022:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5022:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4959:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4987:4:7",
														"nodeType": "YulTypedName",
														"src": "4987:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4993:5:7",
														"nodeType": "YulTypedName",
														"src": "4993:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5003:8:7",
														"nodeType": "YulTypedName",
														"src": "5003:8:7",
														"type": ""
													}
												],
												"src": "4959:107:7"
											},
											{
												"body": {
													"nativeSrc": "5148:317:7",
													"nodeType": "YulBlock",
													"src": "5148:317:7",
													"statements": [
														{
															"nativeSrc": "5158:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5158:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5179:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "5179:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5191:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5175:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5175:3:7"
																},
																"nativeSrc": "5175:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5175:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5162:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5162:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5202:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5202:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5233:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5233:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5244:66:7",
																		"nodeType": "YulLiteral",
																		"src": "5244:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5214:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5214:18:7"
																},
																"nativeSrc": "5214:97:7",
																"nodeType": "YulFunctionCall",
																"src": "5214:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5206:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5206:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5320:51:7",
															"nodeType": "YulAssignment",
															"src": "5320:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5351:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5351:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5362:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5362:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5332:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5332:18:7"
																},
																"nativeSrc": "5332:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5332:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5320:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5320:8:7"
																}
															]
														},
														{
															"nativeSrc": "5380:30:7",
															"nodeType": "YulAssignment",
															"src": "5380:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5393:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5393:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5404:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5404:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5400:3:7"
																		},
																		"nativeSrc": "5400:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5400:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5389:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5389:3:7"
																},
																"nativeSrc": "5389:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5389:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5380:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5380:5:7"
																}
															]
														},
														{
															"nativeSrc": "5419:40:7",
															"nodeType": "YulAssignment",
															"src": "5419:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5432:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5432:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5443:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5443:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5453:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5453:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5439:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:7"
																		},
																		"nativeSrc": "5439:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:7"
																},
																"nativeSrc": "5429:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5429:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5419:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5419:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5072:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5109:5:7",
														"nodeType": "YulTypedName",
														"src": "5109:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5116:10:7",
														"nodeType": "YulTypedName",
														"src": "5116:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5128:8:7",
														"nodeType": "YulTypedName",
														"src": "5128:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5141:6:7",
														"nodeType": "YulTypedName",
														"src": "5141:6:7",
														"type": ""
													}
												],
												"src": "5072:393:7"
											},
											{
												"body": {
													"nativeSrc": "5516:32:7",
													"nodeType": "YulBlock",
													"src": "5516:32:7",
													"statements": [
														{
															"nativeSrc": "5526:16:7",
															"nodeType": "YulAssignment",
															"src": "5526:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "5537:5:7",
																"nodeType": "YulIdentifier",
																"src": "5537:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5526:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5526:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5471:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5498:5:7",
														"nodeType": "YulTypedName",
														"src": "5498:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5508:7:7",
														"nodeType": "YulTypedName",
														"src": "5508:7:7",
														"type": ""
													}
												],
												"src": "5471:77:7"
											},
											{
												"body": {
													"nativeSrc": "5586:28:7",
													"nodeType": "YulBlock",
													"src": "5586:28:7",
													"statements": [
														{
															"nativeSrc": "5596:12:7",
															"nodeType": "YulAssignment",
															"src": "5596:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5603:5:7",
																"nodeType": "YulIdentifier",
																"src": "5603:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5596:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5554:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5572:5:7",
														"nodeType": "YulTypedName",
														"src": "5572:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5582:3:7",
														"nodeType": "YulTypedName",
														"src": "5582:3:7",
														"type": ""
													}
												],
												"src": "5554:60:7"
											},
											{
												"body": {
													"nativeSrc": "5680:82:7",
													"nodeType": "YulBlock",
													"src": "5680:82:7",
													"statements": [
														{
															"nativeSrc": "5690:66:7",
															"nodeType": "YulAssignment",
															"src": "5690:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5748:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5748:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5730:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "5730:17:7"
																				},
																				"nativeSrc": "5730:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5721:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "5721:8:7"
																		},
																		"nativeSrc": "5721:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5721:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5703:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5703:17:7"
																},
																"nativeSrc": "5703:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5703:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5690:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5690:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5620:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5660:5:7",
														"nodeType": "YulTypedName",
														"src": "5660:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5670:9:7",
														"nodeType": "YulTypedName",
														"src": "5670:9:7",
														"type": ""
													}
												],
												"src": "5620:142:7"
											},
											{
												"body": {
													"nativeSrc": "5815:28:7",
													"nodeType": "YulBlock",
													"src": "5815:28:7",
													"statements": [
														{
															"nativeSrc": "5825:12:7",
															"nodeType": "YulAssignment",
															"src": "5825:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "5832:5:7",
																"nodeType": "YulIdentifier",
																"src": "5832:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5825:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5768:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5801:5:7",
														"nodeType": "YulTypedName",
														"src": "5801:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5811:3:7",
														"nodeType": "YulTypedName",
														"src": "5811:3:7",
														"type": ""
													}
												],
												"src": "5768:75:7"
											},
											{
												"body": {
													"nativeSrc": "5925:193:7",
													"nodeType": "YulBlock",
													"src": "5925:193:7",
													"statements": [
														{
															"nativeSrc": "5935:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5935:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5990:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5990:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5959:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5959:30:7"
																},
																"nativeSrc": "5959:39:7",
																"nodeType": "YulFunctionCall",
																"src": "5959:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5939:16:7",
																	"nodeType": "YulTypedName",
																	"src": "5939:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6014:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6014:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6054:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6054:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6048:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6048:5:7"
																				},
																				"nativeSrc": "6048:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6048:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6061:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6061:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6093:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "6093:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6069:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "6069:23:7"
																				},
																				"nativeSrc": "6069:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6069:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6020:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "6020:27:7"
																		},
																		"nativeSrc": "6020:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6020:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6007:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:7"
																},
																"nativeSrc": "6007:105:7",
																"nodeType": "YulFunctionCall",
																"src": "6007:105:7"
															},
															"nativeSrc": "6007:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "6007:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5849:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5902:4:7",
														"nodeType": "YulTypedName",
														"src": "5902:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5908:6:7",
														"nodeType": "YulTypedName",
														"src": "5908:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5916:7:7",
														"nodeType": "YulTypedName",
														"src": "5916:7:7",
														"type": ""
													}
												],
												"src": "5849:269:7"
											},
											{
												"body": {
													"nativeSrc": "6173:24:7",
													"nodeType": "YulBlock",
													"src": "6173:24:7",
													"statements": [
														{
															"nativeSrc": "6183:8:7",
															"nodeType": "YulAssignment",
															"src": "6183:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6190:1:7",
																"nodeType": "YulLiteral",
																"src": "6190:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6183:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6124:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6169:3:7",
														"nodeType": "YulTypedName",
														"src": "6169:3:7",
														"type": ""
													}
												],
												"src": "6124:73:7"
											},
											{
												"body": {
													"nativeSrc": "6256:136:7",
													"nodeType": "YulBlock",
													"src": "6256:136:7",
													"statements": [
														{
															"nativeSrc": "6266:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6266:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6280:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "6280:30:7"
																},
																"nativeSrc": "6280:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6280:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6270:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6270:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6365:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6365:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6371:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6379:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6379:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6321:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6321:43:7"
																},
																"nativeSrc": "6321:65:7",
																"nodeType": "YulFunctionCall",
																"src": "6321:65:7"
															},
															"nativeSrc": "6321:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "6321:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6203:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6242:4:7",
														"nodeType": "YulTypedName",
														"src": "6242:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6248:6:7",
														"nodeType": "YulTypedName",
														"src": "6248:6:7",
														"type": ""
													}
												],
												"src": "6203:189:7"
											},
											{
												"body": {
													"nativeSrc": "6448:136:7",
													"nodeType": "YulBlock",
													"src": "6448:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6515:63:7",
																"nodeType": "YulBlock",
																"src": "6515:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6559:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6559:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6566:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6566:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6529:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "6529:29:7"
																			},
																			"nativeSrc": "6529:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6529:39:7"
																		},
																		"nativeSrc": "6529:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6529:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6468:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6468:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6475:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6475:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6465:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6465:2:7"
																},
																"nativeSrc": "6465:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6465:14:7"
															},
															"nativeSrc": "6458:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6480:26:7",
																"nodeType": "YulBlock",
																"src": "6480:26:7",
																"statements": [
																	{
																		"nativeSrc": "6482:22:7",
																		"nodeType": "YulAssignment",
																		"src": "6482:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6495:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6495:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6502:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6502:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6491:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6491:3:7"
																			},
																			"nativeSrc": "6491:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6491:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6482:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6482:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6462:2:7",
																"nodeType": "YulBlock",
																"src": "6462:2:7",
																"statements": []
															},
															"src": "6458:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6398:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6436:5:7",
														"nodeType": "YulTypedName",
														"src": "6436:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6443:3:7",
														"nodeType": "YulTypedName",
														"src": "6443:3:7",
														"type": ""
													}
												],
												"src": "6398:186:7"
											},
											{
												"body": {
													"nativeSrc": "6669:464:7",
													"nodeType": "YulBlock",
													"src": "6669:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6695:431:7",
																"nodeType": "YulBlock",
																"src": "6695:431:7",
																"statements": [
																	{
																		"nativeSrc": "6709:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6709:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6757:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "6757:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6725:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "6725:31:7"
																			},
																			"nativeSrc": "6725:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6725:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6713:8:7",
																				"nodeType": "YulTypedName",
																				"src": "6713:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6776:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6776:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6799:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6799:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6827:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6827:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6809:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "6809:17:7"
																					},
																					"nativeSrc": "6809:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6809:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6795:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6795:3:7"
																			},
																			"nativeSrc": "6795:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6795:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6780:11:7",
																				"nodeType": "YulTypedName",
																				"src": "6780:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6996:27:7",
																			"nodeType": "YulBlock",
																			"src": "6996:27:7",
																			"statements": [
																				{
																					"nativeSrc": "6998:23:7",
																					"nodeType": "YulAssignment",
																					"src": "6998:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7013:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "7013:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6998:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "6998:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6980:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "6980:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6992:2:7",
																					"nodeType": "YulLiteral",
																					"src": "6992:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6977:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6977:2:7"
																			},
																			"nativeSrc": "6977:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6977:18:7"
																		},
																		"nativeSrc": "6974:49:7",
																		"nodeType": "YulIf",
																		"src": "6974:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7065:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "7065:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7082:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "7082:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7110:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7110:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7092:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "7092:17:7"
																							},
																							"nativeSrc": "7092:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7092:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7078:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7078:3:7"
																					},
																					"nativeSrc": "7078:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7078:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7036:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "7036:28:7"
																			},
																			"nativeSrc": "7036:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7036:80:7"
																		},
																		"nativeSrc": "7036:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7036:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6686:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6686:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6691:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6691:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6683:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6683:2:7"
																},
																"nativeSrc": "6683:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6683:11:7"
															},
															"nativeSrc": "6680:446:7",
															"nodeType": "YulIf",
															"src": "6680:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6590:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6645:5:7",
														"nodeType": "YulTypedName",
														"src": "6645:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6652:3:7",
														"nodeType": "YulTypedName",
														"src": "6652:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6657:10:7",
														"nodeType": "YulTypedName",
														"src": "6657:10:7",
														"type": ""
													}
												],
												"src": "6590:543:7"
											},
											{
												"body": {
													"nativeSrc": "7202:54:7",
													"nodeType": "YulBlock",
													"src": "7202:54:7",
													"statements": [
														{
															"nativeSrc": "7212:37:7",
															"nodeType": "YulAssignment",
															"src": "7212:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7237:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7237:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7243:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7243:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7233:3:7"
																},
																"nativeSrc": "7233:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7233:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7212:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7212:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7139:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7177:4:7",
														"nodeType": "YulTypedName",
														"src": "7177:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7183:5:7",
														"nodeType": "YulTypedName",
														"src": "7183:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7193:8:7",
														"nodeType": "YulTypedName",
														"src": "7193:8:7",
														"type": ""
													}
												],
												"src": "7139:117:7"
											},
											{
												"body": {
													"nativeSrc": "7313:118:7",
													"nodeType": "YulBlock",
													"src": "7313:118:7",
													"statements": [
														{
															"nativeSrc": "7323:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7323:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7372:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7372:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7375:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7375:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7368:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7368:3:7"
																				},
																				"nativeSrc": "7368:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7368:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7387:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7387:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7383:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7383:3:7"
																				},
																				"nativeSrc": "7383:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7383:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7339:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "7339:28:7"
																		},
																		"nativeSrc": "7339:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7339:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7335:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7335:3:7"
																},
																"nativeSrc": "7335:56:7",
																"nodeType": "YulFunctionCall",
																"src": "7335:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7327:4:7",
																	"nodeType": "YulTypedName",
																	"src": "7327:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7400:25:7",
															"nodeType": "YulAssignment",
															"src": "7400:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7414:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7414:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7420:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7420:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7410:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7410:3:7"
																},
																"nativeSrc": "7410:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7410:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7400:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7262:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7290:4:7",
														"nodeType": "YulTypedName",
														"src": "7290:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7296:5:7",
														"nodeType": "YulTypedName",
														"src": "7296:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7306:6:7",
														"nodeType": "YulTypedName",
														"src": "7306:6:7",
														"type": ""
													}
												],
												"src": "7262:169:7"
											},
											{
												"body": {
													"nativeSrc": "7517:214:7",
													"nodeType": "YulBlock",
													"src": "7517:214:7",
													"statements": [
														{
															"nativeSrc": "7650:37:7",
															"nodeType": "YulAssignment",
															"src": "7650:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7677:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7677:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7683:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7683:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7658:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "7658:18:7"
																},
																"nativeSrc": "7658:29:7",
																"nodeType": "YulFunctionCall",
																"src": "7658:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7650:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7650:4:7"
																}
															]
														},
														{
															"nativeSrc": "7696:29:7",
															"nodeType": "YulAssignment",
															"src": "7696:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7707:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7707:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7717:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7717:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7720:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7720:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7713:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7713:3:7"
																		},
																		"nativeSrc": "7713:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7713:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7704:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7704:2:7"
																},
																"nativeSrc": "7704:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7704:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7696:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7696:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7436:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7498:4:7",
														"nodeType": "YulTypedName",
														"src": "7498:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7504:3:7",
														"nodeType": "YulTypedName",
														"src": "7504:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7512:4:7",
														"nodeType": "YulTypedName",
														"src": "7512:4:7",
														"type": ""
													}
												],
												"src": "7436:295:7"
											},
											{
												"body": {
													"nativeSrc": "7828:1303:7",
													"nodeType": "YulBlock",
													"src": "7828:1303:7",
													"statements": [
														{
															"nativeSrc": "7839:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7839:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7886:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7886:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7853:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "7853:32:7"
																},
																"nativeSrc": "7853:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7853:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7843:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7843:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7975:22:7",
																"nodeType": "YulBlock",
																"src": "7975:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7977:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7977:16:7"
																			},
																			"nativeSrc": "7977:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7977:18:7"
																		},
																		"nativeSrc": "7977:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7977:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7947:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7947:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7955:18:7",
																		"nodeType": "YulLiteral",
																		"src": "7955:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7944:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7944:2:7"
																},
																"nativeSrc": "7944:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7944:30:7"
															},
															"nativeSrc": "7941:56:7",
															"nodeType": "YulIf",
															"src": "7941:56:7"
														},
														{
															"nativeSrc": "8007:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8007:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8053:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8053:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8047:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8047:5:7"
																		},
																		"nativeSrc": "8047:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8047:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8021:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "8021:25:7"
																},
																"nativeSrc": "8021:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8021:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8011:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8011:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8152:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8152:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8158:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8158:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8166:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8166:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8106:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "8106:45:7"
																},
																"nativeSrc": "8106:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8106:67:7"
															},
															"nativeSrc": "8106:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8106:67:7"
														},
														{
															"nativeSrc": "8183:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8183:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8200:1:7",
																"nodeType": "YulLiteral",
																"src": "8200:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8187:9:7",
																	"nodeType": "YulTypedName",
																	"src": "8187:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8211:17:7",
															"nodeType": "YulAssignment",
															"src": "8211:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "8224:4:7",
																"nodeType": "YulLiteral",
																"src": "8224:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8211:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "8211:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8275:611:7",
																		"nodeType": "YulBlock",
																		"src": "8275:611:7",
																		"statements": [
																			{
																				"nativeSrc": "8289:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8289:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8308:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8308:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8320:4:7",
																									"nodeType": "YulLiteral",
																									"src": "8320:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8316:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8316:3:7"
																							},
																							"nativeSrc": "8316:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8316:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8304:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8304:3:7"
																					},
																					"nativeSrc": "8304:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8304:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8293:7:7",
																						"nodeType": "YulTypedName",
																						"src": "8293:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8340:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8340:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8386:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8386:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8354:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "8354:31:7"
																					},
																					"nativeSrc": "8354:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8354:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8344:6:7",
																						"nodeType": "YulTypedName",
																						"src": "8344:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8404:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8404:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8413:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8413:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8408:1:7",
																						"nodeType": "YulTypedName",
																						"src": "8408:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8472:163:7",
																					"nodeType": "YulBlock",
																					"src": "8472:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8497:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8497:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8515:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "8515:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8520:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "8520:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8511:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8511:3:7"
																												},
																												"nativeSrc": "8511:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8511:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8505:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "8505:5:7"
																										},
																										"nativeSrc": "8505:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8505:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8490:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8490:6:7"
																								},
																								"nativeSrc": "8490:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8490:42:7"
																							},
																							"nativeSrc": "8490:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8490:42:7"
																						},
																						{
																							"nativeSrc": "8549:24:7",
																							"nodeType": "YulAssignment",
																							"src": "8549:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8563:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8563:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8571:1:7",
																										"nodeType": "YulLiteral",
																										"src": "8571:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8559:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8559:3:7"
																								},
																								"nativeSrc": "8559:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8559:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8549:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8549:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8590:31:7",
																							"nodeType": "YulAssignment",
																							"src": "8590:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8607:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "8607:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8618:2:7",
																										"nodeType": "YulLiteral",
																										"src": "8618:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8603:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8603:3:7"
																								},
																								"nativeSrc": "8603:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8603:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8590:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "8590:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8438:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "8438:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8441:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8441:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8435:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8435:2:7"
																					},
																					"nativeSrc": "8435:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8435:14:7"
																				},
																				"nativeSrc": "8427:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8450:21:7",
																					"nodeType": "YulBlock",
																					"src": "8450:21:7",
																					"statements": [
																						{
																							"nativeSrc": "8452:17:7",
																							"nodeType": "YulAssignment",
																							"src": "8452:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8461:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "8461:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8464:4:7",
																										"nodeType": "YulLiteral",
																										"src": "8464:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8457:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "8457:3:7"
																								},
																								"nativeSrc": "8457:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8457:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8452:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "8452:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8431:3:7",
																					"nodeType": "YulBlock",
																					"src": "8431:3:7",
																					"statements": []
																				},
																				"src": "8427:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "8671:156:7",
																					"nodeType": "YulBlock",
																					"src": "8671:156:7",
																					"statements": [
																						{
																							"nativeSrc": "8689:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8689:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8716:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8716:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8721:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8721:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8712:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8712:3:7"
																										},
																										"nativeSrc": "8712:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8712:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8706:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8706:5:7"
																								},
																								"nativeSrc": "8706:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8706:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8693:9:7",
																									"nodeType": "YulTypedName",
																									"src": "8693:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8756:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "8756:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8783:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8783:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8798:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "8798:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8806:4:7",
																														"nodeType": "YulLiteral",
																														"src": "8806:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8794:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "8794:3:7"
																												},
																												"nativeSrc": "8794:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "8794:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8764:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "8764:18:7"
																										},
																										"nativeSrc": "8764:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8764:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8749:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "8749:6:7"
																								},
																								"nativeSrc": "8749:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8749:64:7"
																							},
																							"nativeSrc": "8749:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "8749:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8654:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "8654:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8663:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "8663:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8651:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "8651:2:7"
																					},
																					"nativeSrc": "8651:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8651:19:7"
																				},
																				"nativeSrc": "8648:179:7",
																				"nodeType": "YulIf",
																				"src": "8648:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8847:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8847:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8861:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "8861:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8869:1:7",
																											"nodeType": "YulLiteral",
																											"src": "8869:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8857:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "8857:3:7"
																									},
																									"nativeSrc": "8857:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "8857:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8873:1:7",
																									"nodeType": "YulLiteral",
																									"src": "8873:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8853:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "8853:3:7"
																							},
																							"nativeSrc": "8853:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "8853:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8840:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8840:6:7"
																					},
																					"nativeSrc": "8840:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8840:36:7"
																				},
																				"nativeSrc": "8840:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "8840:36:7"
																			}
																		]
																	},
																	"nativeSrc": "8268:618:7",
																	"nodeType": "YulCase",
																	"src": "8268:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8273:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8273:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8903:222:7",
																		"nodeType": "YulBlock",
																		"src": "8903:222:7",
																		"statements": [
																			{
																				"nativeSrc": "8917:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8917:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8930:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8930:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8921:5:7",
																						"nodeType": "YulTypedName",
																						"src": "8921:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8954:67:7",
																					"nodeType": "YulBlock",
																					"src": "8954:67:7",
																					"statements": [
																						{
																							"nativeSrc": "8972:35:7",
																							"nodeType": "YulAssignment",
																							"src": "8972:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8991:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "8991:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8996:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "8996:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8987:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "8987:3:7"
																										},
																										"nativeSrc": "8987:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "8987:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8981:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8981:5:7"
																								},
																								"nativeSrc": "8981:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "8981:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8972:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "8972:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8947:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8947:6:7"
																				},
																				"nativeSrc": "8944:77:7",
																				"nodeType": "YulIf",
																				"src": "8944:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9041:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9041:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9100:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "9100:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9107:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "9107:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9047:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "9047:52:7"
																							},
																							"nativeSrc": "9047:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "9047:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9034:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9034:6:7"
																					},
																					"nativeSrc": "9034:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9034:81:7"
																				},
																				"nativeSrc": "9034:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "9034:81:7"
																			}
																		]
																	},
																	"nativeSrc": "8895:230:7",
																	"nodeType": "YulCase",
																	"src": "8895:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8248:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8248:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8256:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8256:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8245:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8245:2:7"
																},
																"nativeSrc": "8245:14:7",
																"nodeType": "YulFunctionCall",
																"src": "8245:14:7"
															},
															"nativeSrc": "8238:887:7",
															"nodeType": "YulSwitch",
															"src": "8238:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7736:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7817:4:7",
														"nodeType": "YulTypedName",
														"src": "7817:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7823:3:7",
														"nodeType": "YulTypedName",
														"src": "7823:3:7",
														"type": ""
													}
												],
												"src": "7736:1395:7"
											},
											{
												"body": {
													"nativeSrc": "9165:152:7",
													"nodeType": "YulBlock",
													"src": "9165:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9182:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9182:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9185:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9185:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9175:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9175:6:7"
																},
																"nativeSrc": "9175:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9175:88:7"
															},
															"nativeSrc": "9175:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9175:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9279:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9279:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9282:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9282:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9272:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9272:6:7"
																},
																"nativeSrc": "9272:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9272:15:7"
															},
															"nativeSrc": "9272:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9272:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9303:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9303:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9306:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9306:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9296:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9296:6:7"
																},
																"nativeSrc": "9296:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9296:15:7"
															},
															"nativeSrc": "9296:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9296:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9137:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9137:180:7"
											},
											{
												"body": {
													"nativeSrc": "9374:51:7",
													"nodeType": "YulBlock",
													"src": "9374:51:7",
													"statements": [
														{
															"nativeSrc": "9384:34:7",
															"nodeType": "YulAssignment",
															"src": "9384:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9409:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9409:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9412:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9412:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9405:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9405:3:7"
																},
																"nativeSrc": "9405:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9405:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9384:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "9384:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9323:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9355:5:7",
														"nodeType": "YulTypedName",
														"src": "9355:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9365:8:7",
														"nodeType": "YulTypedName",
														"src": "9365:8:7",
														"type": ""
													}
												],
												"src": "9323:102:7"
											},
											{
												"body": {
													"nativeSrc": "9504:775:7",
													"nodeType": "YulBlock",
													"src": "9504:775:7",
													"statements": [
														{
															"nativeSrc": "9514:15:7",
															"nodeType": "YulAssignment",
															"src": "9514:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "9523:6:7",
																"nodeType": "YulIdentifier",
																"src": "9523:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9514:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9514:5:7"
																}
															]
														},
														{
															"nativeSrc": "9538:14:7",
															"nodeType": "YulAssignment",
															"src": "9538:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "9547:5:7",
																"nodeType": "YulIdentifier",
																"src": "9547:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9538:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9538:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9596:677:7",
																"nodeType": "YulBlock",
																"src": "9596:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9684:22:7",
																			"nodeType": "YulBlock",
																			"src": "9684:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9686:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "9686:16:7"
																						},
																						"nativeSrc": "9686:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9686:18:7"
																					},
																					"nativeSrc": "9686:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "9686:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9662:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "9662:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9672:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9672:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9677:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "9677:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9668:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9668:3:7"
																					},
																					"nativeSrc": "9668:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9668:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9659:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "9659:2:7"
																			},
																			"nativeSrc": "9659:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9659:24:7"
																		},
																		"nativeSrc": "9656:50:7",
																		"nodeType": "YulIf",
																		"src": "9656:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "9751:419:7",
																			"nodeType": "YulBlock",
																			"src": "9751:419:7",
																			"statements": [
																				{
																					"nativeSrc": "10131:25:7",
																					"nodeType": "YulAssignment",
																					"src": "10131:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10144:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "10144:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10151:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "10151:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10140:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10140:3:7"
																						},
																						"nativeSrc": "10140:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10140:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10131:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "10131:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9726:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "9726:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9736:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9736:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9722:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9722:3:7"
																			},
																			"nativeSrc": "9722:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9722:16:7"
																		},
																		"nativeSrc": "9719:451:7",
																		"nodeType": "YulIf",
																		"src": "9719:451:7"
																	},
																	{
																		"nativeSrc": "10183:23:7",
																		"nodeType": "YulAssignment",
																		"src": "10183:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10195:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "10195:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10201:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "10201:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10191:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "10191:3:7"
																			},
																			"nativeSrc": "10191:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10191:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10183:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10183:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10219:44:7",
																		"nodeType": "YulAssignment",
																		"src": "10219:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10254:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "10254:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10231:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "10231:22:7"
																			},
																			"nativeSrc": "10231:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10231:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10219:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "10219:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9572:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9572:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9582:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9582:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9569:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9569:2:7"
																},
																"nativeSrc": "9569:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9569:15:7"
															},
															"nativeSrc": "9561:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9585:2:7",
																"nodeType": "YulBlock",
																"src": "9585:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9565:3:7",
																"nodeType": "YulBlock",
																"src": "9565:3:7",
																"statements": []
															},
															"src": "9561:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9431:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9459:6:7",
														"nodeType": "YulTypedName",
														"src": "9459:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9467:5:7",
														"nodeType": "YulTypedName",
														"src": "9467:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9474:8:7",
														"nodeType": "YulTypedName",
														"src": "9474:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9484:3:7",
														"nodeType": "YulTypedName",
														"src": "9484:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9492:5:7",
														"nodeType": "YulTypedName",
														"src": "9492:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9499:4:7",
														"nodeType": "YulTypedName",
														"src": "9499:4:7",
														"type": ""
													}
												],
												"src": "9431:848:7"
											},
											{
												"body": {
													"nativeSrc": "10345:1013:7",
													"nodeType": "YulBlock",
													"src": "10345:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10540:20:7",
																"nodeType": "YulBlock",
																"src": "10540:20:7",
																"statements": [
																	{
																		"nativeSrc": "10542:10:7",
																		"nodeType": "YulAssignment",
																		"src": "10542:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10551:1:7",
																			"nodeType": "YulLiteral",
																			"src": "10551:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10542:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10542:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10553:5:7",
																		"nodeType": "YulLeave",
																		"src": "10553:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10530:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "10530:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10523:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10523:6:7"
																},
																"nativeSrc": "10523:16:7",
																"nodeType": "YulFunctionCall",
																"src": "10523:16:7"
															},
															"nativeSrc": "10520:40:7",
															"nodeType": "YulIf",
															"src": "10520:40:7"
														},
														{
															"body": {
																"nativeSrc": "10585:20:7",
																"nodeType": "YulBlock",
																"src": "10585:20:7",
																"statements": [
																	{
																		"nativeSrc": "10587:10:7",
																		"nodeType": "YulAssignment",
																		"src": "10587:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10596:1:7",
																			"nodeType": "YulLiteral",
																			"src": "10596:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10587:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10587:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10598:5:7",
																		"nodeType": "YulLeave",
																		"src": "10598:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10579:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10579:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10572:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10572:6:7"
																},
																"nativeSrc": "10572:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10572:12:7"
															},
															"nativeSrc": "10569:36:7",
															"nodeType": "YulIf",
															"src": "10569:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10715:20:7",
																		"nodeType": "YulBlock",
																		"src": "10715:20:7",
																		"statements": [
																			{
																				"nativeSrc": "10717:10:7",
																				"nodeType": "YulAssignment",
																				"src": "10717:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10726:1:7",
																					"nodeType": "YulLiteral",
																					"src": "10726:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10717:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10717:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10728:5:7",
																				"nodeType": "YulLeave",
																				"src": "10728:5:7"
																			}
																		]
																	},
																	"nativeSrc": "10708:27:7",
																	"nodeType": "YulCase",
																	"src": "10708:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10713:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10713:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10759:176:7",
																		"nodeType": "YulBlock",
																		"src": "10759:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10794:22:7",
																					"nodeType": "YulBlock",
																					"src": "10794:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10796:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "10796:16:7"
																								},
																								"nativeSrc": "10796:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "10796:18:7"
																							},
																							"nativeSrc": "10796:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "10796:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10779:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "10779:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10789:3:7",
																							"nodeType": "YulLiteral",
																							"src": "10789:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10776:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "10776:2:7"
																					},
																					"nativeSrc": "10776:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10776:17:7"
																				},
																				"nativeSrc": "10773:43:7",
																				"nodeType": "YulIf",
																				"src": "10773:43:7"
																			},
																			{
																				"nativeSrc": "10829:25:7",
																				"nodeType": "YulAssignment",
																				"src": "10829:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10842:1:7",
																							"nodeType": "YulLiteral",
																							"src": "10842:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "10845:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "10845:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "10838:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "10838:3:7"
																					},
																					"nativeSrc": "10838:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10838:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10829:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10829:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10885:22:7",
																					"nodeType": "YulBlock",
																					"src": "10885:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10887:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "10887:16:7"
																								},
																								"nativeSrc": "10887:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "10887:18:7"
																							},
																							"nativeSrc": "10887:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "10887:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "10873:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "10873:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "10880:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10880:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10870:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "10870:2:7"
																					},
																					"nativeSrc": "10870:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10870:14:7"
																				},
																				"nativeSrc": "10867:40:7",
																				"nodeType": "YulIf",
																				"src": "10867:40:7"
																			},
																			{
																				"nativeSrc": "10920:5:7",
																				"nodeType": "YulLeave",
																				"src": "10920:5:7"
																			}
																		]
																	},
																	"nativeSrc": "10744:191:7",
																	"nodeType": "YulCase",
																	"src": "10744:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10749:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10749:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10665:4:7",
																"nodeType": "YulIdentifier",
																"src": "10665:4:7"
															},
															"nativeSrc": "10658:277:7",
															"nodeType": "YulSwitch",
															"src": "10658:277:7"
														},
														{
															"body": {
																"nativeSrc": "11067:123:7",
																"nodeType": "YulBlock",
																"src": "11067:123:7",
																"statements": [
																	{
																		"nativeSrc": "11081:28:7",
																		"nodeType": "YulAssignment",
																		"src": "11081:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "11094:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "11094:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "11100:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "11100:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "11090:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11090:3:7"
																			},
																			"nativeSrc": "11090:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11090:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "11081:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11081:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11140:22:7",
																			"nodeType": "YulBlock",
																			"src": "11140:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11142:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "11142:16:7"
																						},
																						"nativeSrc": "11142:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11142:18:7"
																					},
																					"nativeSrc": "11142:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "11142:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11128:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "11128:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11135:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11135:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "11125:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "11125:2:7"
																			},
																			"nativeSrc": "11125:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11125:14:7"
																		},
																		"nativeSrc": "11122:40:7",
																		"nodeType": "YulIf",
																		"src": "11122:40:7"
																	},
																	{
																		"nativeSrc": "11175:5:7",
																		"nodeType": "YulLeave",
																		"src": "11175:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10970:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "10970:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10976:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10976:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10967:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10967:2:7"
																				},
																				"nativeSrc": "10967:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10967:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10984:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "10984:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10994:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10994:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10981:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10981:2:7"
																				},
																				"nativeSrc": "10981:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10981:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10963:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10963:3:7"
																		},
																		"nativeSrc": "10963:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10963:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "11019:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "11019:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11025:3:7",
																						"nodeType": "YulLiteral",
																						"src": "11025:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11016:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11016:2:7"
																				},
																				"nativeSrc": "11016:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11016:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "11034:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "11034:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11044:2:7",
																						"nodeType": "YulLiteral",
																						"src": "11044:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11031:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11031:2:7"
																				},
																				"nativeSrc": "11031:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11031:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11012:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11012:3:7"
																		},
																		"nativeSrc": "11012:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11012:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10947:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10947:2:7"
																},
																"nativeSrc": "10947:111:7",
																"nodeType": "YulFunctionCall",
																"src": "10947:111:7"
															},
															"nativeSrc": "10944:246:7",
															"nodeType": "YulIf",
															"src": "10944:246:7"
														},
														{
															"nativeSrc": "11200:57:7",
															"nodeType": "YulAssignment",
															"src": "11200:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11234:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11234:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11237:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11237:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11243:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "11243:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11253:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11253:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11215:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "11215:18:7"
																},
																"nativeSrc": "11215:42:7",
																"nodeType": "YulFunctionCall",
																"src": "11215:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11200:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11200:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "11207:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11207:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11296:22:7",
																"nodeType": "YulBlock",
																"src": "11296:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11298:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11298:16:7"
																			},
																			"nativeSrc": "11298:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11298:18:7"
																		},
																		"nativeSrc": "11298:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11298:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11273:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11273:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11284:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "11284:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11289:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11289:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11280:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11280:3:7"
																		},
																		"nativeSrc": "11280:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11280:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11270:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11270:2:7"
																},
																"nativeSrc": "11270:25:7",
																"nodeType": "YulFunctionCall",
																"src": "11270:25:7"
															},
															"nativeSrc": "11267:51:7",
															"nodeType": "YulIf",
															"src": "11267:51:7"
														},
														{
															"nativeSrc": "11327:25:7",
															"nodeType": "YulAssignment",
															"src": "11327:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11340:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11347:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11347:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11336:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11336:3:7"
																},
																"nativeSrc": "11336:16:7",
																"nodeType": "YulFunctionCall",
																"src": "11336:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11327:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11327:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10285:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10315:4:7",
														"nodeType": "YulTypedName",
														"src": "10315:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10321:8:7",
														"nodeType": "YulTypedName",
														"src": "10321:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10331:3:7",
														"nodeType": "YulTypedName",
														"src": "10331:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10339:5:7",
														"nodeType": "YulTypedName",
														"src": "10339:5:7",
														"type": ""
													}
												],
												"src": "10285:1073:7"
											},
											{
												"body": {
													"nativeSrc": "11407:43:7",
													"nodeType": "YulBlock",
													"src": "11407:43:7",
													"statements": [
														{
															"nativeSrc": "11417:27:7",
															"nodeType": "YulAssignment",
															"src": "11417:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11432:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11432:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11439:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11439:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11428:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11428:3:7"
																},
																"nativeSrc": "11428:16:7",
																"nodeType": "YulFunctionCall",
																"src": "11428:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11417:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "11417:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "11364:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11389:5:7",
														"nodeType": "YulTypedName",
														"src": "11389:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11399:7:7",
														"nodeType": "YulTypedName",
														"src": "11399:7:7",
														"type": ""
													}
												],
												"src": "11364:86:7"
											},
											{
												"body": {
													"nativeSrc": "11520:217:7",
													"nodeType": "YulBlock",
													"src": "11520:217:7",
													"statements": [
														{
															"nativeSrc": "11530:31:7",
															"nodeType": "YulAssignment",
															"src": "11530:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11556:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11556:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11538:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11538:17:7"
																},
																"nativeSrc": "11538:23:7",
																"nodeType": "YulFunctionCall",
																"src": "11538:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11530:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11530:4:7"
																}
															]
														},
														{
															"nativeSrc": "11570:37:7",
															"nodeType": "YulAssignment",
															"src": "11570:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11598:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "11598:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "11582:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "11582:15:7"
																},
																"nativeSrc": "11582:25:7",
																"nodeType": "YulFunctionCall",
																"src": "11582:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "11570:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "11570:8:7"
																}
															]
														},
														{
															"nativeSrc": "11617:113:7",
															"nodeType": "YulAssignment",
															"src": "11617:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11647:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11647:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11653:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "11653:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11663:66:7",
																		"nodeType": "YulLiteral",
																		"src": "11663:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "11626:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "11626:20:7"
																},
																"nativeSrc": "11626:104:7",
																"nodeType": "YulFunctionCall",
																"src": "11626:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11617:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "11617:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "11456:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11495:4:7",
														"nodeType": "YulTypedName",
														"src": "11495:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11501:8:7",
														"nodeType": "YulTypedName",
														"src": "11501:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11514:5:7",
														"nodeType": "YulTypedName",
														"src": "11514:5:7",
														"type": ""
													}
												],
												"src": "11456:281:7"
											},
											{
												"body": {
													"nativeSrc": "11791:362:7",
													"nodeType": "YulBlock",
													"src": "11791:362:7",
													"statements": [
														{
															"nativeSrc": "11801:25:7",
															"nodeType": "YulAssignment",
															"src": "11801:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11824:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11824:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11806:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11806:17:7"
																},
																"nativeSrc": "11806:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11806:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11801:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11801:1:7"
																}
															]
														},
														{
															"nativeSrc": "11835:25:7",
															"nodeType": "YulAssignment",
															"src": "11835:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11858:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11858:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11840:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11840:17:7"
																},
																"nativeSrc": "11840:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11840:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11835:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11835:1:7"
																}
															]
														},
														{
															"nativeSrc": "11869:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11869:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11892:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11892:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11895:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11895:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11888:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11888:3:7"
																},
																"nativeSrc": "11888:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11888:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11873:11:7",
																	"nodeType": "YulTypedName",
																	"src": "11873:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11906:41:7",
															"nodeType": "YulAssignment",
															"src": "11906:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11935:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "11935:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11917:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11917:17:7"
																},
																"nativeSrc": "11917:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11917:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11906:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "11906:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12124:22:7",
																"nodeType": "YulBlock",
																"src": "12124:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12126:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12126:16:7"
																			},
																			"nativeSrc": "12126:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12126:18:7"
																		},
																		"nativeSrc": "12126:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12126:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12057:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "12057:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12050:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "12050:6:7"
																				},
																				"nativeSrc": "12050:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12050:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12080:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "12080:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12087:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "12087:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12096:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "12096:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12083:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "12083:3:7"
																						},
																						"nativeSrc": "12083:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "12083:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12077:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "12077:2:7"
																				},
																				"nativeSrc": "12077:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12077:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12030:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "12030:2:7"
																		},
																		"nativeSrc": "12030:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12030:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12010:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12010:6:7"
																},
																"nativeSrc": "12010:113:7",
																"nodeType": "YulFunctionCall",
																"src": "12010:113:7"
															},
															"nativeSrc": "12007:139:7",
															"nodeType": "YulIf",
															"src": "12007:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11743:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11774:1:7",
														"nodeType": "YulTypedName",
														"src": "11774:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11777:1:7",
														"nodeType": "YulTypedName",
														"src": "11777:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11783:7:7",
														"nodeType": "YulTypedName",
														"src": "11783:7:7",
														"type": ""
													}
												],
												"src": "11743:410:7"
											},
											{
												"body": {
													"nativeSrc": "12224:53:7",
													"nodeType": "YulBlock",
													"src": "12224:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12241:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12241:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12264:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "12264:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12246:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "12246:17:7"
																		},
																		"nativeSrc": "12246:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12246:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12234:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12234:6:7"
																},
																"nativeSrc": "12234:37:7",
																"nodeType": "YulFunctionCall",
																"src": "12234:37:7"
															},
															"nativeSrc": "12234:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "12234:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "12159:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12212:5:7",
														"nodeType": "YulTypedName",
														"src": "12212:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12219:3:7",
														"nodeType": "YulTypedName",
														"src": "12219:3:7",
														"type": ""
													}
												],
												"src": "12159:118:7"
											},
											{
												"body": {
													"nativeSrc": "12381:124:7",
													"nodeType": "YulBlock",
													"src": "12381:124:7",
													"statements": [
														{
															"nativeSrc": "12391:26:7",
															"nodeType": "YulAssignment",
															"src": "12391:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12403:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12403:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12414:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12414:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12399:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12399:3:7"
																},
																"nativeSrc": "12399:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12399:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12391:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12391:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12471:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12471:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12484:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12484:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12495:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12495:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12480:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12480:3:7"
																		},
																		"nativeSrc": "12480:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12480:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12427:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "12427:43:7"
																},
																"nativeSrc": "12427:71:7",
																"nodeType": "YulFunctionCall",
																"src": "12427:71:7"
															},
															"nativeSrc": "12427:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "12427:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12283:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12353:9:7",
														"nodeType": "YulTypedName",
														"src": "12353:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12365:6:7",
														"nodeType": "YulTypedName",
														"src": "12365:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12376:4:7",
														"nodeType": "YulTypedName",
														"src": "12376:4:7",
														"type": ""
													}
												],
												"src": "12283:222:7"
											},
											{
												"body": {
													"nativeSrc": "12555:147:7",
													"nodeType": "YulBlock",
													"src": "12555:147:7",
													"statements": [
														{
															"nativeSrc": "12565:25:7",
															"nodeType": "YulAssignment",
															"src": "12565:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12588:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12588:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12570:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12570:17:7"
																},
																"nativeSrc": "12570:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12570:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12565:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12565:1:7"
																}
															]
														},
														{
															"nativeSrc": "12599:25:7",
															"nodeType": "YulAssignment",
															"src": "12599:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12622:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12622:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12604:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12604:17:7"
																},
																"nativeSrc": "12604:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12604:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12599:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12599:1:7"
																}
															]
														},
														{
															"nativeSrc": "12633:16:7",
															"nodeType": "YulAssignment",
															"src": "12633:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12644:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12644:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12647:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12647:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12640:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12640:3:7"
																},
																"nativeSrc": "12640:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12640:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12633:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12633:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12673:22:7",
																"nodeType": "YulBlock",
																"src": "12673:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12675:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12675:16:7"
																			},
																			"nativeSrc": "12675:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12675:18:7"
																		},
																		"nativeSrc": "12675:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12675:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12665:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12665:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12668:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12668:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12662:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12662:2:7"
																},
																"nativeSrc": "12662:10:7",
																"nodeType": "YulFunctionCall",
																"src": "12662:10:7"
															},
															"nativeSrc": "12659:36:7",
															"nodeType": "YulIf",
															"src": "12659:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12511:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12542:1:7",
														"nodeType": "YulTypedName",
														"src": "12542:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12545:1:7",
														"nodeType": "YulTypedName",
														"src": "12545:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12551:3:7",
														"nodeType": "YulTypedName",
														"src": "12551:3:7",
														"type": ""
													}
												],
												"src": "12511:191:7"
											},
											{
												"body": {
													"nativeSrc": "12773:53:7",
													"nodeType": "YulBlock",
													"src": "12773:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12790:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12790:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12813:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "12813:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12795:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "12795:17:7"
																		},
																		"nativeSrc": "12795:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12795:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12783:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12783:6:7"
																},
																"nativeSrc": "12783:37:7",
																"nodeType": "YulFunctionCall",
																"src": "12783:37:7"
															},
															"nativeSrc": "12783:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "12783:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "12708:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12761:5:7",
														"nodeType": "YulTypedName",
														"src": "12761:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12768:3:7",
														"nodeType": "YulTypedName",
														"src": "12768:3:7",
														"type": ""
													}
												],
												"src": "12708:118:7"
											},
											{
												"body": {
													"nativeSrc": "12986:288:7",
													"nodeType": "YulBlock",
													"src": "12986:288:7",
													"statements": [
														{
															"nativeSrc": "12996:26:7",
															"nodeType": "YulAssignment",
															"src": "12996:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13008:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13008:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13019:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13019:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13004:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13004:3:7"
																},
																"nativeSrc": "13004:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13004:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12996:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12996:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13076:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13076:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13089:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13089:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13100:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13100:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13085:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13085:3:7"
																		},
																		"nativeSrc": "13085:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13085:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13032:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13032:43:7"
																},
																"nativeSrc": "13032:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13032:71:7"
															},
															"nativeSrc": "13032:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13032:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13157:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13157:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13170:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13170:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13181:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13181:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13166:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13166:3:7"
																		},
																		"nativeSrc": "13166:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13166:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13113:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13113:43:7"
																},
																"nativeSrc": "13113:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13113:72:7"
															},
															"nativeSrc": "13113:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13113:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13239:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13239:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13252:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13252:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13263:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13263:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13248:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13248:3:7"
																		},
																		"nativeSrc": "13248:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13248:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13195:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13195:43:7"
																},
																"nativeSrc": "13195:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13195:72:7"
															},
															"nativeSrc": "13195:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13195:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12832:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12942:9:7",
														"nodeType": "YulTypedName",
														"src": "12942:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12954:6:7",
														"nodeType": "YulTypedName",
														"src": "12954:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12962:6:7",
														"nodeType": "YulTypedName",
														"src": "12962:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12970:6:7",
														"nodeType": "YulTypedName",
														"src": "12970:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12981:4:7",
														"nodeType": "YulTypedName",
														"src": "12981:4:7",
														"type": ""
													}
												],
												"src": "12832:442:7"
											},
											{
												"body": {
													"nativeSrc": "13378:124:7",
													"nodeType": "YulBlock",
													"src": "13378:124:7",
													"statements": [
														{
															"nativeSrc": "13388:26:7",
															"nodeType": "YulAssignment",
															"src": "13388:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13400:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13400:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13411:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13411:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13396:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13396:3:7"
																},
																"nativeSrc": "13396:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13396:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13388:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13388:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13468:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13481:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13481:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13492:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13492:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13477:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13477:3:7"
																		},
																		"nativeSrc": "13477:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13477:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13424:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13424:43:7"
																},
																"nativeSrc": "13424:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13424:71:7"
															},
															"nativeSrc": "13424:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13424:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13280:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13350:9:7",
														"nodeType": "YulTypedName",
														"src": "13350:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13362:6:7",
														"nodeType": "YulTypedName",
														"src": "13362:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13373:4:7",
														"nodeType": "YulTypedName",
														"src": "13373:4:7",
														"type": ""
													}
												],
												"src": "13280:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051611ac7380380611ac7833981810160405281019061003191906104e1565b818181600390816100429190610779565b5080600490816100529190610779565b50505061008c8361006761009460201b60201c565b600a61007391906109b0565b620186a061008191906109fa565b61009c60201b60201c565b505050610af3565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361010c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016101039190610a4a565b60405180910390fd5b61011d5f838361012160201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610171578060025f8282546101659190610a63565b9250508190555061023f565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156101fa578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016101f193929190610aa5565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610286578060025f82825403925050819055506102d0565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161032d9190610ada565b60405180910390a3505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103748261034b565b9050919050565b6103848161036a565b811461038e575f5ffd5b50565b5f8151905061039f8161037b565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103f3826103ad565b810181811067ffffffffffffffff82111715610412576104116103bd565b5b80604052505050565b5f61042461033a565b905061043082826103ea565b919050565b5f67ffffffffffffffff82111561044f5761044e6103bd565b5b610458826103ad565b9050602081019050919050565b8281835e5f83830152505050565b5f61048561048084610435565b61041b565b9050828152602081018484840111156104a1576104a06103a9565b5b6104ac848285610465565b509392505050565b5f82601f8301126104c8576104c76103a5565b5b81516104d8848260208601610473565b91505092915050565b5f5f5f606084860312156104f8576104f7610343565b5b5f61050586828701610391565b935050602084015167ffffffffffffffff81111561052657610525610347565b5b610532868287016104b4565b925050604084015167ffffffffffffffff81111561055357610552610347565b5b61055f868287016104b4565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105b757607f821691505b6020821081036105ca576105c9610573565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261062c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105f1565b61063686836105f1565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61067a6106756106708461064e565b610657565b61064e565b9050919050565b5f819050919050565b61069383610660565b6106a761069f82610681565b8484546105fd565b825550505050565b5f5f905090565b6106be6106af565b6106c981848461068a565b505050565b5b818110156106ec576106e15f826106b6565b6001810190506106cf565b5050565b601f82111561073157610702816105d0565b61070b846105e2565b8101602085101561071a578190505b61072e610726856105e2565b8301826106ce565b50505b505050565b5f82821c905092915050565b5f6107515f1984600802610736565b1980831691505092915050565b5f6107698383610742565b9150826002028217905092915050565b61078282610569565b67ffffffffffffffff81111561079b5761079a6103bd565b5b6107a582546105a0565b6107b08282856106f0565b5f60209050601f8311600181146107e1575f84156107cf578287015190505b6107d9858261075e565b865550610840565b601f1984166107ef866105d0565b5f5b82811015610816578489015182556001820191506020850194506020810190506107f1565b86831015610833578489015161082f601f891682610742565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b60018511156108ca578086048111156108a6576108a5610848565b5b60018516156108b55780820291505b80810290506108c385610875565b945061088a565b94509492505050565b5f826108e2576001905061099d565b816108ef575f905061099d565b8160018114610905576002811461090f5761093e565b600191505061099d565b60ff84111561092157610920610848565b5b8360020a91508482111561093857610937610848565b5b5061099d565b5060208310610133831016604e8410600b84101617156109735782820a90508381111561096e5761096d610848565b5b61099d565b6109808484846001610881565b9250905081840481111561099757610996610848565b5b81810290505b9392505050565b5f60ff82169050919050565b5f6109ba8261064e565b91506109c5836109a4565b92506109f27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846108d3565b905092915050565b5f610a048261064e565b9150610a0f8361064e565b9250828202610a1d8161064e565b91508282048414831517610a3457610a33610848565b5b5092915050565b610a448161036a565b82525050565b5f602082019050610a5d5f830184610a3b565b92915050565b5f610a6d8261064e565b9150610a788361064e565b9250828201905080821115610a9057610a8f610848565b5b92915050565b610a9f8161064e565b82525050565b5f606082019050610ab85f830186610a3b565b610ac56020830185610a96565b610ad26040830184610a96565b949350505050565b5f602082019050610aed5f830184610a96565b92915050565b610fc780610b005f395ff3fe6080604052600436106100a6575f3560e01c806370a082311161006357806370a08231146101c857806395d89b4114610204578063a6f2ae3a1461022e578063a9059cbb14610238578063dd62ed3e14610274578063e4849b32146102b0576100a6565b806306fdde03146100aa578063095ea7b3146100d457806318160ddd1461011057806323b872dd1461013a578063313ce5671461017657806340c10f19146101a0575b5f5ffd5b3480156100b5575f5ffd5b506100be6102cc565b6040516100cb9190610c15565b60405180910390f35b3480156100df575f5ffd5b506100fa60048036038101906100f59190610cc6565b61035c565b6040516101079190610d1e565b60405180910390f35b34801561011b575f5ffd5b5061012461037e565b6040516101319190610d46565b60405180910390f35b348015610145575f5ffd5b50610160600480360381019061015b9190610d5f565b610387565b60405161016d9190610d1e565b60405180910390f35b348015610181575f5ffd5b5061018a6103b5565b6040516101979190610dca565b60405180910390f35b3480156101ab575f5ffd5b506101c660048036038101906101c19190610cc6565b6103bd565b005b3480156101d3575f5ffd5b506101ee60048036038101906101e99190610de3565b6103cb565b6040516101fb9190610d46565b60405180910390f35b34801561020f575f5ffd5b50610218610410565b6040516102259190610c15565b60405180910390f35b6102366104a0565b005b348015610243575f5ffd5b5061025e60048036038101906102599190610cc6565b6104ac565b60405161026b9190610d1e565b60405180910390f35b34801561027f575f5ffd5b5061029a60048036038101906102959190610e0e565b6104ce565b6040516102a79190610d46565b60405180910390f35b6102ca60048036038101906102c59190610e4c565b610550565b005b6060600380546102db90610ea4565b80601f016020809104026020016040519081016040528092919081815260200182805461030790610ea4565b80156103525780601f1061032957610100808354040283529160200191610352565b820191905f5260205f20905b81548152906001019060200180831161033557829003601f168201915b5050505050905090565b5f5f6103666105a2565b90506103738185856105a9565b600191505092915050565b5f600254905090565b5f5f6103916105a2565b905061039e8582856105bb565b6103a985858561064e565b60019150509392505050565b5f6012905090565b6103c7828261073e565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461041f90610ea4565b80601f016020809104026020016040519081016040528092919081815260200182805461044b90610ea4565b80156104965780601f1061046d57610100808354040283529160200191610496565b820191905f5260205f20905b81548152906001019060200180831161047957829003601f168201915b5050505050905090565b6104aa333461073e565b565b5f5f6104b66105a2565b90506104c381858561064e565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61055b33308361064e565b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561059e573d5f5f3e3d5ffd5b5050565b5f33905090565b6105b683838360016107bd565b505050565b5f6105c684846104ce565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156106485781811015610639578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161063093929190610ee3565b60405180910390fd5b61064784848484035f6107bd565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106be575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106b59190610f18565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361072e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107259190610f18565b60405180910390fd5b61073983838361098c565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107ae575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107a59190610f18565b60405180910390fd5b6107b95f838361098c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361082d575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016108249190610f18565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361089d575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108949190610f18565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610986578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161097d9190610d46565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109dc578060025f8282546109d09190610f5e565b92505081905550610aaa565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a65578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a5c93929190610ee3565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610af1578060025f8282540392505081905550610b3b565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b989190610d46565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610be782610ba5565b610bf18185610baf565b9350610c01818560208601610bbf565b610c0a81610bcd565b840191505092915050565b5f6020820190508181035f830152610c2d8184610bdd565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c6282610c39565b9050919050565b610c7281610c58565b8114610c7c575f5ffd5b50565b5f81359050610c8d81610c69565b92915050565b5f819050919050565b610ca581610c93565b8114610caf575f5ffd5b50565b5f81359050610cc081610c9c565b92915050565b5f5f60408385031215610cdc57610cdb610c35565b5b5f610ce985828601610c7f565b9250506020610cfa85828601610cb2565b9150509250929050565b5f8115159050919050565b610d1881610d04565b82525050565b5f602082019050610d315f830184610d0f565b92915050565b610d4081610c93565b82525050565b5f602082019050610d595f830184610d37565b92915050565b5f5f5f60608486031215610d7657610d75610c35565b5b5f610d8386828701610c7f565b9350506020610d9486828701610c7f565b9250506040610da586828701610cb2565b9150509250925092565b5f60ff82169050919050565b610dc481610daf565b82525050565b5f602082019050610ddd5f830184610dbb565b92915050565b5f60208284031215610df857610df7610c35565b5b5f610e0584828501610c7f565b91505092915050565b5f5f60408385031215610e2457610e23610c35565b5b5f610e3185828601610c7f565b9250506020610e4285828601610c7f565b9150509250929050565b5f60208284031215610e6157610e60610c35565b5b5f610e6e84828501610cb2565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610ebb57607f821691505b602082108103610ece57610ecd610e77565b5b50919050565b610edd81610c58565b82525050565b5f606082019050610ef65f830186610ed4565b610f036020830185610d37565b610f106040830184610d37565b949350505050565b5f602082019050610f2b5f830184610ed4565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f6882610c93565b9150610f7383610c93565b9250828201905080821115610f8b57610f8a610f31565b5b9291505056fea2646970667358221220e4b69eb5a5cc43f6879575d56f7f98b5c1b492c10dbe68f008084e3e5924b2dd64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1AC7 CODESIZE SUB DUP1 PUSH2 0x1AC7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x4E1 JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST POP POP POP PUSH2 0x8C DUP4 PUSH2 0x67 PUSH2 0x94 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x73 SWAP2 SWAP1 PUSH2 0x9B0 JUMP JUMPDEST PUSH3 0x186A0 PUSH2 0x81 SWAP2 SWAP1 PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x9C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0xAF3 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D PUSH0 DUP4 DUP4 PUSH2 0x121 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x171 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0xA63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x23F JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1FA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x286 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2D0 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x32D SWAP2 SWAP1 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x374 DUP3 PUSH2 0x34B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x384 DUP2 PUSH2 0x36A JUMP JUMPDEST DUP2 EQ PUSH2 0x38E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x39F DUP2 PUSH2 0x37B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x3F3 DUP3 PUSH2 0x3AD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x412 JUMPI PUSH2 0x411 PUSH2 0x3BD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x424 PUSH2 0x33A JUMP JUMPDEST SWAP1 POP PUSH2 0x430 DUP3 DUP3 PUSH2 0x3EA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x44F JUMPI PUSH2 0x44E PUSH2 0x3BD JUMP JUMPDEST JUMPDEST PUSH2 0x458 DUP3 PUSH2 0x3AD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x485 PUSH2 0x480 DUP5 PUSH2 0x435 JUMP JUMPDEST PUSH2 0x41B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4A1 JUMPI PUSH2 0x4A0 PUSH2 0x3A9 JUMP JUMPDEST JUMPDEST PUSH2 0x4AC DUP5 DUP3 DUP6 PUSH2 0x465 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4C8 JUMPI PUSH2 0x4C7 PUSH2 0x3A5 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x4D8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x473 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4F8 JUMPI PUSH2 0x4F7 PUSH2 0x343 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x505 DUP7 DUP3 DUP8 ADD PUSH2 0x391 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x526 JUMPI PUSH2 0x525 PUSH2 0x347 JUMP JUMPDEST JUMPDEST PUSH2 0x532 DUP7 DUP3 DUP8 ADD PUSH2 0x4B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x553 JUMPI PUSH2 0x552 PUSH2 0x347 JUMP JUMPDEST JUMPDEST PUSH2 0x55F DUP7 DUP3 DUP8 ADD PUSH2 0x4B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5CA JUMPI PUSH2 0x5C9 PUSH2 0x573 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x62C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0x636 DUP7 DUP4 PUSH2 0x5F1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x67A PUSH2 0x675 PUSH2 0x670 DUP5 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH2 0x64E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x693 DUP4 PUSH2 0x660 JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x69F DUP3 PUSH2 0x681 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5FD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6BE PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x6C9 DUP2 DUP5 DUP5 PUSH2 0x68A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6EC JUMPI PUSH2 0x6E1 PUSH0 DUP3 PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x731 JUMPI PUSH2 0x702 DUP2 PUSH2 0x5D0 JUMP JUMPDEST PUSH2 0x70B DUP5 PUSH2 0x5E2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x71A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x72E PUSH2 0x726 DUP6 PUSH2 0x5E2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6CE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x751 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x736 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x769 DUP4 DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x782 DUP3 PUSH2 0x569 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x79B JUMPI PUSH2 0x79A PUSH2 0x3BD JUMP JUMPDEST JUMPDEST PUSH2 0x7A5 DUP3 SLOAD PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x7B0 DUP3 DUP3 DUP6 PUSH2 0x6F0 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7E1 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x7CF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x7D9 DUP6 DUP3 PUSH2 0x75E JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x840 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7EF DUP7 PUSH2 0x5D0 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x816 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7F1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x833 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x82F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x742 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x8CA JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A5 PUSH2 0x848 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x8B5 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x8C3 DUP6 PUSH2 0x875 JUMP JUMPDEST SWAP5 POP PUSH2 0x88A JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x8E2 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x99D JUMP JUMPDEST DUP2 PUSH2 0x8EF JUMPI PUSH0 SWAP1 POP PUSH2 0x99D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x905 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x90F JUMPI PUSH2 0x93E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x99D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x921 JUMPI PUSH2 0x920 PUSH2 0x848 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x938 JUMPI PUSH2 0x937 PUSH2 0x848 JUMP JUMPDEST JUMPDEST POP PUSH2 0x99D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x973 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x96E JUMPI PUSH2 0x96D PUSH2 0x848 JUMP JUMPDEST JUMPDEST PUSH2 0x99D JUMP JUMPDEST PUSH2 0x980 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x881 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x997 JUMPI PUSH2 0x996 PUSH2 0x848 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9BA DUP3 PUSH2 0x64E JUMP JUMPDEST SWAP2 POP PUSH2 0x9C5 DUP4 PUSH2 0x9A4 JUMP JUMPDEST SWAP3 POP PUSH2 0x9F2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x8D3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA04 DUP3 PUSH2 0x64E JUMP JUMPDEST SWAP2 POP PUSH2 0xA0F DUP4 PUSH2 0x64E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA1D DUP2 PUSH2 0x64E JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA34 JUMPI PUSH2 0xA33 PUSH2 0x848 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA44 DUP2 PUSH2 0x36A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA5D PUSH0 DUP4 ADD DUP5 PUSH2 0xA3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA6D DUP3 PUSH2 0x64E JUMP JUMPDEST SWAP2 POP PUSH2 0xA78 DUP4 PUSH2 0x64E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA90 JUMPI PUSH2 0xA8F PUSH2 0x848 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9F DUP2 PUSH2 0x64E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAB8 PUSH0 DUP4 ADD DUP7 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0xAC5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0xAD2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA96 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAED PUSH0 DUP4 ADD DUP5 PUSH2 0xA96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFC7 DUP1 PUSH2 0xB00 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x2B0 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x37E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x218 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH2 0x4A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xE0E JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0xE4C JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2DB SWAP1 PUSH2 0xEA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x307 SWAP1 PUSH2 0xEA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x352 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x329 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x352 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x335 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x366 PUSH2 0x5A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP2 DUP6 DUP6 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x391 PUSH2 0x5A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x39E DUP6 DUP3 DUP6 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x3A9 DUP6 DUP6 DUP6 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3C7 DUP3 DUP3 PUSH2 0x73E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x41F SWAP1 PUSH2 0xEA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44B SWAP1 PUSH2 0xEA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x496 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x496 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x479 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AA CALLER CALLVALUE PUSH2 0x73E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4B6 PUSH2 0x5A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x4C3 DUP2 DUP6 DUP6 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x55B CALLER ADDRESS DUP4 PUSH2 0x64E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x59E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5B6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x7BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5C6 DUP5 DUP5 PUSH2 0x4CE JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x648 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x639 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x647 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x7BD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6BE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x72E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x725 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x739 DUP4 DUP4 DUP4 PUSH2 0x98C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B9 PUSH0 DUP4 DUP4 PUSH2 0x98C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x986 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x97D SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9DC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0xF5E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAAA JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA65 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB3B JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBE7 DUP3 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0xBF1 DUP2 DUP6 PUSH2 0xBAF JUMP JUMPDEST SWAP4 POP PUSH2 0xC01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBBF JUMP JUMPDEST PUSH2 0xC0A DUP2 PUSH2 0xBCD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC2D DUP2 DUP5 PUSH2 0xBDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC62 DUP3 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP2 EQ PUSH2 0xC7C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8D DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA5 DUP2 PUSH2 0xC93 JUMP JUMPDEST DUP2 EQ PUSH2 0xCAF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCC0 DUP2 PUSH2 0xC9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCDB PUSH2 0xC35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCE9 DUP6 DUP3 DUP7 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCFA DUP6 DUP3 DUP7 ADD PUSH2 0xCB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD18 DUP2 PUSH2 0xD04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD31 PUSH0 DUP4 ADD DUP5 PUSH2 0xD0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD40 DUP2 PUSH2 0xC93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD59 PUSH0 DUP4 ADD DUP5 PUSH2 0xD37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD76 JUMPI PUSH2 0xD75 PUSH2 0xC35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD83 DUP7 DUP3 DUP8 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD94 DUP7 DUP3 DUP8 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDA5 DUP7 DUP3 DUP8 ADD PUSH2 0xCB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC4 DUP2 PUSH2 0xDAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDDD PUSH0 DUP4 ADD DUP5 PUSH2 0xDBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF8 JUMPI PUSH2 0xDF7 PUSH2 0xC35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE05 DUP5 DUP3 DUP6 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0xC35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE31 DUP6 DUP3 DUP7 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE42 DUP6 DUP3 DUP7 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE60 PUSH2 0xC35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE6E DUP5 DUP3 DUP6 ADD PUSH2 0xCB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEBB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE77 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEF6 PUSH0 DUP4 ADD DUP7 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0xF03 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0xF10 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD37 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2B PUSH0 DUP4 ADD DUP5 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF68 DUP3 PUSH2 0xC93 JUMP JUMPDEST SWAP2 POP PUSH2 0xF73 DUP4 PUSH2 0xC93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF8B JUMPI PUSH2 0xF8A PUSH2 0xF31 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETF 0xB6 SWAP15 0xB5 0xA5 0xCC NUMBER 0xF6 DUP8 SWAP6 PUSH22 0xD56F7F98B5C1B492C10DBE68F008084E3E5924B2DD64 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "246:544:6:-:0;;;280:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;370:5;377:7;1656:5:2;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;405:43:6::1;411:9;437:10;:8;;;:10;;:::i;:::-;431:2;:16;;;;:::i;:::-;422:6;:25;;;;:::i;:::-;405:5;;;:43;;:::i;:::-;280:176:::0;;;246:544;;2688:82:2;2737:5;2761:2;2754:9;;2688:82;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;;;:35;;:::i;:::-;7439:208;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:139::-;2210:6;2205:3;2200;2194:23;2251:1;2242:6;2237:3;2233:16;2226:27;2121:139;;;:::o;2266:434::-;2355:5;2380:66;2396:49;2438:6;2396:49;:::i;:::-;2380:66;:::i;:::-;2371:75;;2469:6;2462:5;2455:21;2507:4;2500:5;2496:16;2545:3;2536:6;2531:3;2527:16;2524:25;2521:112;;;2552:79;;:::i;:::-;2521:112;2642:52;2687:6;2682:3;2677;2642:52;:::i;:::-;2361:339;2266:434;;;;;:::o;2720:355::-;2787:5;2836:3;2829:4;2821:6;2817:17;2813:27;2803:122;;2844:79;;:::i;:::-;2803:122;2954:6;2948:13;2979:90;3065:3;3057:6;3050:4;3042:6;3038:17;2979:90;:::i;:::-;2970:99;;2793:282;2720:355;;;;:::o;3081:1009::-;3189:6;3197;3205;3254:2;3242:9;3233:7;3229:23;3225:32;3222:119;;;3260:79;;:::i;:::-;3222:119;3380:1;3405:64;3461:7;3452:6;3441:9;3437:22;3405:64;:::i;:::-;3395:74;;3351:128;3539:2;3528:9;3524:18;3518:25;3570:18;3562:6;3559:30;3556:117;;;3592:79;;:::i;:::-;3556:117;3697:74;3763:7;3754:6;3743:9;3739:22;3697:74;:::i;:::-;3687:84;;3489:292;3841:2;3830:9;3826:18;3820:25;3872:18;3864:6;3861:30;3858:117;;;3894:79;;:::i;:::-;3858:117;3999:74;4065:7;4056:6;4045:9;4041:22;3999:74;:::i;:::-;3989:84;;3791:292;3081:1009;;;;;:::o;4096:99::-;4148:6;4182:5;4176:12;4166:22;;4096:99;;;:::o;4201:180::-;4249:77;4246:1;4239:88;4346:4;4343:1;4336:15;4370:4;4367:1;4360:15;4387:320;4431:6;4468:1;4462:4;4458:12;4448:22;;4515:1;4509:4;4505:12;4536:18;4526:81;;4592:4;4584:6;4580:17;4570:27;;4526:81;4654:2;4646:6;4643:14;4623:18;4620:38;4617:84;;4673:18;;:::i;:::-;4617:84;4438:269;4387:320;;;:::o;4713:141::-;4762:4;4785:3;4777:11;;4808:3;4805:1;4798:14;4842:4;4839:1;4829:18;4821:26;;4713:141;;;:::o;4860:93::-;4897:6;4944:2;4939;4932:5;4928:14;4924:23;4914:33;;4860:93;;;:::o;4959:107::-;5003:8;5053:5;5047:4;5043:16;5022:37;;4959:107;;;;:::o;5072:393::-;5141:6;5191:1;5179:10;5175:18;5214:97;5244:66;5233:9;5214:97;:::i;:::-;5332:39;5362:8;5351:9;5332:39;:::i;:::-;5320:51;;5404:4;5400:9;5393:5;5389:21;5380:30;;5453:4;5443:8;5439:19;5432:5;5429:30;5419:40;;5148:317;;5072:393;;;;;:::o;5471:77::-;5508:7;5537:5;5526:16;;5471:77;;;:::o;5554:60::-;5582:3;5603:5;5596:12;;5554:60;;;:::o;5620:142::-;5670:9;5703:53;5721:34;5730:24;5748:5;5730:24;:::i;:::-;5721:34;:::i;:::-;5703:53;:::i;:::-;5690:66;;5620:142;;;:::o;5768:75::-;5811:3;5832:5;5825:12;;5768:75;;;:::o;5849:269::-;5959:39;5990:7;5959:39;:::i;:::-;6020:91;6069:41;6093:16;6069:41;:::i;:::-;6061:6;6054:4;6048:11;6020:91;:::i;:::-;6014:4;6007:105;5925:193;5849:269;;;:::o;6124:73::-;6169:3;6190:1;6183:8;;6124:73;:::o;6203:189::-;6280:32;;:::i;:::-;6321:65;6379:6;6371;6365:4;6321:65;:::i;:::-;6256:136;6203:189;;:::o;6398:186::-;6458:120;6475:3;6468:5;6465:14;6458:120;;;6529:39;6566:1;6559:5;6529:39;:::i;:::-;6502:1;6495:5;6491:13;6482:22;;6458:120;;;6398:186;;:::o;6590:543::-;6691:2;6686:3;6683:11;6680:446;;;6725:38;6757:5;6725:38;:::i;:::-;6809:29;6827:10;6809:29;:::i;:::-;6799:8;6795:44;6992:2;6980:10;6977:18;6974:49;;;7013:8;6998:23;;6974:49;7036:80;7092:22;7110:3;7092:22;:::i;:::-;7082:8;7078:37;7065:11;7036:80;:::i;:::-;6695:431;;6680:446;6590:543;;;:::o;7139:117::-;7193:8;7243:5;7237:4;7233:16;7212:37;;7139:117;;;;:::o;7262:169::-;7306:6;7339:51;7387:1;7383:6;7375:5;7372:1;7368:13;7339:51;:::i;:::-;7335:56;7420:4;7414;7410:15;7400:25;;7313:118;7262:169;;;;:::o;7436:295::-;7512:4;7658:29;7683:3;7677:4;7658:29;:::i;:::-;7650:37;;7720:3;7717:1;7713:11;7707:4;7704:21;7696:29;;7436:295;;;;:::o;7736:1395::-;7853:37;7886:3;7853:37;:::i;:::-;7955:18;7947:6;7944:30;7941:56;;;7977:18;;:::i;:::-;7941:56;8021:38;8053:4;8047:11;8021:38;:::i;:::-;8106:67;8166:6;8158;8152:4;8106:67;:::i;:::-;8200:1;8224:4;8211:17;;8256:2;8248:6;8245:14;8273:1;8268:618;;;;8930:1;8947:6;8944:77;;;8996:9;8991:3;8987:19;8981:26;8972:35;;8944:77;9047:67;9107:6;9100:5;9047:67;:::i;:::-;9041:4;9034:81;8903:222;8238:887;;8268:618;8320:4;8316:9;8308:6;8304:22;8354:37;8386:4;8354:37;:::i;:::-;8413:1;8427:208;8441:7;8438:1;8435:14;8427:208;;;8520:9;8515:3;8511:19;8505:26;8497:6;8490:42;8571:1;8563:6;8559:14;8549:24;;8618:2;8607:9;8603:18;8590:31;;8464:4;8461:1;8457:12;8452:17;;8427:208;;;8663:6;8654:7;8651:19;8648:179;;;8721:9;8716:3;8712:19;8706:26;8764:48;8806:4;8798:6;8794:17;8783:9;8764:48;:::i;:::-;8756:6;8749:64;8671:156;8648:179;8873:1;8869;8861:6;8857:14;8853:22;8847:4;8840:36;8275:611;;;8238:887;;7828:1303;;;7736:1395;;:::o;9137:180::-;9185:77;9182:1;9175:88;9282:4;9279:1;9272:15;9306:4;9303:1;9296:15;9323:102;9365:8;9412:5;9409:1;9405:13;9384:34;;9323:102;;;:::o;9431:848::-;9492:5;9499:4;9523:6;9514:15;;9547:5;9538:14;;9561:712;9582:1;9572:8;9569:15;9561:712;;;9677:4;9672:3;9668:14;9662:4;9659:24;9656:50;;;9686:18;;:::i;:::-;9656:50;9736:1;9726:8;9722:16;9719:451;;;10151:4;10144:5;10140:16;10131:25;;9719:451;10201:4;10195;10191:15;10183:23;;10231:32;10254:8;10231:32;:::i;:::-;10219:44;;9561:712;;;9431:848;;;;;;;:::o;10285:1073::-;10339:5;10530:8;10520:40;;10551:1;10542:10;;10553:5;;10520:40;10579:4;10569:36;;10596:1;10587:10;;10598:5;;10569:36;10665:4;10713:1;10708:27;;;;10749:1;10744:191;;;;10658:277;;10708:27;10726:1;10717:10;;10728:5;;;10744:191;10789:3;10779:8;10776:17;10773:43;;;10796:18;;:::i;:::-;10773:43;10845:8;10842:1;10838:16;10829:25;;10880:3;10873:5;10870:14;10867:40;;;10887:18;;:::i;:::-;10867:40;10920:5;;;10658:277;;11044:2;11034:8;11031:16;11025:3;11019:4;11016:13;11012:36;10994:2;10984:8;10981:16;10976:2;10970:4;10967:12;10963:35;10947:111;10944:246;;;11100:8;11094:4;11090:19;11081:28;;11135:3;11128:5;11125:14;11122:40;;;11142:18;;:::i;:::-;11122:40;11175:5;;10944:246;11215:42;11253:3;11243:8;11237:4;11234:1;11215:42;:::i;:::-;11200:57;;;;11289:4;11284:3;11280:14;11273:5;11270:25;11267:51;;;11298:18;;:::i;:::-;11267:51;11347:4;11340:5;11336:16;11327:25;;10285:1073;;;;;;:::o;11364:86::-;11399:7;11439:4;11432:5;11428:16;11417:27;;11364:86;;;:::o;11456:281::-;11514:5;11538:23;11556:4;11538:23;:::i;:::-;11530:31;;11582:25;11598:8;11582:25;:::i;:::-;11570:37;;11626:104;11663:66;11653:8;11647:4;11626:104;:::i;:::-;11617:113;;11456:281;;;;:::o;11743:410::-;11783:7;11806:20;11824:1;11806:20;:::i;:::-;11801:25;;11840:20;11858:1;11840:20;:::i;:::-;11835:25;;11895:1;11892;11888:9;11917:30;11935:11;11917:30;:::i;:::-;11906:41;;12096:1;12087:7;12083:15;12080:1;12077:22;12057:1;12050:9;12030:83;12007:139;;12126:18;;:::i;:::-;12007:139;11791:362;11743:410;;;;:::o;12159:118::-;12246:24;12264:5;12246:24;:::i;:::-;12241:3;12234:37;12159:118;;:::o;12283:222::-;12376:4;12414:2;12403:9;12399:18;12391:26;;12427:71;12495:1;12484:9;12480:17;12471:6;12427:71;:::i;:::-;12283:222;;;;:::o;12511:191::-;12551:3;12570:20;12588:1;12570:20;:::i;:::-;12565:25;;12604:20;12622:1;12604:20;:::i;:::-;12599:25;;12647:1;12644;12640:9;12633:16;;12668:3;12665:1;12662:10;12659:36;;;12675:18;;:::i;:::-;12659:36;12511:191;;;;:::o;12708:118::-;12795:24;12813:5;12795:24;:::i;:::-;12790:3;12783:37;12708:118;;:::o;12832:442::-;12981:4;13019:2;13008:9;13004:18;12996:26;;13032:71;13100:1;13089:9;13085:17;13076:6;13032:71;:::i;:::-;13113:72;13181:2;13170:9;13166:18;13157:6;13113:72;:::i;:::-;13195;13263:2;13252:9;13248:18;13239:6;13195:72;:::i;:::-;12832:442;;;;;;:::o;13280:222::-;13373:4;13411:2;13400:9;13396:18;13388:26;;13424:71;13492:1;13481:9;13477:17;13468:6;13424:71;:::i;:::-;13280:222;;;;:::o;246:544:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1449,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 1981,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1854,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1442,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1467,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1614,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2444,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1230,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 860,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 971,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buy_989": {
									"entryPoint": 1184,
									"id": 989,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 949,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_978": {
									"entryPoint": 957,
									"id": 978,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 716,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@sell_1014": {
									"entryPoint": 1360,
									"id": 1014,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1040,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 894,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 903,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 1196,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3007,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3889,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3703,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7588:7",
										"nodeType": "YulBlock",
										"src": "0:7588:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5164:391:7",
													"nodeType": "YulBlock",
													"src": "5164:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:7",
																"nodeType": "YulBlock",
																"src": "5210:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:7"
																			},
																			"nativeSrc": "5212:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:7"
																		},
																		"nativeSrc": "5212:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:7"
																		},
																		"nativeSrc": "5181:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:7"
																},
																"nativeSrc": "5177:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:7"
															},
															"nativeSrc": "5174:119:7",
															"nodeType": "YulIf",
															"src": "5174:119:7"
														},
														{
															"nativeSrc": "5303:117:7",
															"nodeType": "YulBlock",
															"src": "5303:117:7",
															"statements": [
																{
																	"nativeSrc": "5318:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:7"
																				},
																				"nativeSrc": "5378:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:7"
																		},
																		"nativeSrc": "5357:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5430:118:7",
															"nodeType": "YulBlock",
															"src": "5430:118:7",
															"statements": [
																{
																	"nativeSrc": "5445:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5445:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5459:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5449:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5449:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5475:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5475:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5510:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5510:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5521:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5521:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5506:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5506:3:7"
																				},
																				"nativeSrc": "5506:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5506:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5530:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5530:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5485:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5485:20:7"
																		},
																		"nativeSrc": "5485:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5475:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5475:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5081:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5126:9:7",
														"nodeType": "YulTypedName",
														"src": "5126:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5137:7:7",
														"nodeType": "YulTypedName",
														"src": "5137:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5149:6:7",
														"nodeType": "YulTypedName",
														"src": "5149:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5157:6:7",
														"nodeType": "YulTypedName",
														"src": "5157:6:7",
														"type": ""
													}
												],
												"src": "5081:474:7"
											},
											{
												"body": {
													"nativeSrc": "5627:263:7",
													"nodeType": "YulBlock",
													"src": "5627:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5673:83:7",
																"nodeType": "YulBlock",
																"src": "5673:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5675:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5675:77:7"
																			},
																			"nativeSrc": "5675:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5675:79:7"
																		},
																		"nativeSrc": "5675:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5675:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5648:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5648:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5657:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5657:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5644:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5644:3:7"
																		},
																		"nativeSrc": "5644:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5644:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5669:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5669:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5640:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5640:3:7"
																},
																"nativeSrc": "5640:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5640:32:7"
															},
															"nativeSrc": "5637:119:7",
															"nodeType": "YulIf",
															"src": "5637:119:7"
														},
														{
															"nativeSrc": "5766:117:7",
															"nodeType": "YulBlock",
															"src": "5766:117:7",
															"statements": [
																{
																	"nativeSrc": "5781:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5781:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5795:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5795:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5785:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5785:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5810:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5810:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5845:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5845:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5856:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5856:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5841:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5841:3:7"
																				},
																				"nativeSrc": "5841:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5841:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5865:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5865:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5820:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5820:20:7"
																		},
																		"nativeSrc": "5820:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5820:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5810:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5810:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5561:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5597:9:7",
														"nodeType": "YulTypedName",
														"src": "5597:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5608:7:7",
														"nodeType": "YulTypedName",
														"src": "5608:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5620:6:7",
														"nodeType": "YulTypedName",
														"src": "5620:6:7",
														"type": ""
													}
												],
												"src": "5561:329:7"
											},
											{
												"body": {
													"nativeSrc": "5924:152:7",
													"nodeType": "YulBlock",
													"src": "5924:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5941:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5941:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5944:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5944:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5934:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5934:6:7"
																},
																"nativeSrc": "5934:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5934:88:7"
															},
															"nativeSrc": "5934:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5934:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6038:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6038:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6041:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6041:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6031:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6031:6:7"
																},
																"nativeSrc": "6031:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6031:15:7"
															},
															"nativeSrc": "6031:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6031:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6062:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6062:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6065:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6065:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6055:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6055:6:7"
																},
																"nativeSrc": "6055:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6055:15:7"
															},
															"nativeSrc": "6055:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6055:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5896:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5896:180:7"
											},
											{
												"body": {
													"nativeSrc": "6133:269:7",
													"nodeType": "YulBlock",
													"src": "6133:269:7",
													"statements": [
														{
															"nativeSrc": "6143:22:7",
															"nodeType": "YulAssignment",
															"src": "6143:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6157:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6157:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6163:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6163:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6153:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6153:3:7"
																},
																"nativeSrc": "6153:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6153:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6143:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6143:6:7"
																}
															]
														},
														{
															"nativeSrc": "6174:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6174:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6204:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6204:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6210:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6210:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6200:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6200:3:7"
																},
																"nativeSrc": "6200:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6200:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6178:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6178:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6251:51:7",
																"nodeType": "YulBlock",
																"src": "6251:51:7",
																"statements": [
																	{
																		"nativeSrc": "6265:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6265:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6279:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6279:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6287:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6287:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6275:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6275:3:7"
																			},
																			"nativeSrc": "6275:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6275:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6265:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6265:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6231:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6231:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6224:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:7"
																},
																"nativeSrc": "6224:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6224:26:7"
															},
															"nativeSrc": "6221:81:7",
															"nodeType": "YulIf",
															"src": "6221:81:7"
														},
														{
															"body": {
																"nativeSrc": "6354:42:7",
																"nodeType": "YulBlock",
																"src": "6354:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6368:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6368:16:7"
																			},
																			"nativeSrc": "6368:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6368:18:7"
																		},
																		"nativeSrc": "6368:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6368:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6318:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6318:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6341:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6341:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6349:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6349:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6338:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6338:2:7"
																		},
																		"nativeSrc": "6338:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6338:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6315:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6315:2:7"
																},
																"nativeSrc": "6315:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6315:38:7"
															},
															"nativeSrc": "6312:84:7",
															"nodeType": "YulIf",
															"src": "6312:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6082:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6117:4:7",
														"nodeType": "YulTypedName",
														"src": "6117:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6126:6:7",
														"nodeType": "YulTypedName",
														"src": "6126:6:7",
														"type": ""
													}
												],
												"src": "6082:320:7"
											},
											{
												"body": {
													"nativeSrc": "6473:53:7",
													"nodeType": "YulBlock",
													"src": "6473:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6490:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6490:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6513:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6513:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6495:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6495:17:7"
																		},
																		"nativeSrc": "6495:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6495:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6483:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6483:6:7"
																},
																"nativeSrc": "6483:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6483:37:7"
															},
															"nativeSrc": "6483:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6483:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6408:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6461:5:7",
														"nodeType": "YulTypedName",
														"src": "6461:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6468:3:7",
														"nodeType": "YulTypedName",
														"src": "6468:3:7",
														"type": ""
													}
												],
												"src": "6408:118:7"
											},
											{
												"body": {
													"nativeSrc": "6686:288:7",
													"nodeType": "YulBlock",
													"src": "6686:288:7",
													"statements": [
														{
															"nativeSrc": "6696:26:7",
															"nodeType": "YulAssignment",
															"src": "6696:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6708:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6708:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6719:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6719:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:7"
																},
																"nativeSrc": "6704:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6704:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6696:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6696:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6776:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6776:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6789:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6789:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6800:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6800:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6785:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6785:3:7"
																		},
																		"nativeSrc": "6785:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6785:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6732:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6732:43:7"
																},
																"nativeSrc": "6732:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6732:71:7"
															},
															"nativeSrc": "6732:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6732:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6857:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6857:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6870:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6870:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6881:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6881:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6866:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6866:3:7"
																		},
																		"nativeSrc": "6866:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6866:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6813:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6813:43:7"
																},
																"nativeSrc": "6813:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6813:72:7"
															},
															"nativeSrc": "6813:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6813:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6939:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6939:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6952:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6952:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6963:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6963:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6948:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6948:3:7"
																		},
																		"nativeSrc": "6948:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6948:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6895:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6895:43:7"
																},
																"nativeSrc": "6895:72:7",
																"nodeType": "YulFunctionCall",
																"src": "6895:72:7"
															},
															"nativeSrc": "6895:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "6895:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6532:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6642:9:7",
														"nodeType": "YulTypedName",
														"src": "6642:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6654:6:7",
														"nodeType": "YulTypedName",
														"src": "6654:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6662:6:7",
														"nodeType": "YulTypedName",
														"src": "6662:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6670:6:7",
														"nodeType": "YulTypedName",
														"src": "6670:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6681:4:7",
														"nodeType": "YulTypedName",
														"src": "6681:4:7",
														"type": ""
													}
												],
												"src": "6532:442:7"
											},
											{
												"body": {
													"nativeSrc": "7078:124:7",
													"nodeType": "YulBlock",
													"src": "7078:124:7",
													"statements": [
														{
															"nativeSrc": "7088:26:7",
															"nodeType": "YulAssignment",
															"src": "7088:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7100:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7100:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7111:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7111:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:7"
																},
																"nativeSrc": "7096:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7096:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7088:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7088:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7168:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7168:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7181:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7181:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7192:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7192:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7177:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7177:3:7"
																		},
																		"nativeSrc": "7177:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7177:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7124:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7124:43:7"
																},
																"nativeSrc": "7124:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7124:71:7"
															},
															"nativeSrc": "7124:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7124:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6980:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7050:9:7",
														"nodeType": "YulTypedName",
														"src": "7050:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7062:6:7",
														"nodeType": "YulTypedName",
														"src": "7062:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7073:4:7",
														"nodeType": "YulTypedName",
														"src": "7073:4:7",
														"type": ""
													}
												],
												"src": "6980:222:7"
											},
											{
												"body": {
													"nativeSrc": "7236:152:7",
													"nodeType": "YulBlock",
													"src": "7236:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7253:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7253:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7256:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7256:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7246:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7246:6:7"
																},
																"nativeSrc": "7246:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7246:88:7"
															},
															"nativeSrc": "7246:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7246:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7350:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7350:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7353:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7353:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7343:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7343:6:7"
																},
																"nativeSrc": "7343:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7343:15:7"
															},
															"nativeSrc": "7343:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7343:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7374:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7374:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7377:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7377:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7367:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7367:6:7"
																},
																"nativeSrc": "7367:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7367:15:7"
															},
															"nativeSrc": "7367:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7367:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7208:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7208:180:7"
											},
											{
												"body": {
													"nativeSrc": "7438:147:7",
													"nodeType": "YulBlock",
													"src": "7438:147:7",
													"statements": [
														{
															"nativeSrc": "7448:25:7",
															"nodeType": "YulAssignment",
															"src": "7448:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7471:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7471:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7453:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7453:17:7"
																},
																"nativeSrc": "7453:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7453:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7448:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7448:1:7"
																}
															]
														},
														{
															"nativeSrc": "7482:25:7",
															"nodeType": "YulAssignment",
															"src": "7482:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7505:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7505:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7487:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7487:17:7"
																},
																"nativeSrc": "7487:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7487:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7482:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7482:1:7"
																}
															]
														},
														{
															"nativeSrc": "7516:16:7",
															"nodeType": "YulAssignment",
															"src": "7516:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7527:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7527:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7530:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7530:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7523:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7523:3:7"
																},
																"nativeSrc": "7523:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7523:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7516:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7516:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7556:22:7",
																"nodeType": "YulBlock",
																"src": "7556:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7558:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7558:16:7"
																			},
																			"nativeSrc": "7558:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7558:18:7"
																		},
																		"nativeSrc": "7558:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7558:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7548:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7548:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7551:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7551:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7545:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7545:2:7"
																},
																"nativeSrc": "7545:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7545:10:7"
															},
															"nativeSrc": "7542:36:7",
															"nodeType": "YulIf",
															"src": "7542:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7394:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7425:1:7",
														"nodeType": "YulTypedName",
														"src": "7425:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7428:1:7",
														"nodeType": "YulTypedName",
														"src": "7428:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7434:3:7",
														"nodeType": "YulTypedName",
														"src": "7434:3:7",
														"type": ""
													}
												],
												"src": "7394:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a6575f3560e01c806370a082311161006357806370a08231146101c857806395d89b4114610204578063a6f2ae3a1461022e578063a9059cbb14610238578063dd62ed3e14610274578063e4849b32146102b0576100a6565b806306fdde03146100aa578063095ea7b3146100d457806318160ddd1461011057806323b872dd1461013a578063313ce5671461017657806340c10f19146101a0575b5f5ffd5b3480156100b5575f5ffd5b506100be6102cc565b6040516100cb9190610c15565b60405180910390f35b3480156100df575f5ffd5b506100fa60048036038101906100f59190610cc6565b61035c565b6040516101079190610d1e565b60405180910390f35b34801561011b575f5ffd5b5061012461037e565b6040516101319190610d46565b60405180910390f35b348015610145575f5ffd5b50610160600480360381019061015b9190610d5f565b610387565b60405161016d9190610d1e565b60405180910390f35b348015610181575f5ffd5b5061018a6103b5565b6040516101979190610dca565b60405180910390f35b3480156101ab575f5ffd5b506101c660048036038101906101c19190610cc6565b6103bd565b005b3480156101d3575f5ffd5b506101ee60048036038101906101e99190610de3565b6103cb565b6040516101fb9190610d46565b60405180910390f35b34801561020f575f5ffd5b50610218610410565b6040516102259190610c15565b60405180910390f35b6102366104a0565b005b348015610243575f5ffd5b5061025e60048036038101906102599190610cc6565b6104ac565b60405161026b9190610d1e565b60405180910390f35b34801561027f575f5ffd5b5061029a60048036038101906102959190610e0e565b6104ce565b6040516102a79190610d46565b60405180910390f35b6102ca60048036038101906102c59190610e4c565b610550565b005b6060600380546102db90610ea4565b80601f016020809104026020016040519081016040528092919081815260200182805461030790610ea4565b80156103525780601f1061032957610100808354040283529160200191610352565b820191905f5260205f20905b81548152906001019060200180831161033557829003601f168201915b5050505050905090565b5f5f6103666105a2565b90506103738185856105a9565b600191505092915050565b5f600254905090565b5f5f6103916105a2565b905061039e8582856105bb565b6103a985858561064e565b60019150509392505050565b5f6012905090565b6103c7828261073e565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461041f90610ea4565b80601f016020809104026020016040519081016040528092919081815260200182805461044b90610ea4565b80156104965780601f1061046d57610100808354040283529160200191610496565b820191905f5260205f20905b81548152906001019060200180831161047957829003601f168201915b5050505050905090565b6104aa333461073e565b565b5f5f6104b66105a2565b90506104c381858561064e565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61055b33308361064e565b3373ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f1935050505015801561059e573d5f5f3e3d5ffd5b5050565b5f33905090565b6105b683838360016107bd565b505050565b5f6105c684846104ce565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156106485781811015610639578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161063093929190610ee3565b60405180910390fd5b61064784848484035f6107bd565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106be575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106b59190610f18565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361072e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107259190610f18565b60405180910390fd5b61073983838361098c565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107ae575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107a59190610f18565b60405180910390fd5b6107b95f838361098c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361082d575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016108249190610f18565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361089d575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108949190610f18565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610986578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161097d9190610d46565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109dc578060025f8282546109d09190610f5e565b92505081905550610aaa565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a65578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a5c93929190610ee3565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610af1578060025f8282540392505081905550610b3b565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b989190610d46565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610be782610ba5565b610bf18185610baf565b9350610c01818560208601610bbf565b610c0a81610bcd565b840191505092915050565b5f6020820190508181035f830152610c2d8184610bdd565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c6282610c39565b9050919050565b610c7281610c58565b8114610c7c575f5ffd5b50565b5f81359050610c8d81610c69565b92915050565b5f819050919050565b610ca581610c93565b8114610caf575f5ffd5b50565b5f81359050610cc081610c9c565b92915050565b5f5f60408385031215610cdc57610cdb610c35565b5b5f610ce985828601610c7f565b9250506020610cfa85828601610cb2565b9150509250929050565b5f8115159050919050565b610d1881610d04565b82525050565b5f602082019050610d315f830184610d0f565b92915050565b610d4081610c93565b82525050565b5f602082019050610d595f830184610d37565b92915050565b5f5f5f60608486031215610d7657610d75610c35565b5b5f610d8386828701610c7f565b9350506020610d9486828701610c7f565b9250506040610da586828701610cb2565b9150509250925092565b5f60ff82169050919050565b610dc481610daf565b82525050565b5f602082019050610ddd5f830184610dbb565b92915050565b5f60208284031215610df857610df7610c35565b5b5f610e0584828501610c7f565b91505092915050565b5f5f60408385031215610e2457610e23610c35565b5b5f610e3185828601610c7f565b9250506020610e4285828601610c7f565b9150509250929050565b5f60208284031215610e6157610e60610c35565b5b5f610e6e84828501610cb2565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610ebb57607f821691505b602082108103610ece57610ecd610e77565b5b50919050565b610edd81610c58565b82525050565b5f606082019050610ef65f830186610ed4565b610f036020830185610d37565b610f106040830184610d37565b949350505050565b5f602082019050610f2b5f830184610ed4565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610f6882610c93565b9150610f7383610c93565b9250828201905080821115610f8b57610f8a610f31565b5b9291505056fea2646970667358221220e4b69eb5a5cc43f6879575d56f7f98b5c1b492c10dbe68f008084e3e5924b2dd64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x2B0 JUMPI PUSH2 0xA6 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xBE PUSH2 0x2CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xFA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF5 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x124 PUSH2 0x37E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0xDE3 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x218 PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x236 PUSH2 0x4A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xE0E JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0xE4C JUMP JUMPDEST PUSH2 0x550 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2DB SWAP1 PUSH2 0xEA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x307 SWAP1 PUSH2 0xEA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x352 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x329 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x352 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x335 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x366 PUSH2 0x5A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x373 DUP2 DUP6 DUP6 PUSH2 0x5A9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x391 PUSH2 0x5A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x39E DUP6 DUP3 DUP6 PUSH2 0x5BB JUMP JUMPDEST PUSH2 0x3A9 DUP6 DUP6 DUP6 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3C7 DUP3 DUP3 PUSH2 0x73E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x41F SWAP1 PUSH2 0xEA4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44B SWAP1 PUSH2 0xEA4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x496 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x496 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x479 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4AA CALLER CALLVALUE PUSH2 0x73E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4B6 PUSH2 0x5A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x4C3 DUP2 DUP6 DUP6 PUSH2 0x64E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x55B CALLER ADDRESS DUP4 PUSH2 0x64E JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x59E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5B6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x7BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5C6 DUP5 DUP5 PUSH2 0x4CE JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x648 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x639 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x630 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x647 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x7BD JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6BE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x72E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x725 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x739 DUP4 DUP4 DUP4 PUSH2 0x98C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B9 PUSH0 DUP4 DUP4 PUSH2 0x98C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x82D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x824 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0xF18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x986 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x97D SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9DC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0xF5E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xAAA JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA65 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAF1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB3B JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xBE7 DUP3 PUSH2 0xBA5 JUMP JUMPDEST PUSH2 0xBF1 DUP2 DUP6 PUSH2 0xBAF JUMP JUMPDEST SWAP4 POP PUSH2 0xC01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xBBF JUMP JUMPDEST PUSH2 0xC0A DUP2 PUSH2 0xBCD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC2D DUP2 DUP5 PUSH2 0xBDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC62 DUP3 PUSH2 0xC39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC72 DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP2 EQ PUSH2 0xC7C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC8D DUP2 PUSH2 0xC69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA5 DUP2 PUSH2 0xC93 JUMP JUMPDEST DUP2 EQ PUSH2 0xCAF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCC0 DUP2 PUSH2 0xC9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDC JUMPI PUSH2 0xCDB PUSH2 0xC35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCE9 DUP6 DUP3 DUP7 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCFA DUP6 DUP3 DUP7 ADD PUSH2 0xCB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD18 DUP2 PUSH2 0xD04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD31 PUSH0 DUP4 ADD DUP5 PUSH2 0xD0F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD40 DUP2 PUSH2 0xC93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD59 PUSH0 DUP4 ADD DUP5 PUSH2 0xD37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD76 JUMPI PUSH2 0xD75 PUSH2 0xC35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD83 DUP7 DUP3 DUP8 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD94 DUP7 DUP3 DUP8 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDA5 DUP7 DUP3 DUP8 ADD PUSH2 0xCB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC4 DUP2 PUSH2 0xDAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDDD PUSH0 DUP4 ADD DUP5 PUSH2 0xDBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF8 JUMPI PUSH2 0xDF7 PUSH2 0xC35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE05 DUP5 DUP3 DUP6 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE24 JUMPI PUSH2 0xE23 PUSH2 0xC35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE31 DUP6 DUP3 DUP7 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE42 DUP6 DUP3 DUP7 ADD PUSH2 0xC7F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE61 JUMPI PUSH2 0xE60 PUSH2 0xC35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE6E DUP5 DUP3 DUP6 ADD PUSH2 0xCB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xEBB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE77 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEDD DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xEF6 PUSH0 DUP4 ADD DUP7 PUSH2 0xED4 JUMP JUMPDEST PUSH2 0xF03 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD37 JUMP JUMPDEST PUSH2 0xF10 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD37 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF2B PUSH0 DUP4 ADD DUP5 PUSH2 0xED4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF68 DUP3 PUSH2 0xC93 JUMP JUMPDEST SWAP2 POP PUSH2 0xF73 DUP4 PUSH2 0xC93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF8B JUMPI PUSH2 0xF8A PUSH2 0xF31 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETF 0xB6 SWAP15 0xB5 0xA5 0xCC NUMBER 0xF6 DUP8 SWAP6 PUSH22 0xD56F7F98B5C1B492C10DBE68F008084E3E5924B2DD64 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "246:544:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;462::6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;553:75:6;;;:::i;:::-;;3296:178:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;634:152:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;462::6:-;520:17;526:2;530:6;520:5;:17::i;:::-;462:82;;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;553:75:6:-;593:28;599:10;611:9;593:5;:28::i;:::-;553:75::o;3296:178:2:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3532:140::-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;634:152:6:-;689:44;699:10;719:4;726:6;689:9;:44::i;:::-;751:10;743:28;;:36;772:6;743:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:152;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:474::-;5149:6;5157;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5459:2;5485:53;5530:7;5521:6;5510:9;5506:22;5485:53;:::i;:::-;5475:63;;5430:118;5081:474;;;;;:::o;5561:329::-;5620:6;5669:2;5657:9;5648:7;5644:23;5640:32;5637:119;;;5675:79;;:::i;:::-;5637:119;5795:1;5820:53;5865:7;5856:6;5845:9;5841:22;5820:53;:::i;:::-;5810:63;;5766:117;5561:329;;;;:::o;5896:180::-;5944:77;5941:1;5934:88;6041:4;6038:1;6031:15;6065:4;6062:1;6055:15;6082:320;6126:6;6163:1;6157:4;6153:12;6143:22;;6210:1;6204:4;6200:12;6231:18;6221:81;;6287:4;6279:6;6275:17;6265:27;;6221:81;6349:2;6341:6;6338:14;6318:18;6315:38;6312:84;;6368:18;;:::i;:::-;6312:84;6133:269;6082:320;;;:::o;6408:118::-;6495:24;6513:5;6495:24;:::i;:::-;6490:3;6483:37;6408:118;;:::o;6532:442::-;6681:4;6719:2;6708:9;6704:18;6696:26;;6732:71;6800:1;6789:9;6785:17;6776:6;6732:71;:::i;:::-;6813:72;6881:2;6870:9;6866:18;6857:6;6813:72;:::i;:::-;6895;6963:2;6952:9;6948:18;6939:6;6895:72;:::i;:::-;6532:442;;;;;;:::o;6980:222::-;7073:4;7111:2;7100:9;7096:18;7088:26;;7124:71;7192:1;7181:9;7177:17;7168:6;7124:71;:::i;:::-;6980:222;;;;:::o;7208:180::-;7256:77;7253:1;7246:88;7353:4;7350:1;7343:15;7377:4;7374:1;7367:15;7394:191;7434:3;7453:20;7471:1;7453:20;:::i;:::-;7448:25;;7487:20;7505:1;7487:20;:::i;:::-;7482:25;;7530:1;7527;7523:9;7516:16;;7551:3;7548:1;7545:10;7542:36;;;7558:18;;:::i;:::-;7542:36;7394:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "807800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2828",
								"buy()": "infinite",
								"decimals()": "427",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"sell(uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2477",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 246,
									"end": 790,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 246,
									"end": 790,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 246,
									"end": 790,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 280,
									"end": 456,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 456,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 456,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 280,
									"end": 456,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 456,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 456,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 280,
									"end": 456,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 280,
									"end": 456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 280,
									"end": 456,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 370,
									"end": 375,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 377,
									"end": 384,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 405,
									"end": 448,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 411,
									"end": 420,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 437,
									"end": 447,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 437,
									"end": 445,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 437,
									"end": 445,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 437,
									"end": 445,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 437,
									"end": 447,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 437,
									"end": 447,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 437,
									"end": 447,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 437,
									"end": 447,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 437,
									"end": 447,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 431,
									"end": 433,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 431,
									"end": 447,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 431,
									"end": 447,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 431,
									"end": 447,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 431,
									"end": 447,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 431,
									"end": 447,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 431,
									"end": 447,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 431,
									"end": 447,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 422,
									"end": 428,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "186A0"
								},
								{
									"begin": 422,
									"end": 447,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 422,
									"end": 447,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 422,
									"end": 447,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 422,
									"end": 447,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 422,
									"end": 447,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 422,
									"end": 447,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 422,
									"end": 447,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 405,
									"end": 410,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 405,
									"end": 410,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 405,
									"end": 410,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 405,
									"end": 448,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 405,
									"end": 448,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 405,
									"end": 448,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 405,
									"end": 448,
									"modifierDepth": 1,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 405,
									"end": 448,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 280,
									"end": 456,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 246,
									"end": 790,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 246,
									"end": 790,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2737,
									"end": 2742,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2754,
									"end": 2763,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2688,
									"end": 2770,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7516,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7553,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6094,
									"end": 6095,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6082,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6266,
									"end": 6303,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6340,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6332,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6392,
									"end": 6396,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6367,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6581,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6562,
									"end": 6566,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6252,
									"end": 6614,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6642,
									"end": 6643,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6630,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6807,
									"end": 6812,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7019,
									"end": 7024,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7012,
									"end": 7014,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7064,
									"end": 7089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 968,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1074,
									"end": 1075,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1067,
									"end": 1079,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1132,
									"end": 1138,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1179,
									"end": 1186,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1174,
									"end": 1176,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1167,
									"end": 1172,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1163,
									"end": 1177,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1159,
									"end": 1187,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1149,
									"end": 1187,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1091,
									"end": 1193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1199,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1247,
									"end": 1324,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1244,
									"end": 1245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1237,
									"end": 1325,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1348,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1342,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1334,
									"end": 1349,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1490,
									"end": 1494,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1468,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1468,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1466,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1456,
									"end": 1496,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1604,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1586,
									"end": 1596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1583,
									"end": 1605,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1562,
									"end": 1580,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1547,
									"end": 1581,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1544,
									"end": 1606,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1609,
									"end": 1627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1609,
									"end": 1627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1541,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1649,
									"end": 1659,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1645,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1638,
									"end": 1660,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1428,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1385,
									"end": 1666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1706,
									"end": 1712,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1733,
									"end": 1753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1733,
									"end": 1753,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1723,
									"end": 1753,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1790,
									"end": 1794,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1782,
									"end": 1788,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1762,
									"end": 1795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1762,
									"end": 1795,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1672,
									"end": 1801,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1959,
									"end": 1977,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1948,
									"end": 1978,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1981,
									"end": 1999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 1981,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 1945,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 2019,
									"end": 2048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2019,
									"end": 2048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2011,
									"end": 2048,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2097,
									"end": 2101,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2093,
									"end": 2108,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2085,
									"end": 2108,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 2115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2210,
									"end": 2216,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2205,
									"end": 2208,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2200,
									"end": 2203,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2194,
									"end": 2217,
									"name": "MCOPY",
									"source": 7
								},
								{
									"begin": 2251,
									"end": 2252,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2242,
									"end": 2248,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2237,
									"end": 2240,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2233,
									"end": 2249,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2226,
									"end": 2253,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2260,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2121,
									"end": 2260,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2355,
									"end": 2360,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 2438,
									"end": 2444,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2396,
									"end": 2445,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 2396,
									"end": 2445,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2380,
									"end": 2446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 2380,
									"end": 2446,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2371,
									"end": 2446,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2371,
									"end": 2446,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2467,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2455,
									"end": 2476,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2511,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2500,
									"end": 2505,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2496,
									"end": 2512,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2545,
									"end": 2548,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2536,
									"end": 2542,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2527,
									"end": 2543,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2524,
									"end": 2549,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2552,
									"end": 2631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 2552,
									"end": 2631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 2521,
									"end": 2633,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2687,
									"end": 2693,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2682,
									"end": 2685,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2677,
									"end": 2680,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2642,
									"end": 2694,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 2642,
									"end": 2694,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2361,
									"end": 2700,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2787,
									"end": 2792,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2836,
									"end": 2839,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2829,
									"end": 2833,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2821,
									"end": 2827,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2817,
									"end": 2834,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2813,
									"end": 2840,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2844,
									"end": 2923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 2844,
									"end": 2923,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 2803,
									"end": 2925,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2948,
									"end": 2961,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 3065,
									"end": 3068,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3057,
									"end": 3063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3050,
									"end": 3054,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3042,
									"end": 3048,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3038,
									"end": 3055,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2979,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "tag",
									"source": 7,
									"value": "119"
								},
								{
									"begin": 2979,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2970,
									"end": 3069,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2970,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2793,
									"end": 3075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 3075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2720,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3205,
									"end": 3211,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3254,
									"end": 3256,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3242,
									"end": 3251,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3233,
									"end": 3240,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3229,
									"end": 3252,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3225,
									"end": 3257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3260,
									"end": 3339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3380,
									"end": 3381,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3405,
									"end": 3469,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3461,
									"end": 3468,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3452,
									"end": 3458,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3441,
									"end": 3450,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3437,
									"end": 3459,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3405,
									"end": 3469,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3405,
									"end": 3469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3405,
									"end": 3469,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3405,
									"end": 3469,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3395,
									"end": 3469,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3395,
									"end": 3469,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3351,
									"end": 3479,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3539,
									"end": 3541,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3528,
									"end": 3537,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3524,
									"end": 3542,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3518,
									"end": 3543,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3570,
									"end": 3588,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3562,
									"end": 3568,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3559,
									"end": 3589,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3556,
									"end": 3673,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3556,
									"end": 3673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 3556,
									"end": 3673,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3592,
									"end": 3671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3592,
									"end": 3671,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3592,
									"end": 3671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3592,
									"end": 3671,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 3592,
									"end": 3671,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3556,
									"end": 3673,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 3556,
									"end": 3673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3771,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3763,
									"end": 3770,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3754,
									"end": 3760,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3743,
									"end": 3752,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3739,
									"end": 3761,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3771,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3697,
									"end": 3771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3697,
									"end": 3771,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 3697,
									"end": 3771,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3687,
									"end": 3771,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3687,
									"end": 3771,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3489,
									"end": 3781,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3841,
									"end": 3843,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3830,
									"end": 3839,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3826,
									"end": 3844,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3820,
									"end": 3845,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3872,
									"end": 3890,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3864,
									"end": 3870,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3861,
									"end": 3891,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3975,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3975,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 3858,
									"end": 3975,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3973,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3894,
									"end": 3973,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 3894,
									"end": 3973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3973,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 3894,
									"end": 3973,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 3975,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 3858,
									"end": 3975,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4065,
									"end": 4072,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4062,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4045,
									"end": 4054,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4063,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3999,
									"end": 4073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3989,
									"end": 4073,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3989,
									"end": 4073,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3791,
									"end": 4083,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 4090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4148,
									"end": 4154,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4182,
									"end": 4187,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4176,
									"end": 4188,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4166,
									"end": 4188,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4166,
									"end": 4188,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4096,
									"end": 4195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4381,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 4201,
									"end": 4381,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4326,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4246,
									"end": 4247,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4239,
									"end": 4327,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4346,
									"end": 4350,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 4343,
									"end": 4344,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4336,
									"end": 4351,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4374,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4367,
									"end": 4368,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4360,
									"end": 4375,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4431,
									"end": 4437,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4468,
									"end": 4469,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4462,
									"end": 4466,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4458,
									"end": 4470,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4448,
									"end": 4470,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4448,
									"end": 4470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4515,
									"end": 4516,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4509,
									"end": 4513,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4505,
									"end": 4517,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4536,
									"end": 4554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4592,
									"end": 4596,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 4584,
									"end": 4590,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4580,
									"end": 4597,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4570,
									"end": 4597,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4570,
									"end": 4597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4654,
									"end": 4656,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4646,
									"end": 4652,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4643,
									"end": 4657,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4623,
									"end": 4641,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4620,
									"end": 4658,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 4673,
									"end": 4691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4438,
									"end": 4707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4387,
									"end": 4707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4762,
									"end": 4766,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4788,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4777,
									"end": 4788,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4777,
									"end": 4788,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4811,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4805,
									"end": 4806,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4798,
									"end": 4812,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4842,
									"end": 4846,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4839,
									"end": 4840,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4829,
									"end": 4847,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 4821,
									"end": 4847,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4821,
									"end": 4847,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4713,
									"end": 4854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4897,
									"end": 4903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4944,
									"end": 4946,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 4941,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4932,
									"end": 4937,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4928,
									"end": 4942,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4924,
									"end": 4947,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4914,
									"end": 4947,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4914,
									"end": 4947,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4860,
									"end": 4953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5003,
									"end": 5011,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5053,
									"end": 5058,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5047,
									"end": 5051,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5043,
									"end": 5059,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 5022,
									"end": 5059,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5022,
									"end": 5059,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4959,
									"end": 5066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5141,
									"end": 5147,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5191,
									"end": 5192,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5179,
									"end": 5189,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5175,
									"end": 5193,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5244,
									"end": 5310,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5233,
									"end": 5242,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 5214,
									"end": 5311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5362,
									"end": 5370,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5351,
									"end": 5360,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 5332,
									"end": 5371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5371,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5371,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5404,
									"end": 5408,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5400,
									"end": 5409,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5393,
									"end": 5398,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5389,
									"end": 5410,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5380,
									"end": 5410,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5380,
									"end": 5410,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5453,
									"end": 5457,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5443,
									"end": 5451,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5439,
									"end": 5458,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5437,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5429,
									"end": 5459,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5419,
									"end": 5459,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5419,
									"end": 5459,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5148,
									"end": 5465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5148,
									"end": 5465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5072,
									"end": 5465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5508,
									"end": 5515,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5537,
									"end": 5542,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5526,
									"end": 5542,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5526,
									"end": 5542,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5471,
									"end": 5548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5582,
									"end": 5585,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5603,
									"end": 5608,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5608,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5596,
									"end": 5608,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5554,
									"end": 5614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5670,
									"end": 5679,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5748,
									"end": 5753,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5730,
									"end": 5754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5721,
									"end": 5755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5703,
									"end": 5756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5690,
									"end": 5756,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5690,
									"end": 5756,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5620,
									"end": 5762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5811,
									"end": 5814,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5832,
									"end": 5837,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5825,
									"end": 5837,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5825,
									"end": 5837,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5768,
									"end": 5843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5990,
									"end": 5997,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5959,
									"end": 5998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6093,
									"end": 6109,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6069,
									"end": 6110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6061,
									"end": 6067,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6054,
									"end": 6058,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6048,
									"end": 6059,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 6020,
									"end": 6111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6014,
									"end": 6018,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6007,
									"end": 6112,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5925,
									"end": 6118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5849,
									"end": 6118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6169,
									"end": 6172,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6190,
									"end": 6191,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6183,
									"end": 6191,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6183,
									"end": 6191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6124,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6280,
									"end": 6312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6379,
									"end": 6385,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6371,
									"end": 6377,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6365,
									"end": 6369,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6321,
									"end": 6386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6256,
									"end": 6392,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6203,
									"end": 6392,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6475,
									"end": 6478,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6468,
									"end": 6473,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6465,
									"end": 6479,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6566,
									"end": 6567,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6559,
									"end": 6564,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6529,
									"end": 6568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6502,
									"end": 6503,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6495,
									"end": 6500,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6491,
									"end": 6504,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6482,
									"end": 6504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6482,
									"end": 6504,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6398,
									"end": 6584,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6691,
									"end": 6693,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6686,
									"end": 6689,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6683,
									"end": 6694,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 6757,
									"end": 6762,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 6725,
									"end": 6763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 6827,
									"end": 6837,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 6809,
									"end": 6838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6799,
									"end": 6807,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6795,
									"end": 6839,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6992,
									"end": 6994,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6980,
									"end": 6990,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6977,
									"end": 6995,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7013,
									"end": 7021,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6998,
									"end": 7021,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6998,
									"end": 7021,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7110,
									"end": 7113,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 7092,
									"end": 7114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7082,
									"end": 7090,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7078,
									"end": 7115,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7065,
									"end": 7076,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 7036,
									"end": 7116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6695,
									"end": 7126,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6695,
									"end": 7126,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6590,
									"end": 7133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7193,
									"end": 7201,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7243,
									"end": 7248,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7237,
									"end": 7241,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7233,
									"end": 7249,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 7212,
									"end": 7249,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7212,
									"end": 7249,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7139,
									"end": 7256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7306,
									"end": 7312,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7387,
									"end": 7388,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7383,
									"end": 7389,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7375,
									"end": 7380,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7372,
									"end": 7373,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7368,
									"end": 7381,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7339,
									"end": 7390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7335,
									"end": 7391,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 7420,
									"end": 7424,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 7414,
									"end": 7418,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7410,
									"end": 7425,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7400,
									"end": 7425,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7400,
									"end": 7425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7313,
									"end": 7431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7262,
									"end": 7431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7512,
									"end": 7516,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7683,
									"end": 7686,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7677,
									"end": 7681,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7658,
									"end": 7687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7650,
									"end": 7687,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7650,
									"end": 7687,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7720,
									"end": 7723,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7717,
									"end": 7718,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7713,
									"end": 7724,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7707,
									"end": 7711,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7704,
									"end": 7725,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 7696,
									"end": 7725,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7696,
									"end": 7725,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7436,
									"end": 7731,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7886,
									"end": 7889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 7853,
									"end": 7890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7955,
									"end": 7973,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7947,
									"end": 7953,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7944,
									"end": 7974,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 7977,
									"end": 7995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8053,
									"end": 8057,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8047,
									"end": 8058,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 8021,
									"end": 8059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8166,
									"end": 8172,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8158,
									"end": 8164,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 8106,
									"end": 8173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8200,
									"end": 8201,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8224,
									"end": 8228,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8211,
									"end": 8228,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8211,
									"end": 8228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8256,
									"end": 8258,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8248,
									"end": 8254,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8245,
									"end": 8259,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8273,
									"end": 8274,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8930,
									"end": 8931,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8947,
									"end": 8953,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8996,
									"end": 9005,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8991,
									"end": 8994,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 8987,
									"end": 9006,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8981,
									"end": 9007,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8972,
									"end": 9007,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8972,
									"end": 9007,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9107,
									"end": 9113,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9100,
									"end": 9105,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 9047,
									"end": 9114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9041,
									"end": 9045,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9034,
									"end": 9115,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8903,
									"end": 9125,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8320,
									"end": 8324,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8316,
									"end": 8325,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 8308,
									"end": 8314,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8304,
									"end": 8326,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8386,
									"end": 8390,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 8354,
									"end": 8391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8413,
									"end": 8414,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8441,
									"end": 8448,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8438,
									"end": 8439,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8435,
									"end": 8449,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8520,
									"end": 8529,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8515,
									"end": 8518,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8511,
									"end": 8530,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8505,
									"end": 8531,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8497,
									"end": 8503,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8490,
									"end": 8532,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8571,
									"end": 8572,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8563,
									"end": 8569,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8559,
									"end": 8573,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8549,
									"end": 8573,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8549,
									"end": 8573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8618,
									"end": 8620,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8607,
									"end": 8616,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8603,
									"end": 8621,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8590,
									"end": 8621,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8590,
									"end": 8621,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8464,
									"end": 8468,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8461,
									"end": 8462,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8457,
									"end": 8469,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8452,
									"end": 8469,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8452,
									"end": 8469,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8663,
									"end": 8669,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8654,
									"end": 8661,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8651,
									"end": 8670,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8721,
									"end": 8730,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 8716,
									"end": 8719,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8712,
									"end": 8731,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8706,
									"end": 8732,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 8806,
									"end": 8810,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 8798,
									"end": 8804,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 8794,
									"end": 8811,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8783,
									"end": 8792,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 8764,
									"end": 8812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8756,
									"end": 8762,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8749,
									"end": 8813,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8671,
									"end": 8827,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8873,
									"end": 8874,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8869,
									"end": 8870,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 8861,
									"end": 8867,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8857,
									"end": 8871,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8853,
									"end": 8875,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8847,
									"end": 8851,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 8840,
									"end": 8876,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7736,
									"end": 9131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9137,
									"end": 9317,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 9137,
									"end": 9317,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9185,
									"end": 9262,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9182,
									"end": 9183,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9175,
									"end": 9263,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9282,
									"end": 9286,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 9279,
									"end": 9280,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 9272,
									"end": 9287,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 9306,
									"end": 9310,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 9303,
									"end": 9304,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9296,
									"end": 9311,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 9323,
									"end": 9425,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 9323,
									"end": 9425,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9365,
									"end": 9373,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9412,
									"end": 9417,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9409,
									"end": 9410,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9405,
									"end": 9418,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 9384,
									"end": 9418,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9384,
									"end": 9418,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9323,
									"end": 9425,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9323,
									"end": 9425,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9323,
									"end": 9425,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9323,
									"end": 9425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9431,
									"end": 10279,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 9431,
									"end": 10279,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9492,
									"end": 9497,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9499,
									"end": 9503,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9523,
									"end": 9529,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9514,
									"end": 9529,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9514,
									"end": 9529,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9547,
									"end": 9552,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9538,
									"end": 9552,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9538,
									"end": 9552,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9561,
									"end": 10273,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9561,
									"end": 10273,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9582,
									"end": 9583,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9572,
									"end": 9580,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9569,
									"end": 9584,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9561,
									"end": 10273,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9561,
									"end": 10273,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9561,
									"end": 10273,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9677,
									"end": 9681,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 9672,
									"end": 9675,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9668,
									"end": 9682,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 9662,
									"end": 9666,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9659,
									"end": 9683,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9656,
									"end": 9706,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9656,
									"end": 9706,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9656,
									"end": 9706,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9686,
									"end": 9704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9686,
									"end": 9704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 9686,
									"end": 9704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9686,
									"end": 9704,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9686,
									"end": 9704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9656,
									"end": 9706,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9656,
									"end": 9706,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9736,
									"end": 9737,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9726,
									"end": 9734,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9722,
									"end": 9738,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9719,
									"end": 10170,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9719,
									"end": 10170,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9719,
									"end": 10170,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10151,
									"end": 10155,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10144,
									"end": 10149,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10140,
									"end": 10156,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 10131,
									"end": 10156,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10131,
									"end": 10156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9719,
									"end": 10170,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 9719,
									"end": 10170,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10201,
									"end": 10205,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 10195,
									"end": 10199,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10191,
									"end": 10206,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 10183,
									"end": 10206,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10183,
									"end": 10206,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10231,
									"end": 10263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 10254,
									"end": 10262,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 10231,
									"end": 10263,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 10231,
									"end": 10263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10231,
									"end": 10263,
									"name": "tag",
									"source": 7,
									"value": "199"
								},
								{
									"begin": 10231,
									"end": 10263,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10219,
									"end": 10263,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 10219,
									"end": 10263,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9561,
									"end": 10273,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9561,
									"end": 10273,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9561,
									"end": 10273,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9561,
									"end": 10273,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9431,
									"end": 10279,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9431,
									"end": 10279,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9431,
									"end": 10279,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 9431,
									"end": 10279,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9431,
									"end": 10279,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9431,
									"end": 10279,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9431,
									"end": 10279,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9431,
									"end": 10279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10285,
									"end": 11358,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 10285,
									"end": 11358,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10339,
									"end": 10344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10530,
									"end": 10538,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10520,
									"end": 10560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 10520,
									"end": 10560,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10551,
									"end": 10552,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10542,
									"end": 10552,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10542,
									"end": 10552,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10553,
									"end": 10558,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10553,
									"end": 10558,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10520,
									"end": 10560,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 10520,
									"end": 10560,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10579,
									"end": 10583,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10569,
									"end": 10605,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 10569,
									"end": 10605,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10596,
									"end": 10597,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10587,
									"end": 10597,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10587,
									"end": 10597,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10598,
									"end": 10603,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10598,
									"end": 10603,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10569,
									"end": 10605,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 10569,
									"end": 10605,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10665,
									"end": 10669,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10713,
									"end": 10714,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10708,
									"end": 10735,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10708,
									"end": 10735,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 10708,
									"end": 10735,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 10708,
									"end": 10735,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10749,
									"end": 10750,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 10744,
									"end": 10935,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10744,
									"end": 10935,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 10744,
									"end": 10935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10744,
									"end": 10935,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10658,
									"end": 10935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10658,
									"end": 10935,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10708,
									"end": 10735,
									"name": "tag",
									"source": 7,
									"value": "204"
								},
								{
									"begin": 10708,
									"end": 10735,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10726,
									"end": 10727,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 10717,
									"end": 10727,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10717,
									"end": 10727,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10728,
									"end": 10733,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10728,
									"end": 10733,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10728,
									"end": 10733,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10744,
									"end": 10935,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10744,
									"end": 10935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10789,
									"end": 10792,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 10779,
									"end": 10787,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10776,
									"end": 10793,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10773,
									"end": 10816,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10773,
									"end": 10816,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10773,
									"end": 10816,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10796,
									"end": 10814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 10796,
									"end": 10814,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 10796,
									"end": 10814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10796,
									"end": 10814,
									"name": "tag",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 10796,
									"end": 10814,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10773,
									"end": 10816,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10773,
									"end": 10816,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10845,
									"end": 10853,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10842,
									"end": 10843,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 10838,
									"end": 10854,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 10829,
									"end": 10854,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10829,
									"end": 10854,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10880,
									"end": 10883,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10873,
									"end": 10878,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10870,
									"end": 10884,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 10867,
									"end": 10907,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10867,
									"end": 10907,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10867,
									"end": 10907,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10887,
									"end": 10905,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 10887,
									"end": 10905,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 10887,
									"end": 10905,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10887,
									"end": 10905,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 10887,
									"end": 10905,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10867,
									"end": 10907,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10867,
									"end": 10907,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10920,
									"end": 10925,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10920,
									"end": 10925,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10920,
									"end": 10925,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10658,
									"end": 10935,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10658,
									"end": 10935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10658,
									"end": 10935,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11044,
									"end": 11046,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11034,
									"end": 11042,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11031,
									"end": 11047,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 11025,
									"end": 11028,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 11019,
									"end": 11023,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11016,
									"end": 11029,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 11012,
									"end": 11048,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 10994,
									"end": 10996,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 10984,
									"end": 10992,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10981,
									"end": 10997,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 10976,
									"end": 10978,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 10970,
									"end": 10974,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10967,
									"end": 10979,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 10963,
									"end": 10998,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 10947,
									"end": 11058,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 10944,
									"end": 11190,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10944,
									"end": 11190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10944,
									"end": 11190,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11100,
									"end": 11108,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11094,
									"end": 11098,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11090,
									"end": 11109,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 11081,
									"end": 11109,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11081,
									"end": 11109,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11135,
									"end": 11138,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11128,
									"end": 11133,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11125,
									"end": 11139,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11122,
									"end": 11162,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11122,
									"end": 11162,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 11122,
									"end": 11162,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 11142,
									"end": 11160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11122,
									"end": 11162,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 11122,
									"end": 11162,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11175,
									"end": 11180,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 11175,
									"end": 11180,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10944,
									"end": 11190,
									"name": "tag",
									"source": 7,
									"value": "210"
								},
								{
									"begin": 10944,
									"end": 11190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11215,
									"end": 11257,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 11253,
									"end": 11256,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11243,
									"end": 11251,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11237,
									"end": 11241,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11234,
									"end": 11235,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 11215,
									"end": 11257,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 11215,
									"end": 11257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11215,
									"end": 11257,
									"name": "tag",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 11215,
									"end": 11257,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11200,
									"end": 11257,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11200,
									"end": 11257,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11200,
									"end": 11257,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11200,
									"end": 11257,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11289,
									"end": 11293,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11284,
									"end": 11287,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11280,
									"end": 11294,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 11273,
									"end": 11278,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11270,
									"end": 11295,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11267,
									"end": 11318,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11267,
									"end": 11318,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 11267,
									"end": 11318,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11298,
									"end": 11316,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 11298,
									"end": 11316,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 11298,
									"end": 11316,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11298,
									"end": 11316,
									"name": "tag",
									"source": 7,
									"value": "215"
								},
								{
									"begin": 11298,
									"end": 11316,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11267,
									"end": 11318,
									"name": "tag",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 11267,
									"end": 11318,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11347,
									"end": 11351,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11340,
									"end": 11345,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11336,
									"end": 11352,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 11327,
									"end": 11352,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11327,
									"end": 11352,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10285,
									"end": 11358,
									"name": "tag",
									"source": 7,
									"value": "200"
								},
								{
									"begin": 10285,
									"end": 11358,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10285,
									"end": 11358,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 10285,
									"end": 11358,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10285,
									"end": 11358,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10285,
									"end": 11358,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10285,
									"end": 11358,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10285,
									"end": 11358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11364,
									"end": 11450,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 11364,
									"end": 11450,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11399,
									"end": 11406,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11439,
									"end": 11443,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 11432,
									"end": 11437,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11428,
									"end": 11444,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 11417,
									"end": 11444,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11417,
									"end": 11444,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11364,
									"end": 11450,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11364,
									"end": 11450,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11364,
									"end": 11450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11364,
									"end": 11450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11456,
									"end": 11737,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 11456,
									"end": 11737,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11514,
									"end": 11519,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11538,
									"end": 11561,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 11556,
									"end": 11560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11538,
									"end": 11561,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 11538,
									"end": 11561,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11538,
									"end": 11561,
									"name": "tag",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 11538,
									"end": 11561,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11530,
									"end": 11561,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11530,
									"end": 11561,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11582,
									"end": 11607,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 11598,
									"end": 11606,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11582,
									"end": 11607,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 11582,
									"end": 11607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11582,
									"end": 11607,
									"name": "tag",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 11582,
									"end": 11607,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11570,
									"end": 11607,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11570,
									"end": 11607,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11626,
									"end": 11730,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 11663,
									"end": 11729,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11653,
									"end": 11661,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11647,
									"end": 11651,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11626,
									"end": 11730,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 11626,
									"end": 11730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11626,
									"end": 11730,
									"name": "tag",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 11626,
									"end": 11730,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11617,
									"end": 11730,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11617,
									"end": 11730,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11456,
									"end": 11737,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11456,
									"end": 11737,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11456,
									"end": 11737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11456,
									"end": 11737,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11456,
									"end": 11737,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11743,
									"end": 12153,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 11743,
									"end": 12153,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11783,
									"end": 11790,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11806,
									"end": 11826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 11824,
									"end": 11825,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11806,
									"end": 11826,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 11806,
									"end": 11826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11806,
									"end": 11826,
									"name": "tag",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 11806,
									"end": 11826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11801,
									"end": 11826,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11801,
									"end": 11826,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11840,
									"end": 11860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 11858,
									"end": 11859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11840,
									"end": 11860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 11840,
									"end": 11860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11840,
									"end": 11860,
									"name": "tag",
									"source": 7,
									"value": "223"
								},
								{
									"begin": 11840,
									"end": 11860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11835,
									"end": 11860,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11835,
									"end": 11860,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11895,
									"end": 11896,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11892,
									"end": 11893,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11888,
									"end": 11897,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 11917,
									"end": 11947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 11935,
									"end": 11946,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11917,
									"end": 11947,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 11917,
									"end": 11947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11917,
									"end": 11947,
									"name": "tag",
									"source": 7,
									"value": "224"
								},
								{
									"begin": 11917,
									"end": 11947,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11906,
									"end": 11947,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11906,
									"end": 11947,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12096,
									"end": 12097,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12087,
									"end": 12094,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12083,
									"end": 12098,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 12080,
									"end": 12081,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12077,
									"end": 12099,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 12057,
									"end": 12058,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12050,
									"end": 12059,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 12030,
									"end": 12113,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 12007,
									"end": 12146,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 12007,
									"end": 12146,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12126,
									"end": 12144,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 12126,
									"end": 12144,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 12126,
									"end": 12144,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12126,
									"end": 12144,
									"name": "tag",
									"source": 7,
									"value": "226"
								},
								{
									"begin": 12126,
									"end": 12144,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12007,
									"end": 12146,
									"name": "tag",
									"source": 7,
									"value": "225"
								},
								{
									"begin": 12007,
									"end": 12146,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11791,
									"end": 12153,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11743,
									"end": 12153,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11743,
									"end": 12153,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11743,
									"end": 12153,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11743,
									"end": 12153,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11743,
									"end": 12153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12159,
									"end": 12277,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 12159,
									"end": 12277,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12246,
									"end": 12270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 12264,
									"end": 12269,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12246,
									"end": 12270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 12246,
									"end": 12270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12246,
									"end": 12270,
									"name": "tag",
									"source": 7,
									"value": "228"
								},
								{
									"begin": 12246,
									"end": 12270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12241,
									"end": 12244,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12234,
									"end": 12271,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12159,
									"end": 12277,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12159,
									"end": 12277,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12159,
									"end": 12277,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12283,
									"end": 12505,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 12283,
									"end": 12505,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12376,
									"end": 12380,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12414,
									"end": 12416,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 12403,
									"end": 12412,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12399,
									"end": 12417,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12391,
									"end": 12417,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12391,
									"end": 12417,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12427,
									"end": 12498,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 12495,
									"end": 12496,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12484,
									"end": 12493,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12480,
									"end": 12497,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12471,
									"end": 12477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 12427,
									"end": 12498,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 12427,
									"end": 12498,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12427,
									"end": 12498,
									"name": "tag",
									"source": 7,
									"value": "230"
								},
								{
									"begin": 12427,
									"end": 12498,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12283,
									"end": 12505,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12283,
									"end": 12505,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12283,
									"end": 12505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12283,
									"end": 12505,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12283,
									"end": 12505,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12511,
									"end": 12702,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 12511,
									"end": 12702,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12551,
									"end": 12554,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 12570,
									"end": 12590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 12588,
									"end": 12589,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12570,
									"end": 12590,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 12570,
									"end": 12590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12570,
									"end": 12590,
									"name": "tag",
									"source": 7,
									"value": "232"
								},
								{
									"begin": 12570,
									"end": 12590,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12565,
									"end": 12590,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12565,
									"end": 12590,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12604,
									"end": 12624,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 12622,
									"end": 12623,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 12604,
									"end": 12624,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 12604,
									"end": 12624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12604,
									"end": 12624,
									"name": "tag",
									"source": 7,
									"value": "233"
								},
								{
									"begin": 12604,
									"end": 12624,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12599,
									"end": 12624,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12599,
									"end": 12624,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12647,
									"end": 12648,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12644,
									"end": 12645,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12640,
									"end": 12649,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12633,
									"end": 12649,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12633,
									"end": 12649,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12668,
									"end": 12671,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 12665,
									"end": 12666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12662,
									"end": 12672,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 12659,
									"end": 12695,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 12659,
									"end": 12695,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 12659,
									"end": 12695,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 12675,
									"end": 12693,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 12675,
									"end": 12693,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 12675,
									"end": 12693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12675,
									"end": 12693,
									"name": "tag",
									"source": 7,
									"value": "235"
								},
								{
									"begin": 12675,
									"end": 12693,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12659,
									"end": 12695,
									"name": "tag",
									"source": 7,
									"value": "234"
								},
								{
									"begin": 12659,
									"end": 12695,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12511,
									"end": 12702,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 12511,
									"end": 12702,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 12511,
									"end": 12702,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12511,
									"end": 12702,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12511,
									"end": 12702,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12708,
									"end": 12826,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 12708,
									"end": 12826,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12795,
									"end": 12819,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "237"
								},
								{
									"begin": 12813,
									"end": 12818,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 12795,
									"end": 12819,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 12795,
									"end": 12819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12795,
									"end": 12819,
									"name": "tag",
									"source": 7,
									"value": "237"
								},
								{
									"begin": 12795,
									"end": 12819,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12790,
									"end": 12793,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 12783,
									"end": 12820,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 12708,
									"end": 12826,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12708,
									"end": 12826,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12708,
									"end": 12826,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 12832,
									"end": 13274,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 12832,
									"end": 13274,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12981,
									"end": 12985,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13019,
									"end": 13021,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 13008,
									"end": 13017,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13004,
									"end": 13022,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 12996,
									"end": 13022,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 12996,
									"end": 13022,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13032,
									"end": 13103,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 13100,
									"end": 13101,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13089,
									"end": 13098,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13085,
									"end": 13102,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13076,
									"end": 13082,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 13032,
									"end": 13103,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 13032,
									"end": 13103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13032,
									"end": 13103,
									"name": "tag",
									"source": 7,
									"value": "239"
								},
								{
									"begin": 13032,
									"end": 13103,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13113,
									"end": 13185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 13181,
									"end": 13183,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13170,
									"end": 13179,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13166,
									"end": 13184,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13157,
									"end": 13163,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 13113,
									"end": 13185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 13113,
									"end": 13185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13113,
									"end": 13185,
									"name": "tag",
									"source": 7,
									"value": "240"
								},
								{
									"begin": 13113,
									"end": 13185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13195,
									"end": 13267,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "241"
								},
								{
									"begin": 13263,
									"end": 13265,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 13252,
									"end": 13261,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13248,
									"end": 13266,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13239,
									"end": 13245,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13195,
									"end": 13267,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 13195,
									"end": 13267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13195,
									"end": 13267,
									"name": "tag",
									"source": 7,
									"value": "241"
								},
								{
									"begin": 13195,
									"end": 13267,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 12832,
									"end": 13274,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 12832,
									"end": 13274,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 12832,
									"end": 13274,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12832,
									"end": 13274,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12832,
									"end": 13274,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12832,
									"end": 13274,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 12832,
									"end": 13274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13280,
									"end": 13502,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 13280,
									"end": 13502,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13373,
									"end": 13377,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13411,
									"end": 13413,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 13400,
									"end": 13409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 13396,
									"end": 13414,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13388,
									"end": 13414,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 13388,
									"end": 13414,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13424,
									"end": 13495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 13492,
									"end": 13493,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 13481,
									"end": 13490,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 13477,
									"end": 13494,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 13468,
									"end": 13474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 13424,
									"end": 13495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 13424,
									"end": 13495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 13424,
									"end": 13495,
									"name": "tag",
									"source": 7,
									"value": "243"
								},
								{
									"begin": 13424,
									"end": 13495,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 13280,
									"end": 13502,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 13280,
									"end": 13502,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 13280,
									"end": 13502,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13280,
									"end": 13502,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 13280,
									"end": 13502,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 246,
									"end": 790,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 246,
									"end": 790,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 246,
									"end": 790,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 246,
									"end": 790,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 246,
									"end": 790,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 246,
									"end": 790,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 790,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 246,
									"end": 790,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 246,
									"end": 790,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e4b69eb5a5cc43f6879575d56f7f98b5c1b492c10dbe68f008084e3e5924b2dd64736f6c634300081e0033",
									".code": [
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "A6F2AE3A"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "E4849B32"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 790,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 462,
											"end": 544,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 462,
											"end": 544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 462,
											"end": 544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 544,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 462,
											"end": 544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 462,
											"end": 544,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 544,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 462,
											"end": 544,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 462,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 462,
											"end": 544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 462,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 462,
											"end": 544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 553,
											"end": 628,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 553,
											"end": 628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 553,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 553,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 553,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 553,
											"end": 628,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 553,
											"end": 628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 553,
											"end": 628,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 634,
											"end": 786,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 634,
											"end": 786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 634,
											"end": 786,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 634,
											"end": 786,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 634,
											"end": 786,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 634,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 634,
											"end": 786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 634,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 634,
											"end": 786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 462,
											"end": 544,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 462,
											"end": 544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 520,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 526,
											"end": 528,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 530,
											"end": 536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 520,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 520,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 520,
											"end": 537,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 520,
											"end": 537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 553,
											"end": 628,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 553,
											"end": 628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 593,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 599,
											"end": 609,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 611,
											"end": 620,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 593,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 593,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 621,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 593,
											"end": 621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 553,
											"end": 628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 634,
											"end": 786,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 634,
											"end": 786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 689,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 699,
											"end": 709,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 723,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 726,
											"end": 732,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 689,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 689,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 689,
											"end": 733,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 689,
											"end": 733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 751,
											"end": 761,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 743,
											"end": 771,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 743,
											"end": 771,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "PUSH",
											"source": 6,
											"value": "8FC"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 779,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 779,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 743,
											"end": 779,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 743,
											"end": 779,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 743,
											"end": 779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 743,
											"end": 779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 634,
											"end": 786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 5485,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5620,
											"end": 5626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5671,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5657,
											"end": 5666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5667,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 5675,
											"end": 5754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 5865,
											"end": 5872,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5854,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5863,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5820,
											"end": 5873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5766,
											"end": 5883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 6076,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5896,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5944,
											"end": 6021,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5941,
											"end": 5942,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 6022,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6041,
											"end": 6045,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6038,
											"end": 6039,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6069,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6062,
											"end": 6063,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6070,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6126,
											"end": 6132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6164,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6157,
											"end": 6161,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6153,
											"end": 6165,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6210,
											"end": 6211,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6204,
											"end": 6208,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6200,
											"end": 6212,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6287,
											"end": 6291,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6275,
											"end": 6292,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6265,
											"end": 6292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6221,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6349,
											"end": 6351,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6352,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6315,
											"end": 6353,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6368,
											"end": 6386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 6312,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6133,
											"end": 6402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6526,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 6408,
											"end": 6526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 6513,
											"end": 6518,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6495,
											"end": 6519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6495,
											"end": 6519,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 6495,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6490,
											"end": 6493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6483,
											"end": 6520,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6408,
											"end": 6526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6719,
											"end": 6721,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6708,
											"end": 6717,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6722,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6696,
											"end": 6722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6776,
											"end": 6782,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 6732,
											"end": 6803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 6732,
											"end": 6803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6870,
											"end": 6879,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 6813,
											"end": 6885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 6813,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6963,
											"end": 6965,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6952,
											"end": 6961,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6966,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6945,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 6895,
											"end": 6967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 6895,
											"end": 6967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6532,
											"end": 6974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7111,
											"end": 7113,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7100,
											"end": 7109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7096,
											"end": 7114,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7114,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7114,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 7192,
											"end": 7193,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7177,
											"end": 7194,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7168,
											"end": 7174,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 7124,
											"end": 7195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7195,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 7124,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6980,
											"end": 7202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7208,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7333,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7253,
											"end": 7254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7334,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7357,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7350,
											"end": 7351,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7343,
											"end": 7358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7381,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7374,
											"end": 7375,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7382,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7434,
											"end": 7437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 7471,
											"end": 7472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7453,
											"end": 7473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 7453,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7473,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7487,
											"end": 7507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 7487,
											"end": 7507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7507,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7523,
											"end": 7532,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7532,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7551,
											"end": 7554,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7545,
											"end": 7555,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7558,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 7542,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7394,
											"end": 7585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"TokenARS.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buy()": "a6f2ae3a",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"sell(uint256)": "e4849b32",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TokenARS.sol\":\"Token\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"TokenARS.sol\":{\"keccak256\":\"0x8df264fb25cb10fa78079e07de909880b41547b28f848a290431fac3291babb9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbd04e9faa666ad166b7b9083a669ddb3eed3a93ba872ad16be35c0db9dcc6f6\",\"dweb:/ipfs/QmZP8E7WRXtG5FkQ5VJdpFb8T9ReDTqVwZ9bwzN9VWP3WF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "TokenARS.sol:Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "TokenARS.sol:Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "TokenARS.sol:Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "TokenARS.sol:Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "TokenARS.sol:Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"TokenARS.sol": {
				"ast": {
					"absolutePath": "TokenARS.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"Ownable": [
							147
						],
						"Token": [
							1015
						]
					},
					"id": 1016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 800,
							"src": "107:68:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 936,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "115:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 148,
							"src": "176:67:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 938,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "184:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 940,
										"name": "ERC20",
										"nameLocations": [
											"264:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "264:5:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "264:5:6"
								}
							],
							"canonicalName": "Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1015,
							"linearizedBaseContracts": [
								1015,
								799,
								189,
								903,
								877,
								933
							],
							"name": "Token",
							"nameLocation": "255:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "395:61:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "411:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "313030303030",
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "422:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000_by_1",
																	"typeString": "int_const 100000"
																},
																"value": "100000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "431:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 958,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "437:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "437:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "431:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "422:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 954,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "405:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "405:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "405:43:6"
											}
										]
									},
									"id": 965,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 950,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 945,
													"src": "370:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 951,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 947,
													"src": "377:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 952,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 949,
												"name": "ERC20",
												"nameLocations": [
													"363:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "363:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "363:22:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "300:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "292:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "292:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "325:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "311:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "311:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "346:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "332:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 946,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "332:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "291:63:6"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:0:6"
									},
									"scope": 1015,
									"src": "280:176:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "510:34:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 973,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "526:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "530:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 972,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "520:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "520:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "520:17:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "471:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "484:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "476:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "496:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "488:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "475:28:6"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:0:6"
									},
									"scope": 1015,
									"src": "462:82:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "583:45:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 982,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "599:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "603:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "599:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 984,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "611:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "615:5:6",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "611:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 981,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "593:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "593:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "593:28:6"
											}
										]
									},
									"functionSelector": "a6f2ae3a",
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "562:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:2:6"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:0:6"
									},
									"scope": 1015,
									"src": "553:75:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "679:107:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 995,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "699:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "703:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "699:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 999,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "719:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Token_$1015",
																		"typeString": "contract Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Token_$1015",
																		"typeString": "contract Token"
																	}
																],
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "711:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 997,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "711:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "711:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1001,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "726:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "689:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "689:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "689:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1010,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "772:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1006,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "751:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "755:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "751:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "743:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1004,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "743:8:6",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "743:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "763:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "743:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "743:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "743:36:6"
											}
										]
									},
									"functionSelector": "e4849b32",
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sell",
									"nameLocation": "643:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "656:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "648:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "648:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:16:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "679:0:6"
									},
									"scope": 1015,
									"src": "634:152:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1016,
							"src": "246:544:6",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "81:709:6"
				},
				"id": 6
			}
		}
	}
}